public void testACLModifyJob() throws Exception {
    // CASE 1: If user has provided modify-acl value
    // then it should NOT be overridden by group name
    String actionXml = "<java>" + "<job-tracker>" + getJobTrackerUri() + "</job-tracker>" + "<name-node>" + getNameNodeUri() + "</name-node> <configuration>" + "<property><name>mapreduce.job.acl-modify-job</name><value>MODIFIER</value></property>" + "</configuration>" + "<main-class>MAIN-CLASS</main-class>" + "</java>";
    Context context = createContext(actionXml, "USERS");
    RunningJob job = submitAction(context);
    FileSystem fs = context.getAppFileSystem();
    Configuration jobXmlConf = new XConfiguration(fs.open(new Path(job.getJobFile())));
    // 'MODIFIER'
    String userModifyAcl = jobXmlConf.get(JavaActionExecutor.ACL_MODIFY_JOB);
    // 'USERS'
    String userGroup = context.getWorkflow().getAcl();
    assertFalse(userGroup.equals(userModifyAcl));
    // CASE 2: If user has not provided modify-acl value
    // then it equals group name
    actionXml = "<java>" + "<job-tracker>" + getJobTrackerUri() + "</job-tracker>" + "<name-node>" + getNameNodeUri() + "</name-node> <configuration>" + "</configuration>" + "<main-class>MAIN-CLASS</main-class>" + "</java>";
    context = createContext(actionXml, "USERS");
    job = submitAction(context);
    fs = context.getAppFileSystem();
    jobXmlConf = new XConfiguration(fs.open(new Path(job.getJobFile())));
    userModifyAcl = jobXmlConf.get(JavaActionExecutor.ACL_MODIFY_JOB);
    userGroup = context.getWorkflow().getAcl();
    assertTrue(userGroup.equals(userModifyAcl));
}
