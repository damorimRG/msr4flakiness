public void testSimpleFork() throws WorkflowException {
    LiteWorkflowApp def = new LiteWorkflowApp("wf", "<worklfow-app/>", new StartNodeDef(TestControlNodeHandler.class, "one")).addNode(new NodeDef("one", null, SynchNodeHandler.class, Arrays.asList(new String[] { "f" }))).addNode(new ForkNodeDef("f", TestControlNodeHandler.class, Arrays.asList(new String[] { "two", "three" }))).addNode(new NodeDef("two", null, SynchNodeHandler.class, Arrays.asList(new String[] { "j" }))).addNode(new NodeDef("three", null, SynchNodeHandler.class, Arrays.asList(new String[] { "j" }))).addNode(new JoinNodeDef("j", TestControlNodeHandler.class, "four")).addNode(new NodeDef("four", null, SynchNodeHandler.class, Arrays.asList(new String[] { "end" }))).addNode(new EndNodeDef("end", TestControlNodeHandler.class));
    LiteWorkflowInstance job = new LiteWorkflowInstance(def, new XConfiguration(), "1");
    job.start();
    assertEquals(WorkflowInstance.Status.SUCCEEDED, job.getStatus());
    assertEquals(4, enters.size());
    assertEquals(4, exits.size());
    assertEquals(0, kills.size());
    assertEquals(0, fails.size());
    assertTrue(enters.get("one") < enters.get("two"));
    assertTrue(enters.get("one") < enters.get("three"));
    assertTrue(enters.get("three") < enters.get("four"));
    assertTrue(enters.get("two") < enters.get("four"));
}
