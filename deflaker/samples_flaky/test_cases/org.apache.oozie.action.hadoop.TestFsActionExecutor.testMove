public void testMove() throws Exception {
    FsActionExecutor ae = new FsActionExecutor();
    FileSystem fs = getFileSystem();
    Path source = new Path(getFsTestCaseDir(), "source");
    Path target = new Path(getFsTestCaseDir(), "target");
    Context context = createContext("<fs/>");
    fs.mkdirs(source);
    fs.createNewFile(new Path(source + "/newfile1"));
    fs.mkdirs(target);
    String dest = target.toUri().getPath();
    Path destPath = new Path(dest);
    ae.move(context, new Path(source + "/newfile1"), destPath, false);
    assertTrue(!fs.exists(new Path(source + "/newfile1")));
    assertTrue(fs.exists(target));
    try {
        ae.move(context, new Path(source + "/newfile1"), destPath, false);
        fail();
    } catch (ActionExecutorException ex) {
        assertEquals("FS006", ex.getErrorCode());
    }
    fs.mkdirs(source);
    fs.createNewFile(new Path(source + "/newfile"));
    Path complexTarget = new Path(target + "/a/b");
    fs.mkdirs(complexTarget);
    ae.move(context, source, complexTarget, false);
    assertTrue(fs.exists(new Path(complexTarget + "/" + source.getName())));
    fs.mkdirs(source);
    try {
        ae.move(context, source, new Path(target.toUri().getScheme() + "://foo/" + destPath), false);
        fail();
    } catch (ActionExecutorException ex) {
        assertEquals("FS007", ex.getErrorCode());
    }
    fs.delete(source, true);
    ae.move(context, source, new Path(target.toUri().getPath()), true);
    fs.mkdirs(source);
    fs.delete(target, true);
    ae.move(context, source, new Path(target.toUri().getPath()), true);
    assertTrue(!fs.exists(source));
    assertTrue(fs.exists(target));
}
