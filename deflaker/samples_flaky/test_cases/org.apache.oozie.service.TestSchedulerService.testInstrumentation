public void testInstrumentation() throws Exception {
    assertNotNull(Services.get().get(SchedulerService.class));
    SchedulerService ss = Services.get().get(SchedulerService.class);
    final AtomicInteger counter = new AtomicInteger();
    ss.schedule(new Runnable() {

        public void run() {
            counter.incrementAndGet();
        }
    }, 0, 1, SchedulerService.Unit.SEC);
    waitFor(2 * 1000, new Predicate() {

        public boolean evaluate() throws Exception {
            return false;
        }
    });
    assertTrue(counter.get() > 1);
}
