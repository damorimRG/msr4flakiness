public void testCreateprotoConf() throws Exception {
    Services services = new Services();
    try {
        services.init();
        Reader reader = IOUtils.getResourceAsReader("wf-schema-valid.xml", -1);
        Writer writer = new FileWriter(getTestCaseDir() + "/workflow.xml");
        IOUtils.copyCharStream(reader, writer);
        createTestCaseSubDir("lib");
        writer = new FileWriter(getTestCaseDir() + "/lib/maputil.jar");
        writer.write("bla bla");
        writer.close();
        writer = new FileWriter(getTestCaseDir() + "/lib/reduceutil.so");
        writer.write("bla bla");
        writer.close();
        createTestCaseSubDir("scripts");
        writer = new FileWriter(getTestCaseDir() + "/scripts/myscript.sh");
        writer.write("bla bla");
        writer.close();
        WorkflowAppService wps = Services.get().get(WorkflowAppService.class);
        Configuration jobConf = new XConfiguration();
        jobConf.set(OozieClient.APP_PATH, "file://" + getTestCaseDir() + File.separator + "workflow.xml");
        jobConf.set(OozieClient.USER_NAME, getTestUser());
        Configuration protoConf = wps.createProtoActionConf(jobConf, "authToken", true);
        assertEquals(getTestUser(), protoConf.get(OozieClient.USER_NAME));
        assertEquals(2, protoConf.getStrings(WorkflowAppService.APP_LIB_PATH_LIST).length);
        String f1 = protoConf.getStrings(WorkflowAppService.APP_LIB_PATH_LIST)[0];
        String f2 = protoConf.getStrings(WorkflowAppService.APP_LIB_PATH_LIST)[1];
        String ref1 = "file://" + getTestCaseDir() + "/lib/reduceutil.so";
        String ref2 = "file://" + getTestCaseDir() + "/lib/maputil.jar";
        Assert.assertTrue(f1.equals(ref1) || f1.equals(ref2));
        Assert.assertTrue(f2.equals(ref1) || f2.equals(ref2));
        Assert.assertTrue(!f1.equals(f2));
    } finally {
        services.destroy();
    }
}
