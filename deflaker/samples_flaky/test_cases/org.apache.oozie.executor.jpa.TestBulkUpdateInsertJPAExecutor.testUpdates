/**
 * Test bulk updates by updating coordinator job, workflow job and workflow action
 * @throws Exception
 */
public void testUpdates() throws Exception {
    CoordinatorJobBean coordJob = addRecordToCoordJobTable(CoordinatorJob.Status.PREP, true, true);
    WorkflowJobBean wfJob = addRecordToWfJobTable(WorkflowJob.Status.PREP, WorkflowInstance.Status.PREP);
    WorkflowActionBean action = addRecordToWfActionTable(wfJob.getId(), "1", WorkflowAction.Status.PREP);
    JPAService jpaService = Services.get().get(JPAService.class);
    assertNotNull(jpaService);
    // update the status
    coordJob.setStatus(CoordinatorJob.Status.RUNNING);
    wfJob.setStatus(WorkflowJob.Status.SUCCEEDED);
    action.setStatus(WorkflowAction.Status.RUNNING);
    List<JsonBean> updateList = new ArrayList<JsonBean>();
    // update the list for doing bulk writes
    updateList.add(coordJob);
    updateList.add(wfJob);
    updateList.add(action);
    BulkUpdateInsertJPAExecutor bulkUpdateCmd = new BulkUpdateInsertJPAExecutor();
    bulkUpdateCmd.setUpdateList(updateList);
    jpaService.execute(bulkUpdateCmd);
    // check for expected status after running bulkUpdateJPA
    coordJob = jpaService.execute(new CoordJobGetJPAExecutor(coordJob.getId()));
    assertEquals("RUNNING", coordJob.getStatusStr());
    wfJob = jpaService.execute(new WorkflowJobGetJPAExecutor(wfJob.getId()));
    assertEquals("SUCCEEDED", wfJob.getStatusStr());
    WorkflowActionBean action2 = jpaService.execute(new WorkflowActionGetJPAExecutor(action.getId()));
    assertEquals(WorkflowAction.Status.RUNNING, action2.getStatus());
}
