public void testCheckForExistence() throws Exception {
    ELEvaluator.Context support = new ELEvaluator.Context();
    support.setVariable("a", "A");
    support.addFunction("a", "a", functionA);
    support.addFunction("a", "d", functionD);
    ELEvaluator evaluator = new ELEvaluator(support);
    assertNull(ELEvaluator.getCurrent());
    assertEquals("a", evaluator.evaluate("${a:a()}", String.class));
    assertEquals("a,a", evaluator.evaluate("${a:a()},${a:a()}", String.class));
    try {
        evaluator.evaluate("${a:a(), a:a()}", String.class);
        fail("Evaluated bad expression");
    } catch (ELException ignore) {
    }
    assertTrue(evaluator.checkForExistence("${a:a()}${a:a()}!", "!"));
    assertTrue(evaluator.checkForExistence("${a:a()},${a:a()}", ","));
    assertFalse(evaluator.checkForExistence("${a:d('foo', 'bar')}", ","));
    try {
        evaluator.checkForExistence("${a:a(), a:a()}", ",");
        fail("Parsed bad expression");
    } catch (ELException ignore) {
    }
    assertNull(ELEvaluator.getCurrent());
}
