public void testJobInfo() throws Exception {
    runTest("/v1/job/*", V1JobServlet.class, IS_SECURITY_ENABLED, new Callable<Void>() {

        public Void call() throws Exception {
            MockCoordinatorEngineService.reset();
            Map<String, String> params = new HashMap<String, String>();
            params.put(RestConstants.JOB_SHOW_PARAM, RestConstants.JOB_SHOW_INFO);
            URL url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode());
            assertTrue(conn.getHeaderField("content-type").startsWith(RestConstants.JSON_CONTENT_TYPE));
            JSONObject obj = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()));
            assertEquals(MockCoordinatorEngineService.JOB_ID + 1, obj.get(JsonTags.COORDINATOR_JOB_ID));
            assertEquals(RestConstants.JOB_SHOW_INFO, MockCoordinatorEngineService.did);
            MockCoordinatorEngineService.reset();
            params = new HashMap<String, String>();
            params.put(RestConstants.JOB_SHOW_PARAM, RestConstants.JOB_SHOW_INFO);
            params.put(RestConstants.OFFSET_PARAM, "1");
            params.put(RestConstants.LEN_PARAM, "50");
            url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);
            conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode());
            assertTrue(conn.getHeaderField("content-type").startsWith(RestConstants.JSON_CONTENT_TYPE));
            obj = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()));
            assertEquals(MockCoordinatorEngineService.JOB_ID + 1, obj.get(JsonTags.COORDINATOR_JOB_ID));
            assertEquals(RestConstants.JOB_SHOW_INFO, MockCoordinatorEngineService.did);
            MockCoordinatorEngineService.reset();
            params = new HashMap<String, String>();
            params.put(RestConstants.JOB_SHOW_PARAM, RestConstants.JOB_SHOW_INFO);
            url = createURL(MockCoordinatorEngineService.JOB_ID + (MockCoordinatorEngineService.coordJobs.size() + 1), params);
            conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode());
            assertEquals(RestConstants.JOB_SHOW_INFO, MockCoordinatorEngineService.did);
            return null;
        }
    });
}
