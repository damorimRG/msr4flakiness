public void testNoDashInConversionPattern() throws Exception {
    XLogStreamer.Filter.reset();
    XLogStreamer.Filter.defineParameter("USER");
    XLogStreamer.Filter.defineParameter("GROUP");
    XLogStreamer.Filter.defineParameter("TOKEN");
    XLogStreamer.Filter.defineParameter("APP");
    XLogStreamer.Filter.defineParameter("JOB");
    XLogStreamer.Filter.defineParameter("ACTION");
    XLogStreamer.Filter xf = new XLogStreamer.Filter();
    xf.setParameter("USER", "oozie");
    xf.setLogLevel("DEBUG|INFO");
    // Previously, a dash ("-") was always required somewhere in a line in order for that line to pass the filter; this test
    // checks that this condition is no longer required for log streaming to work
    File log4jFile = new File(getTestCaseConfDir(), "test-log4j.properties");
    ClassLoader cl = Thread.currentThread().getContextClassLoader();
    InputStream is = cl.getResourceAsStream("test-no-dash-log4j.properties");
    IOUtils.copyStream(is, new FileOutputStream(log4jFile));
    setSystemProperty(XLogService.LOG4J_FILE, "test-log4j.properties");
    final XLogService ls = new XLogService();
    ls.init(null);
    assertFalse((doStreamDisabledCheck(ls)));
    LogFactory.getLog("a").info("2009-06-24 02:43:14,505 INFO _L1_:317 - USER[oozie] GROUP[oozie] TOKEN[-] APP[-] JOB[-] " + "ACTION[-] Released Lock");
    LogFactory.getLog("a").info("2009-06-24 02:43:14,505 INFO _L2_:317 - USER[blah] GROUP[oozie] TOKEN[-] APP[-] JOB[-] " + "ACTION[-] Released Lock");
    LogFactory.getLog("a").info("2009-06-24 02:43:14,505 INFO _L3_:317 USER[oozie] GROUP[oozie] TOKEN[-] APP[-] JOB[-] " + "ACTION[-] Released Lock");
    LogFactory.getLog("a").info("2009-06-24 02:43:14,505 INFO _L4_:317 USER[blah] GROUP[oozie] TOKEN[-] APP[-] JOB[-] " + "ACTION[-] Released Lock");
    String out = doStreamLog(ls, xf);
    String[] outArr = out.split("\n");
    // Lines 2 and 4 are filtered out because they have the wrong user
    assertEquals(2, outArr.length);
    assertTrue(outArr[0].contains("_L1_"));
    assertFalse(out.contains("_L2_"));
    assertTrue(outArr[1].contains("_L3_"));
    assertFalse(out.contains("_L4_"));
    ls.destroy();
}
