public void testDeleteCoords() throws Exception {
    CoordinatorJobBean jobA = addRecordToCoordJobTable(CoordinatorJob.Status.SUCCEEDED, false, false);
    CoordinatorActionBean actionA1 = addRecordToCoordActionTable(jobA.getId(), 1, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", 0);
    CoordinatorActionBean actionA2 = addRecordToCoordActionTable(jobA.getId(), 2, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", 0);
    CoordinatorJobBean jobB = addRecordToCoordJobTable(CoordinatorJob.Status.SUCCEEDED, false, false);
    CoordinatorActionBean actionB1 = addRecordToCoordActionTable(jobB.getId(), 1, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", 0);
    CoordinatorActionBean actionB2 = addRecordToCoordActionTable(jobB.getId(), 2, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", 0);
    CoordinatorJobBean jobC = addRecordToCoordJobTable(CoordinatorJob.Status.SUCCEEDED, false, false);
    CoordinatorActionBean actionC1 = addRecordToCoordActionTable(jobC.getId(), 1, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", 0);
    CoordinatorActionBean actionC2 = addRecordToCoordActionTable(jobC.getId(), 2, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", 0);
    JPAService jpaService = Services.get().get(JPAService.class);
    assertNotNull(jpaService);
    List<String> deleteList = new ArrayList<String>();
    deleteList.add(jobA.getId());
    deleteList.add(jobB.getId());
    deleteList.add(jobC.getId());
    jpaService.execute(new CoordJobsDeleteJPAExecutor(deleteList));
    try {
        jpaService.execute(new CoordJobGetJPAExecutor(jobA.getId()));
        fail("Coordinator Job A should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0604, je.getErrorCode());
    }
    try {
        jpaService.execute(new CoordActionGetJPAExecutor(actionA1.getId()));
        fail("Coordinator Action A1 should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0605, je.getErrorCode());
    }
    try {
        jpaService.execute(new CoordActionGetJPAExecutor(actionA2.getId()));
        fail("Coordinator Action A2 should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0605, je.getErrorCode());
    }
    try {
        jpaService.execute(new CoordJobGetJPAExecutor(jobB.getId()));
        fail("Coordinator Job B should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0604, je.getErrorCode());
    }
    try {
        jpaService.execute(new CoordActionGetJPAExecutor(actionB1.getId()));
        fail("Coordinator Action B1 should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0605, je.getErrorCode());
    }
    try {
        jpaService.execute(new CoordActionGetJPAExecutor(actionB2.getId()));
        fail("Coordinator Action B2 should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0605, je.getErrorCode());
    }
    try {
        jpaService.execute(new CoordJobGetJPAExecutor(jobC.getId()));
        fail("Coordinator Job C should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0604, je.getErrorCode());
    }
    try {
        jpaService.execute(new CoordActionGetJPAExecutor(actionC1.getId()));
        fail("Coordinator Action C1 should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0605, je.getErrorCode());
    }
    try {
        jpaService.execute(new CoordActionGetJPAExecutor(actionC2.getId()));
        fail("Coordinator Action C2 should have been deleted");
    } catch (JPAExecutorException je) {
        assertEquals(ErrorCode.E0605, je.getErrorCode());
    }
}
