@Test
public void readTimeoutExpires() throws Exception {
    // write the mocking script
    // SYN_STREAM
    peer.acceptFrame();
    peer.sendFrame().synReply(false, 3, headerEntries("a", "android"));
    // PING
    peer.acceptFrame();
    peer.sendFrame().ping(true, 1, 0);
    peer.play();
    // play it back
    SpdyConnection connection = connection(peer, SPDY3);
    SpdyStream stream = connection.newStream(headerEntries("b", "banana"), true, true);
    stream.setReadTimeout(1000);
    Source source = stream.getSource();
    long startNanos = System.nanoTime();
    try {
        source.read(new Buffer(), 1);
        fail();
    } catch (IOException expected) {
    }
    long elapsedNanos = System.nanoTime() - startNanos;
    assertEquals(1000d, TimeUnit.NANOSECONDS.toMillis(elapsedNanos), 200d);
    assertEquals(1, connection.openStreamCount());
    // Prevent the peer from exiting prematurely.
    connection.ping().roundTripTime();
    // verify the peer received what was expected
    MockSpdyPeer.InFrame synStream = peer.takeFrame();
    assertEquals(TYPE_HEADERS, synStream.type);
}
