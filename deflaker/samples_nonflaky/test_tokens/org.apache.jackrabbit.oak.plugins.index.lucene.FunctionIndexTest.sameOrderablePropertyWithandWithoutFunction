getName
upper
commit
luceneIndex
select * from [nt:base] order by [foo]
asList

    Given an index def with 2 orderable property definitions(non-relative) for same property - one with function and one without
    Indexer should index any changes properly and ordering should work as expected.
     
getTree
bar
/a
Assert
/b
/c
/d
enable
/e
assertOrderedPlanAndQuery
create
 Create nodes that will be served by the index definition that follows
Collections
test
getChild
getLogs
nt:unstructured
finished
/
node
contains
select * from [nt:base] order by upper([foo]) DESC
size
nonFunc
setProperty
name
 Index def with same property - ordered - one with function and one without
Level
jcr:primaryType
nt:base
starting
addChild
emptySet
lucene:upper(/oak:index/upper)
foo
assertFalse
 Now do some change in the node that are covered by above index definition
sameOrderablePropertyWithandWithoutFunction
forLogger
testOak
assertTrue
LogCustomizer
root
select * from [nt:base] order by [foo] DESC
a
fn:upper-case(@foo)
b
c
select * from [nt:base] order by upper([foo])
d
e
createIndex
Type
FulltextIndexConstants
Failed to index the node [/test]
func
customLogs
