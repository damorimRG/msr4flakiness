r2
INDEX_DATA_CHILD_NAME
iterator
wrapForRead
failureInDelete
w1
sameThreadExecutor
w2
w3
w4
getDeleteAttemptCount
add
/foo
getGarbageDetails
defn
Not allowed to delete 
 Now let the file to be deleted
c1
getGarbageSize
testFile
contains
getWorkDir
size
name
t1
t2
next
testFiles
values
readAndAssert
fileExists
 Close would trigger removal of file which are not present in remote
baseDir
assertTrue
root
builder
copy
writeFile
close
deleteFile
clear
assertEquals
getFailedToDeleteFiles
getNodeState
IOUtils
humanReadableByteCount
 No pending deletes left
r1
 t1 and t2 should now be present in local (base dir which back local)
