 from first tier
calculateAccessWeight
mMetaManager
blocksInFirstTier
blocksInSecondTier
put
 update CRF of blocks when blocks are committed
getFirst
block
freeSpaceWithView
objectBlockIdInSecondTier
plan
blockIdEvictedInSecondTier
getSortedCRF
add
 sorted blocks in the second tier
getKey
objectBlockIdInFirstTier
 update CRF of the chosen blocks in case that they are chosen again
cache
BLOCK_ID
 Update CRF of all blocks during each access
anyDirInTier
blockId
tierCapacity
size
blockIdToCRF
validCascadingPlan
access
smallestCapacity
cascadingEvictionTest2
mMetadataView
toEvict
dirIdx
EvictorTestUtils
getBlockId
assertTrue
get
BlockStoreLocation
totalBlocks
toMove
nDirInFirstTier
tierOrdinal
 second tier should be evicted to hold blocks moved from the first tier.
 sorted blocks in the first tier
blockCRF
j
assertEquals
 block with minimum CRF in the first tier needs to be moved to the second tier
k
anyDirInFirstTier
blockIdMovedInFirstTier
SESSION_ID
TieredBlockStoreTestUtils
mEvictor
