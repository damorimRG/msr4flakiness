using extractingResultOf(method, Class)
hasMessage
using extracting(..., Class)
John
extracting
asList
using extracting(...)
should_pass_when_using_extracting_with_list
Name
overridingErrorMessage
tuple
overridingErrorMessage with extracting(String)
getFirst
 THEN
get
Doe
 GIVEN
extractingResultOf
using extractingResultOf(method)
errorsCollected
last
Foo
Foo1
assertThat
Foo3
Jane
Foo2
using extracting(Extractor)
Foo5
 WHEN
Foo6
hasSize
contains
as
names
4
name
hasMessageContaining
first
softly
