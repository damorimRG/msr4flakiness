readResponse
toCharArray
ResponseHandler
EventType
 at the end, which makes the token invalid. => using Base64 mime decoder, which returnes directly properly sized byte[].
StatusCodes
run
String
decode
createContext
getBytes
We did get a header.
HttpClientUtils
jduke
DefaultServer
SPNEGO
theduke
testSpnegoSuccess
context
assertSingleNotificationType
 
headerBytes
StandardCharsets
ProcessedBy
NEGOTIATE
format
getDefaultServerAddress
FlexBase64
execute
fail
doAs
encodeString
GSSContext
getHostString
header
HTTP/
createName
subarray
getMimeDecoder
Base64
values
serverName
WWW_AUTHENTICATE
login
getAuthHeader
result
gssManager
assertTrue
clientSubject
get
GSSManager
client
initSecContext
gotOur200
headers
addHeader
isEstablished
getHeaders
length
getDefaultServerURL
assertEquals
Subject
token
getValue
getStatusCode
ArrayUtils
getStatusLine
toString
getInstance
AUTHORIZATION
Unexpected status code %d
