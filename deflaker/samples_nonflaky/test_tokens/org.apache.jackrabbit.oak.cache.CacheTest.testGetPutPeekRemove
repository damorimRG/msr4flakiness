mem: 0 stack: cold: non-resident:
getUnchecked
put
containsValue
mem: 4 stack: 6 3 4 cold: 2 non-resident: 5 1
mem: 4 stack: 3 4 5 2 cold: 5 non-resident: 1
mem: 0 stack: cold: non-resident: 5
testGetPutPeekRemove
test
mem: 1 stack: 1 cold: non-resident: 5
containsKey
mem: 3 stack: 3 2 1 cold: non-resident:
mem: 4 stack: 2 1 4 3 cold: non-resident:
getMemory
mem: 4 stack: 3 2 1 cold: 5 non-resident: 4
 already on (an optimization)
 5 is cold; will make 4 non-resident
 remove
mem: 4 stack: 1 5 4 3 cold: 2 non-resident: 5
 verify that converting a hot to cold entry will prune the stack
mem: 4 stack: 4 3 1 2 cold: non-resident:
mem: 4 stack: 5 3 2 1 cold: 5 non-resident: 4
mem: 2 stack: 4 3 cold: non-resident:
mem: 3 stack: 3 2 1 cold: non-resident: 4
mem: 4 stack: 4 3 2 5 cold: 2 non-resident: 1
assertFalse
 test clear
mem: 4 stack: 5 4 3 2 cold: 5 non-resident: 1
mem: 4 stack: 6 3 4 5 2 cold: 6 non-resident: 5 1
remove
mem: 4 stack: 4 3 2 1 cold: non-resident:
assertTrue
verify
getIfPresent
mem: 4 stack: 5 3 1 2 cold: 5 non-resident: 4
 strange situation where there is only a non-resident entry
 this will prune the stack (remove entry 5 as entry 2 becomes cold)
intValue
mem: 3 stack: 4 3 2 cold: non-resident:
createCache
clear
isEmpty
 move middle to front
assertEquals
peek
assertNull
mem: 4 stack: 1 2 3 4 cold: non-resident:
mem: 4 stack: 3 1 2 4 cold: non-resident:
mem: 4 stack: 5 3 2 cold: 1 non-resident: 4
mem: 3 stack: 4 3 2 cold: non-resident: 1
