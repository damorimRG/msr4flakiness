    + ((stack1 = container.invokePartial(partials.bar,depth0,{"name":"bar","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")

},"useData":true});

    var stack1;

    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.listItem : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")

foo


});define('bar.hbs', ['handlebars'], function(Handlebars) {

  var templates = Handlebars.templates = Handlebars.templates || {};

    + container.escapeExpression(((helper = (helper = helpers.text || (depth0 != null ? depth0.text : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"text","hash":{},"data":data}) : helper)))

    + "</div>";

partials
  return "<div>"

precompileAMDShouldNotAddSuffixToTemplatePartialHash
  var template = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {

{{precompile 'foo' wrapper='amd'}}{{precompile 'bar' wrapper='amd'}}
bar
  partials['foo'] = template;

  return template;

shouldCompileTo
define('foo.hbs', ['handlebars'], function(Handlebars) {

<div>{{text}}</div>
  partials['bar'] = template;

$
    + " </div>";

  return "<div>Some repeated pattern "

},"usePartial":true,"useData":true});

  var template = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {

  var partials = Handlebars.partials = Handlebars.partials || {};

});
  templates['bar'] = template;

},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {

    var helper;

    + " ";

  return " "

  templates['foo'] = template;

<div>Some repeated pattern {{#each listItem}} {{> bar}} {{/each}} </div>
