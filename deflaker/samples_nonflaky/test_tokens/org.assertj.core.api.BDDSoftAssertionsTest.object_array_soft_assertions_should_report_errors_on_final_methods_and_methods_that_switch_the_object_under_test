John
 the test would fail if any method was not proxyable as the assertion error would not be softly caught
extracting
filteredOn with consumer
bar
doesNotContain
filteredOnNull
children
getFirst
maggie
Sauron
Doe
 GIVEN
homer
Bilbo
errorsCollected
filteredOn
last
in
unchecked
using flatExtracting on Iterable
flatExtracting
containsOnlyOnce
then
containsSubsequence
assertThat
filteredOn firstName = John
 WHEN
hasSize
contains
as
Baggins
123
startsWith Jo
filteredOn firstName in {John, Frodo}
isSubsetOf
size
containsOnly
name
endsWith
doesNotContainSequence
filteredOn firstName = null
isNotEmpty
frodo
firstNameFunction
Messi
softly
Sam
Frodo
filteredOnAssertions
Ronaldo
using flatExtracting(String fieldOrPropertyName)
foo
doesNotContainSubsequence
using flatExtracting on Iterable with exception
Aragorn
characters
tuple
containsExactly
array
 THEN
get
containsExactlyInAnyOrder
fred
object_array_soft_assertions_should_report_errors_on_final_methods_and_methods_that_switch_the_object_under_test
sam
extractingResultOf
Jo
isEmpty
filteredOn with condition
containsSequence
Jane
gandalf
bart
names
hasMessageContaining
toString
containsAnyOf
first
startsWith
