
\]
select * from [nt:unstructured] as [c] 
(x = 3) and (b = 2), 
from nt:unstructured as c where 
(isdescendantnode(c, /tmp)) and (d = 4) and (a = 1), 
optimized
where ([a]=1 or [b]=2 or ([c]=3 and [d]=4)) and ([x]=5 or [y]=6)
replaceAll
qeSettings
(y = 6) and ((c = 3) and (d = 4)), 
SQL2ParserTest
assertNotNull
(y = 4) and (b = 2), 
statement
(x = 5) and (a = 1)
(y = 6) and (a = 1), 
(x = 3) and (a = 1)
original
(x = 5) and ((c = 3) and (d = 4)), 
buildAlternativeQuery
expected
(isdescendantnode(c, /tmp)) and (d = 4) and (b = 2), 
(x = 5) and (b = 2), 
where ([a]=1 or [b]=2) and ([x]=3 or [y]=4)
getMappings
assertEquals
parse
(isdescendantnode(c, /tmp)) and (c = 3) and (a = 1)
where isdescendantnode('/tmp') 
(isdescendantnode(c, /tmp)) and (c = 3) and (b = 2), 
optimiseAndOrAnd
parser
select c.jcr:primaryType as c.jcr:primaryType 
c\.
, 
getNodeTypes
createTestSQL2Parser
toString
(y = 4) and (a = 1), 
 union 
(y = 6) and (b = 2), 
and ([a]=1 or [b]=2) and ([c]=3 or [d]=4)
\[
