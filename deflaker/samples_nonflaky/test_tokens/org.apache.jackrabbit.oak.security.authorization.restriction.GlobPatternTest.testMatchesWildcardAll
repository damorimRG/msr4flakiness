e/*
assertMatch
 direct foo-descendant segment starting with "cat"
 foo itself
/a/b/c/d/e/cats
/a/b/c/e/f
/a/b/c/f/acat
/cat*
 descendant of sibling named 'e'
/a/b/c/e
/a/b/c/d
put
/a/b/ce/f/g/h
/a/b/ced/d/e/f
/a
 no intermediate segment
/a/b/c/d/f/efg
 restriction "*/cat" matches all descendants of /foo and foo's siblings that have a name segment "cat"
 missing /*
 not matching node path
/a/b/c/e/d/e/g
 and child nodes of either.
/a/b/c/e/d/e/f
/a/b/c/acat
*
/
/a/b/cat
 restriction /*cat/*  matches all descendants of /foo that have an intermediate segment ending with 'cat'
testMatchesWildcardAll
 not-matching
 restriction /*cat  matches all children of /a/b/c whose path ends with "cat"
/*/cat
/a/b/c/d/acat/e
/a/b/c/d/acat
/c/d
 missing *e/*
 not matching node path + /
/a/b/c/d/f
/a/b/c/d/e
 restriction "*cat" matches all siblings and descendants of /foo that have a name ending with cat
/a/b/c/d/e/
/a/b/cd/e
 descendant of sibling with name ending with 'e'
 descendant with name segment ending with 'e'
/a/b/c/cat/s
/a/b/c/gge
 all descendants of '/a/b/ce'
get
/a/b/c/e/f/g/h
/a/b/ced/cat
/a/b/c/d/gge
 matching
/a/b/cat/ed/f/f
 restriction "*cat/*" matches all siblings and descendants of /foo that have an intermediate segment ending with 'cat'
/a/b/cde/d/e/f
 child of foo
 missing e/
/b/c
testPath
 all descendants of '/'
 descendant with name segment 'e'
*e
 missing * after ce/
/b/
/a/b/c/cat/d
 missing *e
GlobPattern
/a/b/ce
*e/*
/a/b/ceeeeeee/f/g/h
 ignore trailing / in test path
/a/b/c/d/cat
/a/b/c/d/cata/e
 all descendants of '/a/b/c/e'
/a/b/ced/f/cat
/a/b/cd/f/name
/a/b/cd/f/e
/a/b/ceg
create
/a/b/c/de/f
/a/b/c/d/f/f
/a/b/c/cate
/a/b/cee/d/e/f
/a/b/c/f/cat
/a/b/c/ed/f/f
/*cat
/a/b/c/d/e/cat
tests
 ... nor do siblings' children
 siblings do no match
/a/b/c/d/cats
/a/b/c/d/f/e/f
/a/b/c/d/cate
/a/b/c/cats
*/e
/a/b/c/ef/g
 sibling containing intermediate segment
/a/b/chee
/a/b/c/cats/d/e/f
 sibling whose name ends with 'e'
/a/b/cd/name
 restriction /*/cat  matches all non-direct descendants of /foo named "cat"
/a/b/c/ef
/a/b/c
 child of the sibling
/*
 not matching siblings of node path
 cat only intermediate segment
keySet
/a/b/ce/
/a/b/c/cat
/a/b/c/d/e/f
/a/b/c/e/
 sibling ending with e
/a/b/c/a/cat
/a/b/c/d/e/f/cat
gp
/*e/*
/a/b/ce/d/e/f
 sibling
 restriction "*" matches /foo, all siblings of foo and foo's and the siblings' descendants
/a/b/cde
/a/b/cde/e/f
/a/b/c/d/cat/e
