- these types were compared with the following comparators:%n
.*oo
- collection order was ignored in the following fields in the comparison: foo, bar, foo.bar%n
ignoreFields
- collection order was ignored in the fields matching the following regexes in the comparison: f.*, ba., foo.*%n
STANDARD_REPRESENTATION
bar
baz
 GIVEN
ALWAY_EQUALS_TUPLE
f.*
  - the following types: java.lang.String, com.google.common.collect.Multimap%n
setIgnoreAllActualNullFields
- field comparators take precedence over type comparators.%n
format
ignoreFieldsMatchingRegexes
foo.baz
  - java.lang.Double -> DoubleComparator[precision=1.0E-15]%n
assertThat
 @format:off
 WHEN
foo.bar
- collection order was ignored in all fields in the comparison%n
  - java.lang.Integer -> AbsValueComparator%n
  - the following fields: foo, baz, foo.baz%n
- overridden equals methods were used in the comparison, except for:%n
oo.ba
ignoreOverriddenEqualsForTypes
bar.baz
  - foo -> AlwaysEqualComparator%n
foo
- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).%n
registerComparatorForType
ignoreOverriddenEqualsForFieldsMatchingRegexes
ba.
- the following fields were ignored in the comparison: foo, bar, foo.bar%n
foo.*
multiLineDescription
- all actual null fields were ignored in the comparison%n
recursiveComparisonConfiguration
  - org.assertj.core.groups.Tuple -> AlwaysEqualComparator%n
registerComparatorForField
.ar
  - java.lang.Float -> FloatComparator[precision=1.0E-6]%n
ignoreCollectionOrderInFieldsMatchingRegexes
ignoreCollectionOrderInFields
fielLocation
  - the types matching the following regexes: .*oo, .ar, oo.ba%n
ignoreOverriddenEqualsForFields
- the fields matching the following regexes were ignored in the comparison: f.*, .ba., ..b%%sr..%n
AlwaysEqualComparator
..b%sr..
- these fields were compared with the following comparators:%n
alwaysDifferent
ignoreCollectionOrder
.ba.
should_show_a_complete_multiline_description
isEqualTo
  - bar.baz -> AlwaysDifferentComparator%n
