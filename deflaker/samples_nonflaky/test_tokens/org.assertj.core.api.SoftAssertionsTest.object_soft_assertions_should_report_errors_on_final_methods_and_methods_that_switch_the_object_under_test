hasMessage
John
 the test would fail if any method was not proxyable as the assertion error would not be softly caught
extracting
alphabet
asList
[extracting(first)] error message
[asList()] error message
Doe
 GIVEN
asString
asList()
vowels
errorsCollected
last
unchecked
assertThat
object_soft_assertions_should_report_errors_on_final_methods_and_methods_that_switch_the_object_under_test
 WHEN
1
hasSize
as
contains
123
2
extracting(Name::getFirst, Name::getLast)
[extracting("first", "last")] error message
abcdefghijklmnopqrstuvwxyz
name
frodo
softly
extracting("first", "last")
asString()
overridingErrorMessage
 THEN
get
Jack
extracting(Name::getFirst)
a
abc
e
error message
[extracting(Name::getFirst, Name::getLast)] error message
o
gandalf
extracting(first)
u
[extracting(Name::getFirst)] error message
[asString()] error message
isEqualTo
first
startsWith
