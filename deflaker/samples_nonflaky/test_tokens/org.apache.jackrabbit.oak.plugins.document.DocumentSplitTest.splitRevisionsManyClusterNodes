getPreviousIdFor
revs
commit
/test
splitOps
split
getClusterId
Lists
find
assertNotNull
id
mk
add
 create some commits for each cluster node
/
NO_BINARY
Revision
size
setMapEntry
doc
prevId
findAndUpdate
 OAK-1770
getNodeStore
newRevision
 the second most recent revision
getId
clusterId
prop
get
+"test":{}
setRevision
value
Path
numClusterNodes
op
NODES
getIdFromPath
c
newArrayList
getHeadRevision
getDocumentStore
j
assertEquals
store
NodeDocument
splitRevisionsManyClusterNodes
r
Utils
NUM_REVS_THRESHOLD
fromString
