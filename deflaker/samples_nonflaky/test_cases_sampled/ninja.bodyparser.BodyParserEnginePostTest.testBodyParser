@Test
public void testBodyParser() {
    // some setup for this method:
    String dateString = "2014-10-10";
    String dateTimeString = "2014-10-10T20:09:10";
    Map<String, String[]> map = new HashMap<>();
    map.put("integerPrimitive", new String[] { "1000" });
    map.put("integerObject", new String[] { "2000" });
    map.put("longPrimitive", new String[] { "3000" });
    map.put("longObject", new String[] { "4000" });
    map.put("floatPrimitive", new String[] { "1.234" });
    map.put("floatObject", new String[] { "2.345" });
    map.put("doublePrimitive", new String[] { "3.456" });
    map.put("doubleObject", new String[] { "4.567" });
    map.put("string", new String[] { "aString" });
    map.put("characterPrimitive", new String[] { "a" });
    map.put("characterObject", new String[] { "b" });
    map.put("date", new String[] { dateString });
    map.put("timestamp", new String[] { dateTimeString });
    map.put("somethingElseWhatShouldBeSkipped", new String[] { "somethingElseWhatShouldBeSkipped" });
    Mockito.when(context.getParameters()).thenReturn(map);
    Mockito.when(context.getValidation()).thenReturn(validation);
    // do
    TestObject testObject = bodyParserEnginePost.invoke(context, TestObject.class);
    // and test:
    assertThat(testObject.integerPrimitive, CoreMatchers.equalTo(1000));
    assertThat(testObject.integerObject, CoreMatchers.equalTo(2000));
    assertThat(testObject.longPrimitive, CoreMatchers.equalTo(3000L));
    assertThat(testObject.longObject, CoreMatchers.equalTo(4000L));
    assertThat(testObject.floatPrimitive, CoreMatchers.equalTo(1.234F));
    assertThat(testObject.floatObject, CoreMatchers.equalTo(2.345F));
    assertThat(testObject.doublePrimitive, CoreMatchers.equalTo(3.456D));
    assertThat(testObject.doubleObject, CoreMatchers.equalTo(4.567D));
    assertThat(testObject.string, equalTo("aString"));
    assertThat(testObject.characterPrimitive, equalTo('a'));
    assertThat(testObject.characterObject, equalTo('b'));
    assertThat(testObject.date, CoreMatchers.equalTo(new LocalDateTime(dateString).toDate()));
    assertThat(testObject.timestamp, CoreMatchers.equalTo(new LocalDateTime(dateTimeString).toDate()));
    assertFalse(validation.hasViolations());
}
