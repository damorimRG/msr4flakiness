@Test(timeout = 10000)
public void refreshAndCpuUsage() throws InterruptedException {
    SysInfoWindowsMock tester = new SysInfoWindowsMock();
    tester.setSysinfoString("17177038848,8589467648,15232745472,6400417792,1,2805000,6261812," + "1234567,2345678,3456789,4567890\r\n");
    // info str derived from windows shell command has \r\n termination
    tester.getAvailablePhysicalMemorySize();
    // verify information has been refreshed
    assertEquals(6400417792L, tester.getAvailablePhysicalMemorySize());
    assertEquals((float) CpuTimeTracker.UNAVAILABLE, tester.getCpuUsagePercentage(), 0.0);
    assertEquals((float) CpuTimeTracker.UNAVAILABLE, tester.getNumVCoresUsed(), 0.0);
    tester.setSysinfoString("17177038848,8589467648,15232745472,5400417792,1,2805000,6263012," + "1234567,2345678,3456789,4567890\r\n");
    tester.getAvailablePhysicalMemorySize();
    // verify information has not been refreshed
    assertEquals(6400417792L, tester.getAvailablePhysicalMemorySize());
    assertEquals((float) CpuTimeTracker.UNAVAILABLE, tester.getCpuUsagePercentage(), 0.0);
    assertEquals((float) CpuTimeTracker.UNAVAILABLE, tester.getNumVCoresUsed(), 0.0);
    // advance clock
    tester.advance(SysInfoWindows.REFRESH_INTERVAL_MS + 1);
    // verify information has been refreshed
    assertEquals(5400417792L, tester.getAvailablePhysicalMemorySize());
    assertEquals((6263012 - 6261812) * 100F / (SysInfoWindows.REFRESH_INTERVAL_MS + 1f) / 1, tester.getCpuUsagePercentage(), 0.0);
    assertEquals((6263012 - 6261812) / (SysInfoWindows.REFRESH_INTERVAL_MS + 1f) / 1, tester.getNumVCoresUsed(), 0.0);
}
