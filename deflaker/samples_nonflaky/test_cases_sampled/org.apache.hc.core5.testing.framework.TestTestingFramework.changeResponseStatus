@Test
public void changeResponseStatus() throws Exception {
    final ClientTestingAdapter adapter = new ClassicTestClientTestingAdapter() {

        @Override
        public Map<String, Object> execute(final String defaultURI, final Map<String, Object> request, final TestingFrameworkRequestHandler requestHandler, final Map<String, Object> responseExpectations) throws TestingFrameworkException {
            // change the responseExpectations from what is expected.  The change should be ignored
            // by the request handler, and a 200 should actually be returned.
            Assert.assertEquals(200, responseExpectations.get(STATUS));
            // The next line is needed because we have to make a copy of the responseExpectations.
            // It is an unmodifiable map.
            final Map<String, Object> tempResponseExpectations = new HashMap<>(responseExpectations);
            tempResponseExpectations.put(STATUS, 201);
            final Map<String, Object> response = super.execute(defaultURI, request, requestHandler, tempResponseExpectations);
            Assert.assertEquals(200, response.get(STATUS));
            return response;
        }
    };
    final TestingFramework framework = newFrameworkAndSetAdapter(adapter);
    framework.addTest();
    framework.runTests();
}
