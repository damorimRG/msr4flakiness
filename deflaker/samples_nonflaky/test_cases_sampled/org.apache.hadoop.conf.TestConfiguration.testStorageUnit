@Test
public void testStorageUnit() {
    final String key = "valid.key";
    final String nonKey = "not.a.key";
    Configuration conf = new Configuration(false);
    conf.setStorageSize(key, 10, MB);
    // This call returns the value specified in the Key as a double in MBs.
    assertThat(conf.getStorageSize(key, "1GB", MB), is(10.0));
    // Since this key is missing, This call converts the default value of  1GB
    // to MBs are returns that value.
    assertThat(conf.getStorageSize(nonKey, "1GB", MB), is(1024.0));
    conf.setStorageSize(key, 1024, BYTES);
    assertThat(conf.getStorageSize(key, 100, KB), is(1.0));
    assertThat(conf.getStorageSize(nonKey, 100.0, KB), is(100.0));
    // We try out different kind of String formats to see if they work and
    // during read, we also try to read using a different Storage Units.
    conf.setStrings(key, "1TB");
    assertThat(conf.getStorageSize(key, "1PB", GB), is(1024.0));
    conf.setStrings(key, "1bytes");
    assertThat(conf.getStorageSize(key, "1PB", KB), is(0.001));
    conf.setStrings(key, "2048b");
    assertThat(conf.getStorageSize(key, "1PB", KB), is(2.0));
    conf.setStrings(key, "64 GB");
    assertThat(conf.getStorageSize(key, "1PB", GB), is(64.0));
    // Match the parsing patterns of getLongBytes, which takes single char
    // suffix.
    conf.setStrings(key, "1T");
    assertThat(conf.getStorageSize(key, "1GB", TB), is(1.0));
    conf.setStrings(key, "1k");
    assertThat(conf.getStorageSize(key, "1GB", KB), is(1.0));
    conf.setStrings(key, "10m");
    assertThat(conf.getStorageSize(key, "1GB", MB), is(10.0));
    // Missing format specification, this should throw.
    conf.setStrings(key, "100");
    thrown.expect(IllegalArgumentException.class);
    conf.getStorageSize(key, "1PB", GB);
    // illegal format specification, this should throw.
    conf.setStrings(key, "1HB");
    thrown.expect(IllegalArgumentException.class);
    conf.getStorageSize(key, "1PB", GB);
    // Illegal number  specification, this should throw.
    conf.setStrings(key, "HadoopGB");
    thrown.expect(IllegalArgumentException.class);
    conf.getStorageSize(key, "1PB", GB);
}
