@Test
public void testReadFrameMultipleSmallBuffer() throws Exception {
    final FrameInputBuffer inBuffer = new FrameInputBuffer(new BasicH2TransportMetrics(), 20, 10);
    final ReadableByteChannelMock readableChannel = new ReadableByteChannelMock(new byte[] { 0, 0, 10, 0, 8, 0, 0, 0, 8, 4, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 8, 2, 2, 2, 2, 2, 0, 0, 10, 0, 9, 0, 0, 0, 8, 4, 3, 3, 3, 3, 3, 0, 0, 0, 0 });
    final RawFrame frame1 = inBuffer.read(readableChannel);
    Assert.assertEquals(FrameType.DATA, FrameType.valueOf(frame1.getType()));
    Assert.assertEquals(8, frame1.getFlags());
    Assert.assertEquals(8, frame1.getStreamId());
    final ByteBuffer payload1 = frame1.getPayloadContent();
    Assert.assertNotNull(payload1);
    Assert.assertEquals(5, payload1.remaining());
    Assert.assertEquals(1, payload1.get());
    Assert.assertEquals(1, payload1.get());
    Assert.assertEquals(1, payload1.get());
    Assert.assertEquals(1, payload1.get());
    Assert.assertEquals(1, payload1.get());
    final RawFrame frame2 = inBuffer.read(readableChannel);
    Assert.assertEquals(FrameType.DATA, FrameType.valueOf(frame2.getType()));
    Assert.assertEquals(0, frame2.getFlags());
    Assert.assertEquals(8, frame2.getStreamId());
    final ByteBuffer payload2 = frame2.getPayloadContent();
    Assert.assertNotNull(payload2);
    Assert.assertEquals(5, payload2.remaining());
    Assert.assertEquals(2, payload2.get());
    Assert.assertEquals(2, payload2.get());
    Assert.assertEquals(2, payload2.get());
    Assert.assertEquals(2, payload2.get());
    Assert.assertEquals(2, payload2.get());
    final RawFrame frame3 = inBuffer.read(readableChannel);
    Assert.assertEquals(FrameType.DATA, FrameType.valueOf(frame3.getType()));
    Assert.assertEquals(FrameFlag.of(FrameFlag.END_STREAM, FrameFlag.PADDED), frame3.getFlags());
    Assert.assertEquals(8, frame3.getStreamId());
    final ByteBuffer payload3 = frame3.getPayloadContent();
    Assert.assertNotNull(payload3);
    Assert.assertEquals(5, payload3.remaining());
    Assert.assertEquals(3, payload3.get());
    Assert.assertEquals(3, payload3.get());
    Assert.assertEquals(3, payload3.get());
    Assert.assertEquals(3, payload3.get());
    Assert.assertEquals(3, payload3.get());
    Assert.assertEquals(-1, readableChannel.read(ByteBuffer.allocate(1024)));
}
