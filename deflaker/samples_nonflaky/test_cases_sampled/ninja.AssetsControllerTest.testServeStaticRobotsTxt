@Test
public void testServeStaticRobotsTxt() throws Exception {
    Result result = Results.ok();
    when(contextRenderable.getRequestPath()).thenReturn("/robots.txt");
    when(mimeTypes.getContentType(Mockito.eq(contextRenderable), Mockito.anyString())).thenReturn("mimetype");
    when(contextRenderable.finalizeHeadersWithoutFlashAndSessionCookie(Mockito.eq(result))).thenReturn(responseStreams);
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    when(responseStreams.getOutputStream()).thenReturn(byteArrayOutputStream);
    Result result2 = assetsController.serveStatic();
    Renderable renderable = (Renderable) result2.getRenderable();
    renderable.render(contextRenderable, result);
    // test streaming of resource:
    // => not modified:
    // check etag has been called
    verify(httpCacheToolkit).addEtag(Mockito.eq(contextRenderable), Mockito.eq(result), Mockito.anyLong());
    verify(contextRenderable).finalizeHeadersWithoutFlashAndSessionCookie(resultCaptor.capture());
    // make sure we get the correct result...
    assertEquals(Result.SC_200_OK, resultCaptor.getValue().getStatusCode());
    // we mocked this one:
    assertEquals("mimetype", result.getContentType());
    String content = byteArrayOutputStream.toString();
    assertThat(content, containsString("User-agent: *"));
    assertThat(content, containsString("Disallow: /"));
}
