@Test
public void testReloginForLoginFromSubject() throws Exception {
    KerberosPrincipal principal1 = new KerberosPrincipal("user1");
    File keytab1 = new File(workDir, "user1.keytab");
    kdc.createPrincipal(keytab1, principal1.getName());
    KerberosPrincipal principal2 = new KerberosPrincipal("user2");
    File keytab2 = new File(workDir, "user2.keytab");
    kdc.createPrincipal(keytab2, principal2.getName());
    // login principal1 with a keytab.
    UserGroupInformation.loginUserFromKeytab(principal1.getName(), keytab1.getPath());
    final UserGroupInformation originalLoginUser = UserGroupInformation.getLoginUser();
    Assert.assertNotNull(getUser(originalLoginUser.getSubject()).getLogin());
    originalLoginUser.doAs(new PrivilegedExceptionAction<Void>() {

        @Override
        public Void run() throws IOException {
            KerberosTicket originalLoginUserTicket = checkTicketAndKeytab(originalLoginUser, principal1, true);
            // login principal2 from a subject with keytab.  it's external so
            // no login context should be attached to the user.
            final Subject subject = UserGroupInformation.loginUserFromKeytabAndReturnUGI(principal2.getName(), keytab2.getPath()).getSubject();
            removeUser(subject);
            // verify the new login user is external.
            UserGroupInformation.loginUserFromSubject(subject);
            Assert.assertNull(getUser(subject).getLogin());
            UserGroupInformation extLoginUser = UserGroupInformation.getLoginUser();
            KerberosTicket extLoginUserTicket = checkTicketAndKeytab(extLoginUser, principal2, false);
            // verify subject-based login user does not get a new ticket, and
            // original login user not affected.
            extLoginUser.reloginFromKeytab();
            Assert.assertSame(extLoginUserTicket, checkTicketAndKeytab(extLoginUser, principal2, false));
            Assert.assertSame(originalLoginUserTicket, checkTicketAndKeytab(originalLoginUser, principal1, true));
            // verify original login user gets a new ticket, new login user
            // not affected.
            originalLoginUser.reloginFromKeytab();
            Assert.assertNotSame(originalLoginUserTicket, checkTicketAndKeytab(originalLoginUser, principal1, true));
            Assert.assertSame(extLoginUserTicket, checkTicketAndKeytab(extLoginUser, principal2, false));
            return null;
        }
    });
}
