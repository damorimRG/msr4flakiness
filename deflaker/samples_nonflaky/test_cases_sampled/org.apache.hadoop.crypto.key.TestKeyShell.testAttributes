@Test
public void testAttributes() throws Exception {
    int rc;
    KeyShell ks = new KeyShell();
    ks.setConf(new Configuration());
    /* Simple creation test */
    final String[] args1 = { "create", "keyattr1", "-provider", jceksProvider, "-attr", "foo=bar" };
    rc = ks.run(args1);
    assertEquals(0, rc);
    assertTrue(outContent.toString().contains("keyattr1 has been " + "successfully created"));
    /* ...and list to see that we have the attr */
    String listOut = listKeys(ks, true);
    assertTrue(listOut.contains("keyattr1"));
    assertTrue(listOut.contains("attributes: [foo=bar]"));
    /* Negative tests: no attribute */
    outContent.reset();
    final String[] args2 = { "create", "keyattr2", "-provider", jceksProvider, "-attr", "=bar" };
    rc = ks.run(args2);
    assertEquals(1, rc);
    /* Not in attribute = value form */
    outContent.reset();
    args2[5] = "foo";
    rc = ks.run(args2);
    assertEquals(1, rc);
    /* No attribute or value */
    outContent.reset();
    args2[5] = "=";
    rc = ks.run(args2);
    assertEquals(1, rc);
    /* Legal: attribute is a, value is b=c */
    outContent.reset();
    args2[5] = "a=b=c";
    rc = ks.run(args2);
    assertEquals(0, rc);
    listOut = listKeys(ks, true);
    assertTrue(listOut.contains("keyattr2"));
    assertTrue(listOut.contains("attributes: [a=b=c]"));
    /* Test several attrs together... */
    outContent.reset();
    final String[] args3 = { "create", "keyattr3", "-provider", jceksProvider, "-attr", "foo = bar", "-attr", " glarch =baz  ", "-attr", "abc=def" };
    rc = ks.run(args3);
    assertEquals(0, rc);
    /* ...and list to ensure they're there. */
    listOut = listKeys(ks, true);
    assertTrue(listOut.contains("keyattr3"));
    assertTrue(listOut.contains("[foo=bar]"));
    assertTrue(listOut.contains("[glarch=baz]"));
    assertTrue(listOut.contains("[abc=def]"));
    /* Negative test - repeated attributes should fail */
    outContent.reset();
    final String[] args4 = { "create", "keyattr4", "-provider", jceksProvider, "-attr", "foo=bar", "-attr", "foo=glarch" };
    rc = ks.run(args4);
    assertEquals(1, rc);
    /* Clean up to be a good citizen */
    deleteKey(ks, "keyattr1");
    deleteKey(ks, "keyattr2");
    deleteKey(ks, "keyattr3");
}
