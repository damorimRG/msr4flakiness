/**
 * Test that MutableRollingAverages gives expected results after
 * initialization.
 * @throws Exception
 */
@Test(timeout = 30000)
public void testMutableRollingAveragesMetric() throws Exception {
    DummyTestMetric testMetric = new DummyTestMetric();
    testMetric.create();
    testMetric.add("metric1", 100);
    testMetric.add("metric1", 900);
    testMetric.add("metric2", 1000);
    testMetric.add("metric2", 1000);
    GenericTestUtils.waitFor(new Supplier<Boolean>() {

        @Override
        public Boolean get() {
            testMetric.collectThreadLocalStates();
            return testMetric.getStats().size() > 0;
        }
    }, 500, 5000);
    MetricsRecordBuilder rb = getMetrics(DummyTestMetric.METRIC_NAME);
    double metric1Avg = getDoubleGauge("[Metric1]RollingAvgTesting", rb);
    double metric2Avg = getDoubleGauge("[Metric2]RollingAvgTesting", rb);
    Assert.assertTrue("The rolling average of metric1 is not as expected", metric1Avg == 500.0);
    Assert.assertTrue("The rolling average of metric2 is not as expected", metric2Avg == 1000.0);
}
