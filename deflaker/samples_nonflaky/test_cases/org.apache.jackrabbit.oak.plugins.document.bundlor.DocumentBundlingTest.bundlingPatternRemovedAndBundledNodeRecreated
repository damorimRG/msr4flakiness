@Test
public void bundlingPatternRemovedAndBundledNodeRecreated() throws Exception {
    NodeBuilder builder = store.getRoot().builder();
    NodeBuilder fileNode = newNode("nt:file");
    fileNode.child("jcr:content").setProperty("jcr:data", "foo");
    builder.child("test").setChildNode("book.jpg", fileNode.getNodeState());
    merge(builder);
    assertTrue(hasNodeProperty("/test/book.jpg", concat("jcr:content", DocumentBundlor.META_PROP_BUNDLING_PATH)));
    // Delete the bundled node structure
    builder = store.getRoot().builder();
    builder.child("test").child("book.jpg").remove();
    merge(builder);
    // Change bundling pattern
    builder = store.getRoot().builder();
    NodeBuilder ntfile = childBuilder(builder, BundlingConfigHandler.CONFIG_PATH + "/nt:file");
    ntfile.remove();
    merge(builder);
    // Create a new node with same path
    builder = store.getRoot().builder();
    fileNode = newNode("nt:file");
    fileNode.child("jcr:content").setProperty("jcr:data", "foo");
    fileNode.child("metadata").setProperty("jcr:data", "foo");
    fileNode.child("comments").setProperty("jcr:data", "foo");
    builder.child("test").setChildNode("book.jpg", fileNode.getNodeState());
    merge(builder);
    // New pattern should be effective
    assertNotNull(getNodeDocument("/test/book.jpg"));
    assertFalse(hasNodeProperty("/test/book.jpg", concat("metadata", DocumentBundlor.META_PROP_BUNDLING_PATH)));
    assertFalse(hasNodeProperty("/test/book.jpg", concat("comments", DocumentBundlor.META_PROP_BUNDLING_PATH)));
}
