@Test
public void auxAndTimeZoneShouldNotConflict() {
    TimeZone utc = TimeZone.getTimeZone("UTC");
    Calendar cal = Calendar.getInstance(utc);
    cal.set(2003, 4, 20, 10, 55);
    {
        FileNamePattern fnp = new FileNamePattern("foo%d{yyyy-MM-dd'T'HH:mm, aux, Australia/Perth}", context);
        // Perth is 8 hours ahead of UTC
        assertEquals("foo2003-05-20T18:55", fnp.convert(cal.getTime()));
        assertNull(fnp.getPrimaryDateTokenConverter());
    }
    {
        FileNamePattern fnp = new FileNamePattern("folder/%d{yyyy/MM, aux, Australia/Perth}/test.%d{yyyy-MM-dd'T'HHmm, Australia/Perth}.log", context);
        assertEquals("folder/2003/05/test.2003-05-20T1855.log", fnp.convert(cal.getTime()));
        assertNotNull(fnp.getPrimaryDateTokenConverter());
    }
}
