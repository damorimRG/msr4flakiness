@Test
public void testOldReclaimerDefaultingToFull() {
    // 1 retained generation
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(0, 0, false), 1));
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(1, 1, false), 1), "00w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(2, 1, false), 1), "00w", "11w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(3, 1, false), 1), "00w", "11w", "21w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(4, 2, false), 1), "00w", "11w", "11c", "21w", "21c", "31w", "31c");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(5, 2, false), 1), "00w", "11w", "11c", "21w", "21c", "31w", "31c", "42w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(6, 2, false), 1), "00w", "11w", "11c", "21w", "21c", "31w", "31c", "42w", "52w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(7, 3, false), 1), "00w", "11w", "11c", "21w", "21c", "31w", "31c", "42w", "42c", "52w", "52c", "62w", "62c");
    // 2 retained generation
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(0, 0, false), 2));
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(1, 1, false), 2));
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(2, 1, false), 2), "00w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(3, 1, false), 2), "00w", "11w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(4, 2, false), 2), "00w", "11w", "21w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(5, 2, false), 2), "00w", "11w", "21w", "31w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(6, 2, false), 2), "00w", "11w", "21w", "31w", "42w");
    assertReclaim(newOldReclaimer(FULL, newGCGeneration(7, 3, false), 2), "00w", "11w", "11c", "21w", "21c", "31w", "31c", "42w", "52w");
}
