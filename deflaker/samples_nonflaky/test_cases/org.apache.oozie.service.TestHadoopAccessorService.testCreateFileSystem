public void testCreateFileSystem() throws Exception {
    HadoopAccessorService has = Services.get().get(HadoopAccessorService.class);
    Configuration conf = has.createConfiguration(getJobTrackerUri());
    FileSystem fs = has.createFileSystem(getTestUser(), new URI(getNameNodeUri()), conf);
    assertNotNull(fs);
    fs.exists(new Path(getNameNodeUri(), "/foo"));
    try {
        fs = has.createFileSystem("invalid-user", new URI(getNameNodeUri()), conf);
        assertNotNull(fs);
        fs.exists(new Path(getNameNodeUri(), "/foo"));
        fail("Should have thrown exception because not allowed to impersonate 'invalid-user'");
    } catch (RemoteException ex) {
        assertEquals(AuthorizationException.class.getName(), ex.getClassName());
    }
    JobConf conf2 = new JobConf(false);
    conf2.set("fs.default.name", getNameNodeUri());
    try {
        has.createFileSystem(getTestUser(), new URI(getNameNodeUri()), conf2);
        fail("Should have thrown exception because Configuration not created by HadoopAccessorService");
    } catch (HadoopAccessorException ex) {
        assertEquals(ErrorCode.E0903, ex.getErrorCode());
    }
}
