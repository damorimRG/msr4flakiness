public void testWorkflowRun() throws Exception {
    String wfApp = "<workflow-app xmlns='uri:oozie:workflow:0.1' name='test-wf'>" + "    <start to='end'/>" + "    <end name='end'/>" + "</workflow-app>";
    FileSystem fs = getFileSystem();
    Path appPath = new Path(getFsTestCaseDir(), "app");
    fs.mkdirs(appPath);
    fs.mkdirs(new Path(appPath, "lib"));
    fs.mkdirs(new Path("input-data"));
    Writer inputWriter = new OutputStreamWriter(fs.create(new Path("input-data/data1.txt")), StandardCharsets.UTF_8);
    inputWriter.write("Hello. This is my input data set.");
    inputWriter.close();
    Path workflowPath = new Path(appPath, "workflow.xml");
    Writer writer = new OutputStreamWriter(fs.create(workflowPath), StandardCharsets.UTF_8);
    writer.write(wfApp);
    writer.close();
    try {
        LocalOozie.start();
        final OozieClient wc = LocalOozie.getClient();
        Properties conf = wc.createConfiguration();
        conf.setProperty(OozieClient.APP_PATH, workflowPath.toString());
        conf.setProperty(OozieClient.USER_NAME, getTestUser());
        conf.setProperty(OozieClient.GROUP_NAME, getTestGroup());
        final String jobId = wc.submit(conf);
        assertNotNull(jobId);
        WorkflowJob wf = wc.getJobInfo(jobId);
        assertNotNull(wf);
        assertEquals(WorkflowJob.Status.PREP, wf.getStatus());
        boolean dateTest = wf.getLastModifiedTime().compareTo(wf.getCreatedTime()) >= 0 ? true : false;
        assertEquals(true, dateTest);
        wc.start(jobId);
        wf = wc.getJobInfo(jobId);
        Date lastModTime = wf.getLastModifiedTime();
        wc.suspend(jobId);
        wf = wc.getJobInfo(jobId);
        dateTest = wf.getLastModifiedTime().compareTo(lastModTime) >= 0 ? true : false;
        assertEquals(true, dateTest);
        lastModTime = wf.getLastModifiedTime();
        sleep(1000);
        wc.resume(jobId);
        wf = wc.getJobInfo(jobId);
        dateTest = wf.getLastModifiedTime().compareTo(lastModTime) >= 0 ? true : false;
        assertEquals(true, dateTest);
        waitFor(600000, new Predicate() {

            public boolean evaluate() throws Exception {
                WorkflowJob wf = wc.getJobInfo(jobId);
                return wf.getStatus() == WorkflowJob.Status.SUCCEEDED;
            }
        });
        wf = wc.getJobInfo(jobId);
        assertNotNull(wf);
        assertEquals(WorkflowJob.Status.SUCCEEDED, wf.getStatus());
        dateTest = wf.getLastModifiedTime().compareTo(wf.getEndTime()) >= 0 ? true : false;
        assertEquals(true, dateTest);
    } finally {
        LocalOozie.stop();
    }
}
