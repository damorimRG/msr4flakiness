@Test
public void iterable_soft_assertions_should_work_with_navigation_methods() {
    // GIVEN
    Iterable<Name> names = asList(name("John", "Doe"), name("Jane", "Doe"));
    // WHEN
    softly.assertThat(names).as("size isGreaterThan(10)").overridingErrorMessage("error message").size().isGreaterThan(10);
    softly.assertThat(names).as("size isGreaterThan(22)").overridingErrorMessage("error message").size().isGreaterThan(22).returnToIterable().as(// TODO returnToIterable() does not yet propagate assertion info
    "should not be empty").overridingErrorMessage("error message 2").isEmpty();
    softly.assertThat(names).as("first element").overridingErrorMessage("error message").first().isNull();
    softly.assertThat(names).as("first element as Name").overridingErrorMessage("error message").first(as(type(Name.class))).isNull();
    softly.assertThat(names).as("element(0)").overridingErrorMessage("error message").element(0).isNull();
    softly.assertThat(names).as("element(0) as Name").overridingErrorMessage("error message").element(0, as(type(Name.class))).isNull();
    softly.assertThat(names).as("last element").overridingErrorMessage("error message").last().isNull();
    softly.assertThat(names).as("last element as Name").overridingErrorMessage("error message").last(as(type(Name.class))).isNull();
    // THEN
    List<Throwable> errorsCollected = softly.errorsCollected();
    assertThat(errorsCollected).hasSize(9);
    assertThat(errorsCollected.get(0)).hasMessage("[size isGreaterThan(10)] error message");
    assertThat(errorsCollected.get(1)).hasMessage("[size isGreaterThan(22)] error message");
    assertThat(errorsCollected.get(2)).hasMessage("[should not be empty] error message 2");
    assertThat(errorsCollected.get(3)).hasMessage("[first element] error message");
    assertThat(errorsCollected.get(4)).hasMessage("[first element as Name] error message");
    assertThat(errorsCollected.get(5)).hasMessage("[element(0)] error message");
    assertThat(errorsCollected.get(6)).hasMessage("[element(0) as Name] error message");
    assertThat(errorsCollected.get(7)).hasMessage("[last element] error message");
    assertThat(errorsCollected.get(8)).hasMessage("[last element as Name] error message");
}
