@Test
public void testDuplicateJarsInDistributedCache() throws Exception {
    FileSystem fs = getFileSystem();
    Path basePath = new Path(getOozieConfig().get(WorkflowAppService.SYSTEM_LIB_PATH));
    setShipLauncherInOozieConfig();
    // Use timedstamped directory if available
    Date time = new Date(System.currentTimeMillis());
    Path libpath = new Path(basePath, ShareLibService.SHARE_LIB_PREFIX + ShareLibService.dt.get().format(time));
    Path pigPath = new Path(libpath.toString() + Path.SEPARATOR + "pig");
    createDirs(fs, pigPath, new Path(pigPath, "temp"));
    createFiles(new Path(pigPath, "pig.jar"));
    createFiles(new Path(pigPath, "hive.jar"));
    createFiles(new Path(new Path(pigPath, "temp"), "pig.jar#pig.jar"));
    // DistributedCache should have only one pig jar
    verifyFilesInDistributedCache(setUpPigJob(true), "pig.jar", "hive.jar", "MyOozie.jar", "MyPig.jar");
    ShareLibService shareLibService = services.get(ShareLibService.class);
    // sharelib service should have two jars
    List<Path> shareLib = shareLibService.getShareLibJars("pig");
    assertEquals(shareLib.size(), 3);
    assertTrue(shareLib.toString().contains("pig.jar#pig.jar"));
    assertTrue(shareLib.toString().contains("hive.jar"));
}
