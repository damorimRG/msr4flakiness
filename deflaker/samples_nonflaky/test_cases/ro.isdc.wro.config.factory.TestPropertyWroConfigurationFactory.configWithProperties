@Test
public void configWithProperties() {
    final Properties props = new Properties();
    props.setProperty(ConfigConstants.cacheUpdatePeriod.name(), "10");
    props.setProperty(ConfigConstants.modelUpdatePeriod.name(), "20");
    props.setProperty(ConfigConstants.resourceWatcherUpdatePeriod.name(), "30");
    props.setProperty(ConfigConstants.disableCache.name(), "true");
    props.setProperty(ConfigConstants.gzipResources.name(), "false");
    props.setProperty(ConfigConstants.cacheGzippedContent.name(), "true");
    props.setProperty(ConfigConstants.parallelPreprocessing.name(), "true");
    props.setProperty(ConfigConstants.ignoreEmptyGroup.name(), "false");
    props.setProperty(ConfigConstants.ignoreFailingProcessor.name(), "true");
    props.setProperty(ConfigConstants.connectionTimeout.name(), "5000");
    props.setProperty(ConfigConstants.minimizeEnabled.name(), "false");
    factory = new PropertyWroConfigurationFactory(props);
    final WroConfiguration config = factory.create();
    LOG.debug("config: {}", config);
    assertEquals(10, config.getCacheUpdatePeriod());
    assertEquals(20, config.getModelUpdatePeriod());
    assertEquals(30, config.getResourceWatcherUpdatePeriod());
    assertEquals(false, config.isGzipEnabled());
    assertEquals(true, config.isCacheGzippedContent());
    assertEquals(true, config.isParallelPreprocessing());
    assertEquals(false, config.isIgnoreEmptyGroup());
    assertEquals(true, config.isIgnoreFailingProcessor());
    assertEquals(5000, config.getConnectionTimeout());
    assertEquals(false, config.isMinimizeEnabled());
}
