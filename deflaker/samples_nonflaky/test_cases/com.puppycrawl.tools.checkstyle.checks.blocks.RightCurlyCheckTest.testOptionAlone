@Test
public void testOptionAlone() throws Exception {
    final DefaultConfiguration checkConfig = createModuleConfig(RightCurlyCheck.class);
    checkConfig.addAttribute("option", RightCurlyOption.ALONE.toString());
    checkConfig.addAttribute("tokens", "CLASS_DEF, METHOD_DEF, LITERAL_IF, LITERAL_ELSE, " + "LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, STATIC_INIT, INSTANCE_INIT");
    final String[] expected = { "7:15: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 15), "8:21: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 21), "12:26: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 26), "21:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37), "38:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9), "42:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37), "45:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30), "47:27: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 27), "49:17: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 17), "51:53: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 53), "53:27: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 27), "53:52: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 52), "66:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9), "66:11: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 11) };
    verify(checkConfig, getPath("InputRightCurlyAlone.java"), expected);
}
