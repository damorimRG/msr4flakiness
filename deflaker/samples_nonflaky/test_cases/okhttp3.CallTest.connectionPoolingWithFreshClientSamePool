/**
 * Each OkHttpClient used to get its own instance of NullProxySelector, and because these weren't
 * equal their connections weren't pooled. That's a nasty performance bug!
 *
 * https://github.com/square/okhttp/issues/5519
 */
@Test
public void connectionPoolingWithFreshClientSamePool() throws Exception {
    server.enqueue(new MockResponse().setBody("abc"));
    server.enqueue(new MockResponse().setBody("def"));
    server.enqueue(new MockResponse().setBody("ghi"));
    client = new OkHttpClient.Builder().connectionPool(client.connectionPool()).proxy(server.toProxyAddress()).build();
    executeSynchronously("/a").assertBody("abc");
    client = new OkHttpClient.Builder().connectionPool(client.connectionPool()).proxy(server.toProxyAddress()).build();
    executeSynchronously("/b").assertBody("def");
    client = new OkHttpClient.Builder().connectionPool(client.connectionPool()).proxy(server.toProxyAddress()).build();
    executeSynchronously("/c").assertBody("ghi");
    assertThat(server.takeRequest().getSequenceNumber()).isEqualTo(0);
    assertThat(server.takeRequest().getSequenceNumber()).isEqualTo(1);
    assertThat(server.takeRequest().getSequenceNumber()).isEqualTo(2);
}
