@Test
public void remoteSendsDataAfterInFinished() throws Exception {
    // write the mocking script
    peer.sendFrame().settings(new Settings());
    // ACK
    peer.acceptFrame();
    // SYN_STREAM
    peer.acceptFrame();
    peer.sendFrame().headers(false, 3, headerEntries("a", "android"));
    peer.sendFrame().data(true, 3, new Buffer().writeUtf8("robot"), 5);
    peer.sendFrame().data(true, 3, new Buffer().writeUtf8("c3po"), 4);
    // RST_STREAM
    peer.acceptFrame();
    // Ping just to make sure the stream was fastforwarded.
    peer.sendFrame().ping(false, 2, 0);
    // PING
    peer.acceptFrame();
    peer.play();
    // play it back
    Http2Connection connection = connect(peer);
    Http2Stream stream = connection.newStream(headerEntries("b", "banana"), false);
    assertThat(stream.takeHeaders()).isEqualTo(Headers.of("a", "android"));
    assertStreamData("robot", stream.getSource());
    // verify the peer received what was expected
    InFrame synStream = peer.takeFrame();
    assertThat(synStream.type).isEqualTo(Http2.TYPE_HEADERS);
    InFrame rstStream = peer.takeFrame();
    assertThat(rstStream.type).isEqualTo(Http2.TYPE_RST_STREAM);
    assertThat(rstStream.streamId).isEqualTo(3);
    InFrame ping = peer.takeFrame();
    assertThat(ping.type).isEqualTo(Http2.TYPE_PING);
    assertThat(ping.payload1).isEqualTo(2);
}
