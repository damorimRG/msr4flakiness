/**
 * Pitest requires us to specify more concrete lower bound for condition for
 * ParenPadCheck#isAcceptableToken as nodes of first several types like CTOR_DEF,
 * METHOD_DEF will never reach this method. It is hard to recreate conditions for
 * all tokens to go through this method. We do not want to change main code to have
 * this set ok tokens more exact, because it will not be ease to understand.
 * So we have to use reflection to be sure all
 * acceptable tokens pass that check.
 */
@Test
public void testIsAcceptableToken() throws Exception {
    final ParenPadCheck check = new ParenPadCheck();
    final Method method = Whitebox.getMethod(ParenPadCheck.class, "isAcceptableToken", DetailAST.class);
    final DetailAstImpl ast = new DetailAstImpl();
    final String message = "Expected that all acceptable tokens will pass isAcceptableToken " + "method, but some token don't: ";
    for (int token : check.getAcceptableTokens()) {
        ast.setType(token);
        assertTrue((boolean) method.invoke(check, ast), message + TokenUtil.getTokenName(token));
    }
}
