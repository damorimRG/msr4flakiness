@Test
public void testParseDoubleIntegerValues() {
    assertEquals(0.0, CheckUtil.parseDouble("0L", TokenTypes.NUM_LONG), 0, "Invalid parse result");
    assertEquals(0b101, CheckUtil.parseDouble("0B101", TokenTypes.NUM_INT), 0, "Invalid parse result");
    assertEquals(289_775_941, CheckUtil.parseDouble("0b10001010001011010000101000101L", TokenTypes.NUM_LONG), 0, "Invalid parse result");
    assertEquals(1.0, CheckUtil.parseDouble("1", TokenTypes.NUM_INT), 0, "Invalid parse result");
    assertEquals(8.0, CheckUtil.parseDouble("8L", TokenTypes.NUM_LONG), 0, "Invalid parse result");
    assertEquals(-2.147_483_648E10, CheckUtil.parseDouble("-21474836480", TokenTypes.NUM_LONG), 0, "Invalid parse result");
    assertEquals(-2, CheckUtil.parseDouble("-2", TokenTypes.NUM_INT), 0, "Invalid parse result");
    assertEquals(-1, CheckUtil.parseDouble("0xffffffff", TokenTypes.NUM_INT), 0, "Invalid parse result");
    assertEquals(2915.0, CheckUtil.parseDouble("0x0B63", TokenTypes.NUM_INT), 0, "Invalid parse result");
    assertEquals(2.147_483_647E10, CheckUtil.parseDouble("21474836470", TokenTypes.NUM_LONG), 0, "Invalid parse result");
    assertEquals(59.0, CheckUtil.parseDouble("073l", TokenTypes.NUM_LONG), 0, "Invalid parse result");
}
