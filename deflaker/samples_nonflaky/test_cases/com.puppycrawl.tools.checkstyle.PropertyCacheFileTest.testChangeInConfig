@Test
public void testChangeInConfig() throws Exception {
    final DefaultConfiguration config = new DefaultConfiguration("myConfig");
    config.addAttribute("attr", "value");
    final File cacheFile = File.createTempFile("junit", null, temporaryFolder);
    final PropertyCacheFile cache = new PropertyCacheFile(config, cacheFile.getPath());
    cache.load();
    final String expectedInitialConfigHash = "91753B970AFDF9F5F3DFA0D258064841949D3C6B";
    final String actualInitialConfigHash = cache.get(PropertyCacheFile.CONFIG_HASH_KEY);
    assertEquals(expectedInitialConfigHash, actualInitialConfigHash, "Invalid config hash");
    cache.persist();
    final Properties details = new Properties();
    try (BufferedReader reader = Files.newBufferedReader(cacheFile.toPath())) {
        details.load(reader);
    }
    assertEquals(1, details.size(), "Invalid details size");
    // change in config
    config.addAttribute("newAttr", "newValue");
    final PropertyCacheFile cacheAfterChangeInConfig = new PropertyCacheFile(config, cacheFile.getPath());
    cacheAfterChangeInConfig.load();
    final String expectedConfigHashAfterChange = "4CF5EC78955B81D76153ACC2CA6D60CB77FDCB2A";
    final String actualConfigHashAfterChange = cacheAfterChangeInConfig.get(PropertyCacheFile.CONFIG_HASH_KEY);
    assertEquals(expectedConfigHashAfterChange, actualConfigHashAfterChange, "Invalid config hash");
    cacheAfterChangeInConfig.persist();
    final Properties detailsAfterChangeInConfig = new Properties();
    try (BufferedReader reader = Files.newBufferedReader(cacheFile.toPath())) {
        detailsAfterChangeInConfig.load(reader);
    }
    assertEquals(1, detailsAfterChangeInConfig.size(), "Invalid cache size");
}
