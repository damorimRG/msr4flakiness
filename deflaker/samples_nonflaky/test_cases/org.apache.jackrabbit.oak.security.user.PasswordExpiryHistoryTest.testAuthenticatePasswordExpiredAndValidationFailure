@Test
public void testAuthenticatePasswordExpiredAndValidationFailure() throws Exception {
    User user = getTestUser();
    Authentication a = new UserAuthentication(getUserConfiguration(), root, userId);
    // set password last modified to beginning of epoch
    root.getTree(user.getPath()).getChild(UserConstants.REP_PWD).setProperty(UserConstants.REP_PASSWORD_LAST_MODIFIED, 0);
    root.commit();
    try {
        a.authenticate(new SimpleCredentials(userId, userId.toCharArray()));
        fail("Credentials should be expired");
    } catch (CredentialExpiredException e) {
        // success, credentials are expired
        // try to change password to the same one, this should fail due pw history
        SimpleCredentials pwChangeCreds = new SimpleCredentials(userId, userId.toCharArray());
        try {
            pwChangeCreds.setAttribute(UserConstants.CREDENTIALS_ATTRIBUTE_NEWPASSWORD, "2");
            a.authenticate(pwChangeCreds);
            fail("User password changed in spite of expected validation failure");
        } catch (CredentialExpiredException c) {
            // success, pw found in history
            assertNull(pwChangeCreds.getAttribute(PasswordHistoryException.class.getSimpleName()));
        }
    }
}
