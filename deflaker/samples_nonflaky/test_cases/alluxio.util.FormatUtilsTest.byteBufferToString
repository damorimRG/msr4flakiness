/**
 * Tests the {@link FormatUtils#byteBufferToString(ByteBuffer)} method.
 */
@Test
public void byteBufferToString() {
    class TestCase {

        String mExpected;

        ByteBuffer mInput;

        public TestCase(String expected, ByteBuffer input) {
            mExpected = expected;
            mInput = input;
        }
    }
    List<TestCase> testCases = new ArrayList<>();
    testCases.add(new TestCase("", ByteBuffer.wrap(new byte[] {})));
    testCases.add(new TestCase("", ByteBuffer.wrap(new byte[] { 0 })));
    testCases.add(new TestCase("", ByteBuffer.wrap(new byte[] { 0, 0 })));
    testCases.add(new TestCase("", ByteBuffer.wrap(new byte[] { 0, 0, 0 })));
    testCases.add(new TestCase("1", ByteBuffer.wrap(new byte[] { 0, 0, 0, 1 })));
    testCases.add(new TestCase("1", ByteBuffer.wrap(new byte[] { 0, 0, 0, 1, 0 })));
    testCases.add(new TestCase("1", ByteBuffer.wrap(new byte[] { 0, 0, 0, 1, 0, 0 })));
    testCases.add(new TestCase("1", ByteBuffer.wrap(new byte[] { 0, 0, 0, 1, 0, 0, 0 })));
    testCases.add(new TestCase("1 2", ByteBuffer.wrap(new byte[] { 0, 0, 0, 1, 0, 0, 0, 2 })));
    for (TestCase testCase : testCases) {
        assertEquals(testCase.mExpected, FormatUtils.byteBufferToString(testCase.mInput));
    }
}
