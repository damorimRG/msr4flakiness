public void testProcessRemainingLog() throws IOException, CommandException {
    XLogFilter.reset();
    XLogFilter.defineParameter("USER");
    XLogFilter.defineParameter("GROUP");
    XLogFilter.defineParameter("TOKEN");
    XLogFilter.defineParameter("APP");
    XLogFilter.defineParameter("JOB");
    XLogFilter.defineParameter("ACTION");
    XLogFilter xf = new XLogFilter();
    xf.setParameter("JOB", "14-200904160239--example-forkjoinwf");
    xf.setLogLevel("DEBUG|WARN");
    File file = prepareFile1(getTestCaseDir());
    StringWriter sw = new StringWriter();
    new TimestampedMessageParser(new BufferedReader(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8)), xf).processRemaining(sw, new XLogStreamer(xf));
    String[] out = sw.toString().split("\n");
    assertEquals(14, out.length);
    assertTrue(out[0].contains("_L1_"));
    assertTrue(out[1].contains("_L3_"));
    assertTrue(out[2].contains("_L3A_"));
    assertTrue(out[3].contains("_L3B_"));
    assertTrue(out[4].contains("_L8_"));
    assertTrue(out[5].contains("_L9_"));
    assertTrue(out[6].contains("_L10_"));
    assertTrue(out[7].contains("_L11_"));
    assertTrue(out[8].contains("_L12_"));
    assertTrue(out[9].contains("_L13_"));
    assertTrue(out[10].contains("_L14_"));
    assertTrue(out[11].contains("_L15_"));
    assertTrue(out[12].contains("_L16_"));
    assertTrue(out[13].contains("_L17_"));
}
