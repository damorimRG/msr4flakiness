@Test
public void testFileExtensions() throws Exception {
    final DefaultConfiguration checkerConfig = new DefaultConfiguration("configuration");
    checkerConfig.addAttribute("charset", StandardCharsets.UTF_8.name());
    checkerConfig.addAttribute("cacheFile", File.createTempFile("junit", null, temporaryFolder).getPath());
    final Checker checker = new Checker();
    checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());
    checker.configure(checkerConfig);
    final DebugAuditAdapter auditAdapter = new DebugAuditAdapter();
    checker.addListener(auditAdapter);
    final List<File> files = new ArrayList<>();
    final File file = new File("file.pdf");
    files.add(file);
    final File otherFile = new File("file.java");
    files.add(otherFile);
    final String[] fileExtensions = { "java", "xml", "properties" };
    checker.setFileExtensions(fileExtensions);
    checker.setCacheFile(File.createTempFile("junit", null, temporaryFolder).getPath());
    final int counter = checker.process(files);
    // comparing to 1 as there is only one legal file in input
    final int numLegalFiles = 1;
    final PropertyCacheFile cache = Whitebox.getInternalState(checker, "cacheFile");
    assertEquals(numLegalFiles, counter, "There were more legal files than expected");
    assertEquals(numLegalFiles, auditAdapter.getNumFilesStarted(), "Audit was started on larger amount of files than expected");
    assertEquals(numLegalFiles, auditAdapter.getNumFilesFinished(), "Audit was finished on larger amount of files than expected");
    assertNull(cache.get(new File("file.java").getCanonicalPath()), "Cache shout not contain any file");
}
