public void testActionInputMissingDependenciesWithExceptions() throws Exception {
    String jobId = "0000000-" + new Date().getTime() + "-TestCoordActionInputCheckXCommand-C";
    Date startTime = DateUtils.parseDateOozieTZ("2009-02-15T23:59" + TZ);
    Date endTime = DateUtils.parseDateOozieTZ("2009-02-16T23:59" + TZ);
    // Creating the files needed for our set missing dependencies
    Path file1 = new Path(getFsTestCaseDir(), "dir1/_SUCCESS");
    Path file2 = new Path(getFsTestCaseDir(), "dir2/_SUCCESS");
    Path file3 = new Path(getFsTestCaseDir(), "dir3/_SUCCESS");
    Path file4 = new Path(getFsTestCaseDir(), "dir4/_SUCCESS");
    FileSystem fs = getFileSystem();
    fs.mkdirs(file1);
    fs.mkdirs(file2);
    fs.mkdirs(file3);
    fs.mkdirs(file4);
    // Setting file2 to be inaccessible
    fs.setPermission(new Path(getFsTestCaseDir(), "dir2"), FsPermission.valueOf("----------"));
    // Set missing dependencies
    String missDeps = file1.toString() + "#" + file2.toString() + "#" + file3.toString() + "#" + file4.toString();
    String expected = file2.toString() + "#" + file3.toString() + "#" + file4.toString();
    CoordinatorJobBean job = addRecordToCoordJobTableForWaiting("coord-job-for-action-input-check.xml", CoordinatorJob.Status.RUNNING, false, true);
    CoordinatorActionBean action = addRecordToCoordActionTableForWaiting(job.getId(), 1, CoordinatorAction.Status.WAITING, "coord-action-for-action-input-check.xml", missDeps);
    new CoordActionInputCheckXCommand(action.getId(), job.getId()).call();
    final JPAService jpaService = Services.get().get(JPAService.class);
    CoordinatorActionBean caBean = jpaService.execute(new CoordActionGetJPAExecutor(action.getId()));
    log.info("Missing deps list: " + caBean.getMissingDependencies());
    // Checking case when second missing dependency is inaccessible to see if first one is shown or not.
    assertEquals(expected, caBean.getMissingDependencies());
}
