@Override
public Resolution deleteDeletedProperty(NodeBuilder parent, PropertyState base) {
    called.set(true);
    assertEquals("base", base.getValue(STRING));
    return Resolution.IGNORED;
}
@Test
public void deleteDeletedProperty() throws Exception {
    AtomicBoolean called = new AtomicBoolean(false);
    ThreeWayConflictHandler handler = new ErrorThreeWayConflictHandler() {

        @Override
        public Resolution deleteDeletedProperty(NodeBuilder parent, PropertyState base) {
            called.set(true);
            assertEquals("base", base.getValue(STRING));
            return Resolution.IGNORED;
        }
    };
    ContentRepository repo = newRepo(handler);
    Root root = login(repo);
    setup(root);
    Root ourRoot = login(repo);
    Root theirRoot = login(repo);
    theirRoot.getTree("/c").removeProperty("p");
    ourRoot.getTree("/c").removeProperty("p");
    theirRoot.commit();
    ourRoot.commit();
    assertTrue(called.get());
}
@Override
public Resolution deleteDeletedProperty(NodeBuilder parent, PropertyState base) {
    Assert.fail("method should not be called");
    return Resolution.IGNORED;
}
