@Test
public void staticMethodReference() throws Exception {
    Function1<Long, String> lambda = LambdasTest::longToString;
    LambdaInfo lambdaInfo = Lambdas.reflect(lambda);
    assertThat(lambdaInfo.getKind(), is(Kind.STATIC_METHOD_REFERENCE));
    SerializedLambda serializedLambda = lambdaInfo.getSerializedLambda();
    assertThat(serializedLambda.getFunctionalInterfaceMethodName(), is("apply"));
    assertThat(serializedLambda.getImplClass().replace('/', '.'), is(LambdasTest.class.getCanonicalName()));
    assertThat(serializedLambda.getImplMethodName(), is("longToString"));
    // 6 = static method
    assertThat(serializedLambda.getImplMethodKind(), is(6));
    assertThat(serializedLambda.getCapturedArgCount(), is(0));
    // verify it can be dynamically invoked
    String value = (String) lambdaInfo.getImplementationMethod().invoke(null, 1L);
    assertThat(value, is("1"));
}
