@Test
public void conditionalCollisionUpdate() throws Exception {
    NodeBuilder b1 = ns1.getRoot().builder();
    b1.child("test");
    b1.child("node");
    merge(ns1, b1);
    ns1.runBackgroundOperations();
    // initialize second node store after background ops
    // on ns1. this makes sure ns2 sees all changes done so far
    ns2 = newDocumentMK(connectionFactory.getConnection(), 3).getNodeStore();
    b1 = ns1.getRoot().builder();
    b1.child("node").child("foo");
    b1.child("test").setProperty("p", 1);
    merge(ns1, b1);
    Revision head = ns1.getHeadRevision().getRevision(ns1.getClusterId());
    NodeBuilder b2 = ns2.getRoot().builder();
    b2.child("node").child("bar");
    b2.child("test").setProperty("p", 2);
    try {
        merge(ns2, b2);
        fail("must fail with CommitFailedException");
    } catch (CommitFailedException e) {
    // expected
    }
    String rootId = Utils.getIdFromPath("/");
    NodeDocument root = ns2.getDocumentStore().find(NODES, rootId);
    assertFalse("root document must not have a collision marker for a" + " committed revision", root.getValueMap(COLLISIONS).containsKey(head));
}
