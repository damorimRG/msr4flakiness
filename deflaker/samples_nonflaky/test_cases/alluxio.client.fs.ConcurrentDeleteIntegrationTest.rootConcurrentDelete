/**
 * Tests concurrent deletes within the root do not block on each other.
 */
@Test
public void rootConcurrentDelete() throws Exception {
    final int numThreads = CONCURRENCY_FACTOR;
    AlluxioURI[] paths = new AlluxioURI[numThreads];
    for (int i = 0; i < numThreads; i++) {
        paths[i] = new AlluxioURI("/file" + i);
        mFileSystem.createFile(paths[i], sCreatePersistedFileOptions).close();
    }
    List<Throwable> errors = ConcurrentFileSystemMasterUtils.unaryOperation(mFileSystem, ConcurrentFileSystemMasterUtils.UnaryOperation.DELETE, paths, LIMIT_MS);
    if (!errors.isEmpty()) {
        Assert.fail("Encountered " + errors.size() + " errors, the first one is " + errors.get(0));
    }
    List<URIStatus> files = mFileSystem.listStatus(new AlluxioURI("/"));
    Assert.assertEquals(0, files.size());
}
