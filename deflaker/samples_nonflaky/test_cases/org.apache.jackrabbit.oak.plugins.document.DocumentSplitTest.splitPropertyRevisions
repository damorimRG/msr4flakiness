@Test
public void splitPropertyRevisions() throws Exception {
    DocumentStore store = mk.getDocumentStore();
    DocumentNodeStore ns = mk.getNodeStore();
    mk.commit("/", "+\"foo\":{}", null, null);
    NodeDocument doc = store.find(NODES, Utils.getIdFromPath("/foo"));
    assertNotNull(doc);
    Set<Revision> revisions = Sets.newHashSet();
    // create nodes
    while (revisions.size() <= NodeDocument.NUM_REVS_THRESHOLD) {
        revisions.add(Revision.fromString(mk.commit("/", "^\"foo/prop\":" + revisions.size(), null, null)));
    }
    mk.runBackgroundOperations();
    doc = store.find(NODES, Utils.getIdFromPath("/foo"));
    assertNotNull(doc);
    Map<Revision, String> localRevs = doc.getLocalRevisions();
    // one remaining in the local revisions map
    assertEquals(1, localRevs.size());
    for (Revision rev : revisions) {
        assertTrue(isCommitted(ns.getCommitValue(rev, doc)));
    }
    // all revisions in the prop map
    Map<Revision, String> valueMap = doc.getValueMap("prop");
    assertEquals((long) revisions.size(), valueMap.size());
    // one remaining revision in the local map
    valueMap = doc.getLocalMap("prop");
    assertEquals(1L, valueMap.size());
}
