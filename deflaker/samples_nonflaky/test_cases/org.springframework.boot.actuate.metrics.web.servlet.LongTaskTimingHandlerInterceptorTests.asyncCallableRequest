@Test
void asyncCallableRequest() throws Exception {
    AtomicReference<MvcResult> result = new AtomicReference<>();
    Thread backgroundRequest = new Thread(() -> {
        try {
            result.set(this.mvc.perform(get("/api/c1/callable/10")).andExpect(request().asyncStarted()).andReturn());
        } catch (Exception ex) {
            fail("Failed to execute async request", ex);
        }
    });
    backgroundRequest.start();
    this.callableBarrier.await();
    assertThat(this.registry.get("my.long.request").tags("region", "test").longTaskTimer().activeTasks()).isEqualTo(1);
    this.callableBarrier.await();
    backgroundRequest.join();
    this.mvc.perform(asyncDispatch(result.get())).andExpect(status().isOk());
    assertThat(this.registry.get("my.long.request").tags("region", "test").longTaskTimer().activeTasks()).isEqualTo(0);
}
