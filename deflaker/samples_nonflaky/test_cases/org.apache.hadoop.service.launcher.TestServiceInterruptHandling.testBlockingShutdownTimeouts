@Test
public void testBlockingShutdownTimeouts() throws Throwable {
    ExitTrackingServiceLauncher<FailureTestService> launcher = new ExitTrackingServiceLauncher<>(FailureTestService.class.getName());
    FailureTestService service = new FailureTestService(false, false, false, 2000);
    launcher.setService(service);
    InterruptEscalator escalator = new InterruptEscalator(launcher, 500);
    // call the interrupt operation directly
    try {
        escalator.interrupted(new IrqHandler.InterruptData("INT", 3));
        fail("Expected an exception to be raised from " + escalator);
    } catch (ExitUtil.ExitException e) {
        assertExceptionDetails(EXIT_INTERRUPTED, "", e);
    }
    assertTrue("isForcedShutdownTimedOut() == false in " + escalator, escalator.isForcedShutdownTimedOut());
}
