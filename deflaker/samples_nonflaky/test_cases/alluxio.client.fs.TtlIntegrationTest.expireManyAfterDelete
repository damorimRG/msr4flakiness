/**
 * Tests that when many TTLs expire at the same time, files are deleted properly.
 */
@Test
public void expireManyAfterDelete() throws Exception {
    int numFiles = 100;
    AlluxioURI[] files = new AlluxioURI[numFiles];
    for (int i = 0; i < numFiles; i++) {
        files[i] = new AlluxioURI("/file" + i);
        // Only the even-index files should expire.
        long ttl = i % 2 == 0 ? TTL_INTERVAL_MS / 2 : TTL_INTERVAL_MS * 1000;
        mFileSystem.createFile(files[i], CreateFilePOptions.newBuilder().setWriteType(WritePType.THROUGH).setCommonOptions(FileSystemMasterCommonPOptions.newBuilder().setTtl(ttl)).build()).close();
        // Delete some of the even files to make sure this doesn't trip up the TTL checker.
        if (i % 20 == 0) {
            mFileSystem.delete(files[i]);
        }
    }
    CommonUtils.sleepMs(2 * TTL_INTERVAL_MS);
    HeartbeatScheduler.execute(HeartbeatContext.MASTER_TTL_CHECK);
    for (int i = 0; i < numFiles; i++) {
        if (i % 2 == 0) {
            assertFalse(mFileSystem.exists(files[i]));
        } else {
            assertTrue(mFileSystem.exists(files[i]));
        }
    }
}
