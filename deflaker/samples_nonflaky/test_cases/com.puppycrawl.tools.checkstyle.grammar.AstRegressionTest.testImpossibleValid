@Test
public void testImpossibleValid() throws Exception {
    AssertGeneratedJavaLexer.verifyPass("mSTD_ESC", 'n');
    AssertGeneratedJavaLexer.verifyPass("mELLIPSIS", '.', '.', '.');
    AssertGeneratedJavaLexer.verifyPass("mDOT", '.');
    AssertGeneratedJavaLexer.verifyPass("mBINARY_EXPONENT", 'p', '0', ';');
    AssertGeneratedJavaLexer.verifyPass("mHEX_DIGIT", '0');
    AssertGeneratedJavaLexer.verifyPass("mEXPONENT", 'e', '0', ';');
    AssertGeneratedJavaLexer.verifyPass("mBINARY_DIGIT", '0');
    AssertGeneratedJavaLexer.verifyPass("mSIGNED_INTEGER", '0', ';');
    AssertGeneratedJavaLexer.verifyPass("mWS", ' ', ';');
    AssertGeneratedJavaLexer.verifyPass("mID_START", '$');
    AssertGeneratedJavaLexer.verifyPass("mID_PART", '$');
    AssertGeneratedJavaLexer.verifyPass("mESC", '\\', '\\');
    AssertGeneratedJavaLexer.verifyPass("mLONG_LITERAL", '1', 'L');
    AssertGeneratedJavaLexer.verifyPass("mINT_LITERAL", '0', ';');
    AssertGeneratedJavaLexer.verifyPass("mFLOAT_LITERAL", '0', 'f');
    AssertGeneratedJavaLexer.verifyPass("mDOUBLE_LITERAL", '0', 'd');
    AssertGeneratedJavaLexer.verifyPass("mHEX_FLOAT_LITERAL", '0', 'x', '2', '_', '4', '.', '4', '4', '.', '4', 'P', '4', ';');
    AssertGeneratedJavaLexer.verifyPass("mHEX_DOUBLE_LITERAL", '0', 'x', '2', '_', '4', '.', '4', '4', '.', '4', 'P', '4', 'D', ';');
}
