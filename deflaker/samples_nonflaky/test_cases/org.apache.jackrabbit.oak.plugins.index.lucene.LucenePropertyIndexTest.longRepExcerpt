@Test
public void longRepExcerpt() throws Exception {
    Tree luceneIndex = createFullTextIndex(root.getTree("/"), "lucene");
    root.commit();
    StringBuilder s = new StringBuilder();
    for (int k = 0; k < 100; k++) {
        s.append("foo bar ").append(k).append(" ");
    }
    String text = s.toString();
    List<String> names = new LinkedList<String>();
    for (int j = 0; j < 30; j++) {
        Tree test = root.getTree("/").addChild("ex-test-" + j);
        for (int i = 0; i < 100; i++) {
            String name = "cont" + i;
            test.addChild(name).setProperty("text", text);
            names.add("/" + test.getName() + "/" + name);
        }
    }
    root.commit();
    String query;
    query = "SELECT [jcr:path],[rep:excerpt] from [nt:base] WHERE CONTAINS([text], 'foo')";
    assertQuery(query, SQL2, names);
    // execute the query again to assert the excerpts value of the first row
    Result result = executeQuery(query, SQL2, NO_BINDINGS);
    Iterator<? extends ResultRow> rowsIt = result.getRows().iterator();
    while (rowsIt.hasNext()) {
        ResultRow row = rowsIt.next();
        PropertyValue excerptValue = row.getValue("rep:excerpt");
        assertFalse("There is an excerpt expected for each result row for term 'foo'", excerptValue == null || "".equals(excerptValue.getValue(STRING)));
    }
}
