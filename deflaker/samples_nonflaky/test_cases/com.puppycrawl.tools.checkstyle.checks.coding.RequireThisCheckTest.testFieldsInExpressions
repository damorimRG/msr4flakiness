@Test
public void testFieldsInExpressions() throws Exception {
    final DefaultConfiguration checkConfig = createModuleConfig(RequireThisCheck.class);
    checkConfig.addAttribute("checkMethods", "false");
    checkConfig.addAttribute("validateOnlyOverlapping", "false");
    final String[] expected = { "15:28: " + getCheckMessage(MSG_VARIABLE, "id", ""), "16:28: " + getCheckMessage(MSG_VARIABLE, "length", ""), "17:28: " + getCheckMessage(MSG_VARIABLE, "length", ""), "18:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "19:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "20:25: " + getCheckMessage(MSG_VARIABLE, "length", ""), "21:25: " + getCheckMessage(MSG_VARIABLE, "length", ""), "22:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "23:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "24:33: " + getCheckMessage(MSG_VARIABLE, "b", ""), "25:36: " + getCheckMessage(MSG_VARIABLE, "b", ""), "26:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "27:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "28:28: " + getCheckMessage(MSG_VARIABLE, "length", ""), "29:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "30:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "31:26: " + getCheckMessage(MSG_VARIABLE, "length", ""), "32:31: " + getCheckMessage(MSG_VARIABLE, "b", ""), "33:32: " + getCheckMessage(MSG_VARIABLE, "b", "") };
    verify(checkConfig, getPath("InputRequireThisExpressions.java"), expected);
}
