@Test
public void should_ignore_dual_keys_with_a_null_first_key() {
    // GIVEN
    recursiveComparisonConfiguration.setIgnoreAllActualNullFields(true);
    DualValueDeque dualKayDeque = new DualValueDeque(recursiveComparisonConfiguration);
    DualValue dualKeyA = dualKey(null, "A");
    DualValue dualKeyB = dualKey("B", "B");
    DualValue dualKeyC = dualKey(null, "C");
    DualValue dualKeyD = dualKey("D", "D");
    DualValue dualKeyE = dualKey("E", "E");
    // WHEN
    dualKayDeque.add(dualKeyA);
    dualKayDeque.add(dualKeyB);
    dualKayDeque.addFirst(dualKeyC);
    dualKayDeque.add(dualKeyD);
    dualKayDeque.addLast(dualKeyE);
    dualKayDeque.add(1, dualKeyA);
    dualKayDeque.addAll(list(dualKeyA, dualKeyB, dualKeyC));
    dualKayDeque.addAll(0, list(dualKeyA, dualKeyB, dualKeyC));
    // THEN
    assertThat(dualKayDeque).containsExactly(dualKeyB, dualKeyB, dualKeyD, dualKeyE, dualKeyB);
}
