/*
     f->(2,3)
     2->f2
     3->j
     f2->(4,5,6)
     (4,5,6)->j2
     j2->7
     7->j
    */
public void testNestedForkJoin() throws WorkflowException {
    LiteWorkflowAppParser parser = newLiteWorkflowAppParser();
    LiteWorkflowApp def = new LiteWorkflowApp("testWf", "<worklfow-app/>", new StartNodeDef(LiteWorkflowStoreService.LiteControlNodeHandler.class, "one")).addNode(new ActionNodeDef("one", dummyConf, TestActionNodeHandler.class, "f", "end")).addNode(new ForkNodeDef("f", LiteWorkflowStoreService.LiteControlNodeHandler.class, Arrays.asList(new String[] { "two", "three" }))).addNode(new ActionNodeDef("two", dummyConf, TestActionNodeHandler.class, "f2", "k")).addNode(new ActionNodeDef("three", dummyConf, TestActionNodeHandler.class, "j", "k")).addNode(new ForkNodeDef("f2", LiteWorkflowStoreService.LiteControlNodeHandler.class, Arrays.asList(new String[] { "four", "five", "six" }))).addNode(new ActionNodeDef("four", dummyConf, TestActionNodeHandler.class, "j2", "k")).addNode(new ActionNodeDef("five", dummyConf, TestActionNodeHandler.class, "j2", "k")).addNode(new ActionNodeDef("six", dummyConf, TestActionNodeHandler.class, "j2", "k")).addNode(new JoinNodeDef("j2", LiteWorkflowStoreService.LiteControlNodeHandler.class, "seven")).addNode(new ActionNodeDef("seven", dummyConf, TestActionNodeHandler.class, "j", "k")).addNode(new JoinNodeDef("j", LiteWorkflowStoreService.LiteControlNodeHandler.class, "end")).addNode(new KillNodeDef("k", "kill", LiteWorkflowStoreService.LiteControlNodeHandler.class)).addNode(new EndNodeDef("end", LiteWorkflowStoreService.LiteControlNodeHandler.class));
    try {
        invokeForkJoin(parser, def);
    } catch (Exception e) {
        e.printStackTrace();
        fail("Unexpected Exception");
    }
}
