public void testMaxConcurrencyReached() throws Exception {
    Services.get().destroy();
    setSystemProperty(CallableQueueService.CONF_QUEUE_SIZE, "100000");
    new Services().init();
    int partitions = 10;
    int taskPerPartition = 10000;
    final int taskCount = partitions * taskPerPartition;
    List<DummyCallable> callables = new ArrayList<>(taskCount);
    for (int i = 0; i < partitions; i++) {
        String type = String.valueOf(i);
        for (int j = 0; j < taskPerPartition; j++) {
            String key = type + "_" + UUID.randomUUID().toString();
            DummyCallable dc = new DummyCallable(taskCount, key, type, 0, 0);
            callables.add(dc);
        }
    }
    CallableQueueService queueservice = Services.get().get(CallableQueueService.class);
    for (int i = 0; i < taskCount; i++) {
        queueservice.queue(callables.get(i));
    }
    try {
        finished.await(100, TimeUnit.SECONDS);
    } catch (Exception e) {
        log.error("Error", e);
        fail("Exception during test: " + e.getMessage());
    }
    assertEquals("Not all callables have been executed", counter.get(), taskCount);
}
