@Test
public void postBodyRetransmittedOnFailureRecovery() throws Exception {
    server.enqueue(new MockResponse().setBody("abc"));
    server.enqueue(new MockResponse().setSocketPolicy(SocketPolicy.DISCONNECT_AFTER_REQUEST));
    server.enqueue(new MockResponse().setBody("def"));
    // Seed the connection pool so we have something that can fail.
    Request request1 = new Request.Builder().url(server.url("/")).build();
    Response response1 = client.newCall(request1).execute();
    assertThat(response1.body().string()).isEqualTo("abc");
    Request request2 = new Request.Builder().url(server.url("/")).post(RequestBody.create("body!", MediaType.get("text/plain"))).build();
    Response response2 = client.newCall(request2).execute();
    assertThat(response2.body().string()).isEqualTo("def");
    RecordedRequest get = server.takeRequest();
    assertThat(get.getSequenceNumber()).isEqualTo(0);
    RecordedRequest post1 = server.takeRequest();
    assertThat(post1.getBody().readUtf8()).isEqualTo("body!");
    assertThat(post1.getSequenceNumber()).isEqualTo(1);
    RecordedRequest post2 = server.takeRequest();
    assertThat(post2.getBody().readUtf8()).isEqualTo("body!");
    assertThat(post2.getSequenceNumber()).isEqualTo(0);
}
