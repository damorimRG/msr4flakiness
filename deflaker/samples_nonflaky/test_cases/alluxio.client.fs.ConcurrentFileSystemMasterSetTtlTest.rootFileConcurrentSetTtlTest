@Test
public void rootFileConcurrentSetTtlTest() throws Exception {
    final int numThreads = CONCURRENCY_FACTOR;
    AlluxioURI[] files = new AlluxioURI[numThreads];
    long[] ttls = new long[numThreads];
    Random random = new Random();
    for (int i = 0; i < numThreads; i++) {
        files[i] = new AlluxioURI("/file" + i);
        mFileSystem.createFile(files[i], CreateFilePOptions.newBuilder().setWriteType(WritePType.MUST_CACHE).build()).close();
        ttls[i] = random.nextInt(2 * TTL_INTERVAL_MS);
    }
    assertErrorsSizeEquals(concurrentSetTtl(files, ttls), 0);
    // Wait for all the created files being deleted after the TTLs become expired.
    CommonUtils.sleepMs(4 * TTL_INTERVAL_MS);
    HeartbeatScheduler.execute(HeartbeatContext.MASTER_TTL_CHECK);
    Assert.assertEquals("There're remaining file existing with expired TTLs", 0, mFileSystem.listStatus(new AlluxioURI("/")).size());
}
