@Test
public void testMatchesItem() throws Exception {
    Tree rootTree = root.getTree("/");
    for (String prefix : prefixes) {
        Tree testTree = TreeUtil.addChild(rootTree, prefix + ":name", NodeTypeConstants.NT_OAK_UNSTRUCTURED);
        assertTrue(pattern.matches(testTree, null));
        assertTrue(pattern.matches(testTree, PropertyStates.createProperty(prefix + ":f", "anyval")));
        assertFalse(pattern.matches(testTree, PropertyStates.createProperty("a", Boolean.FALSE)));
        testTree.remove();
    }
    List<String> notMatching = ImmutableList.of(NamespaceRegistry.PREFIX_EMPTY, NamespaceRegistry.PREFIX_MIX, "any");
    for (String prefix : notMatching) {
        String name = (prefix.isEmpty()) ? "name" : prefix + ":name";
        Tree testTree = TreeUtil.addChild(rootTree, name, NodeTypeConstants.NT_OAK_UNSTRUCTURED);
        assertFalse(pattern.matches(testTree, null));
        assertFalse(pattern.matches(testTree, PropertyStates.createProperty("f", "anyval")));
        assertTrue(pattern.matches(testTree, PropertyStates.createProperty("jcr:a", Boolean.FALSE)));
        testTree.remove();
    }
}
