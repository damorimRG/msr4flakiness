public void testCoordJobIgnore() throws Exception {
    runTest("/v2/job/*", V2JobServlet.class, IS_SECURITY_ENABLED, new Callable<Void>() {

        @Override
        public Void call() throws Exception {
            MockDagEngineService.reset();
            Map<String, String> params = new HashMap<String, String>();
            params.put(RestConstants.ACTION_PARAM, RestConstants.JOB_ACTION_IGNORE);
            // url - oozie/v2/coord_job_id?action=ignore
            URL url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("PUT");
            conn.setRequestProperty("content-type", RestConstants.XML_CONTENT_TYPE);
            conn.setDoOutput(true);
            assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode());
            assertEquals(RestConstants.JOB_ACTION_CHANGE, MockCoordinatorEngineService.did);
            MockCoordinatorEngineService.reset();
            params = new HashMap<String, String>();
            params.put(RestConstants.ACTION_PARAM, RestConstants.JOB_ACTION_IGNORE);
            url = createURL(MockCoordinatorEngineService.JOB_ID + (MockCoordinatorEngineService.coordJobs.size() + 1), params);
            conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("PUT");
            conn.setRequestProperty("content-type", RestConstants.XML_CONTENT_TYPE);
            conn.setDoOutput(true);
            assertBadRequestOrInternalServerError(conn.getResponseCode());
            assertEquals(RestConstants.JOB_ACTION_CHANGE, MockCoordinatorEngineService.did);
            return null;
        }
    });
}
