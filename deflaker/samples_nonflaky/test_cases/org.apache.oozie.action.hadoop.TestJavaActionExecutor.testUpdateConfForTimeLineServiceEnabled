public void testUpdateConfForTimeLineServiceEnabled() throws Exception {
    Element actionXml = XmlUtils.parseXml("<java>" + "<job-tracker>" + getJobTrackerUri() + "</job-tracker>" + "<name-node>" + getNameNodeUri() + "</name-node>" + "<main-class>MAIN-CLASS</main-class>" + "</java>");
    JavaActionExecutor ae = new JavaActionExecutor();
    XConfiguration protoConf = new XConfiguration();
    protoConf.set(WorkflowAppService.HADOOP_USER, getTestUser());
    WorkflowJobBean wf = createBaseWorkflow(protoConf, "action");
    WorkflowActionBean action = (WorkflowActionBean) wf.getActions().get(0);
    action.setType(ae.getType());
    Context context = new Context(wf, action);
    Configuration actionConf = new JobConf();
    // Test when server side setting is not enabled
    Configuration launcherConf = ae.createLauncherConf(getFileSystem(), context, action, actionXml, actionConf);
    // disabled by default
    assertEquals("false", launcherConf.get(JavaActionExecutor.HADOOP_YARN_TIMELINE_SERVICE_ENABLED));
    ConfigurationService.set("oozie.action.launcher." + JavaActionExecutor.HADOOP_YARN_TIMELINE_SERVICE_ENABLED, "true");
    // Test when server side setting is enabled but tez-site.xml is not in DistributedCache
    launcherConf = ae.createLauncherConf(getFileSystem(), context, action, actionXml, actionConf);
    assertEquals("false", launcherConf.get(JavaActionExecutor.HADOOP_YARN_TIMELINE_SERVICE_ENABLED));
    final Path tezSite = new Path("/tmp/tez-site.xml");
    final FSDataOutputStream out = getFileSystem().create(tezSite);
    out.close();
    // Test when server side setting is enabled and tez-site.xml is in DistributedCache
    Element actionXmlWithTez = XmlUtils.parseXml("<java>" + "<job-tracker>" + getJobTrackerUri() + "</job-tracker>" + "<name-node>" + getNameNodeUri() + "</name-node>" + "<main-class>MAIN-CLASS</main-class>" + "<file>" + tezSite + "</file>" + "</java>");
    launcherConf = ae.createLauncherConf(getFileSystem(), context, action, actionXmlWithTez, actionConf);
    assertTrue(launcherConf.getBoolean(JavaActionExecutor.HADOOP_YARN_TIMELINE_SERVICE_ENABLED, false));
    // Test when server side setting is enabled, tez-site.xml is in DistributedCache
    // but user has disabled in action configuration
    Element actionXmlATSDisabled = XmlUtils.parseXml("<java>" + "<job-tracker>" + getJobTrackerUri() + "</job-tracker>" + "<name-node>" + getNameNodeUri() + "</name-node>" + "<configuration>" + "<property><name>oozie.launcher.yarn.timeline-service.enabled</name>" + "<value>false</value></property>" + "</configuration>" + "<main-class>MAIN-CLASS</main-class>" + "<file>" + tezSite + "</file>" + "</java>");
    actionConf = ae.createBaseHadoopConf(context, actionXmlATSDisabled);
    ae.setupActionConf(actionConf, context, actionXmlATSDisabled, new Path("hdfs:///tmp/workflow"));
    launcherConf = ae.createLauncherConf(getFileSystem(), context, action, actionXmlATSDisabled, actionConf);
    assertFalse(launcherConf.getBoolean(JavaActionExecutor.HADOOP_YARN_TIMELINE_SERVICE_ENABLED, false));
    getFileSystem().delete(tezSite, true);
}
