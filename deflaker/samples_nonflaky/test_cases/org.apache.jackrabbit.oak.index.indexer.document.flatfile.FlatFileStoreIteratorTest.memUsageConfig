@Test
public void memUsageConfig() {
    String configuredValue = System.clearProperty(BUFFER_MEM_LIMIT_CONFIG_NAME);
    try {
        NodeStateEntry root = new NodeStateEntry(EmptyNodeState.EMPTY_NODE, "/");
        NodeStateEntry e1Byte = new NodeStateEntry(EmptyNodeState.EMPTY_NODE, "/a/b", 1);
        NodeStateEntry e1MB = new NodeStateEntry(EmptyNodeState.EMPTY_NODE, "/a", 1 * 1024 * 1024);
        NodeStateEntry e100MB = new NodeStateEntry(EmptyNodeState.EMPTY_NODE, "/a", 100 * 1024 * 1024);
        {
            // default configured limit
            List<NodeStateEntry> list = Lists.newArrayList(root, e100MB, e1Byte);
            FlatFileStoreIterator fitr = new FlatFileStoreIterator(list.iterator(), ImmutableSet.of());
            NodeState rootNS = fitr.next().getNodeState();
            // default is 100MB, this should work
            NodeState aNS = rootNS.getChildNode("a");
            try {
                aNS.getChildNode("b");
                fail("Reading beyond default 100MB must fail");
            } catch (IllegalStateException ise) {
            // ignore
            }
        }
        {
            System.setProperty(BUFFER_MEM_LIMIT_CONFIG_NAME, "1");
            List<NodeStateEntry> list = Lists.newArrayList(root, e1MB, e1Byte);
            FlatFileStoreIterator fitr = new FlatFileStoreIterator(list.iterator(), ImmutableSet.of());
            NodeState rootNS = fitr.next().getNodeState();
            // configured limit is 10 bytes, this should work
            NodeState aNS = rootNS.getChildNode("a");
            try {
                aNS.getChildNode("b");
                fail("Reading beyond configured 1MB must fail");
            } catch (IllegalStateException ise) {
            // ignore
            }
        }
        {
            // illegal config behaves as default
            System.setProperty(BUFFER_MEM_LIMIT_CONFIG_NAME, "1A");
            List<NodeStateEntry> list = Lists.newArrayList(root, e100MB, e1Byte);
            FlatFileStoreIterator fitr = new FlatFileStoreIterator(list.iterator(), ImmutableSet.of());
            NodeState rootNS = fitr.next().getNodeState();
            // default is 100MB, this should work
            NodeState aNS = rootNS.getChildNode("a");
            try {
                aNS.getChildNode("b");
                fail("Reading beyond default 100MB must fail");
            } catch (IllegalStateException ise) {
            // ignore
            }
        }
        {
            // negative value for unbounded buffer
            System.setProperty(BUFFER_MEM_LIMIT_CONFIG_NAME, "-1");
            List<NodeStateEntry> list = Lists.newArrayList(root, e100MB, e1Byte);
            FlatFileStoreIterator fitr = new FlatFileStoreIterator(list.iterator(), ImmutableSet.of());
            NodeState rootNS = fitr.next().getNodeState();
            NodeState aNS = rootNS.getChildNode("a");
            // configure negative value - mem usage limit should be unbounded (long_max)
            aNS.getChildNode("b");
        }
    } finally {
        if (configuredValue == null) {
            System.clearProperty(BUFFER_MEM_LIMIT_CONFIG_NAME);
        } else {
            System.setProperty(BUFFER_MEM_LIMIT_CONFIG_NAME, configuredValue);
        }
    }
}
