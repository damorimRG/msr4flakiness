public void testXLogFilter() throws ServiceException, CommandException {
    Services services = new Services();
    services.init();
    try {
        XLogFilter xf2 = new XLogFilter();
        xf2.constructPattern();
        ArrayList<String> a = new ArrayList<String>();
        a.add("2009-06-24 02:43:13,958");
        a.add(" DEBUG");
        a.add(" WorkflowRunnerCallable:323 - " + XLog.Info.get().createPrefix() + " test log");
        assertEquals(true, xf2.matches(a));
    } finally {
        services.destroy();
    }
    XLogFilter.reset();
    XLogFilter.defineParameter("USER");
    XLogFilter.defineParameter("GROUP");
    XLogFilter.defineParameter("TOKEN");
    XLogFilter.defineParameter("APP");
    XLogFilter.defineParameter("JOB");
    XLogFilter.defineParameter("ACTION");
    XLogFilter xf = new XLogFilter();
    assertEquals(7, matches(xf));
    xf.setLogLevel(XLog.Level.WARN.toString());
    assertEquals(2, matches(xf));
    xf.setLogLevel(XLog.Level.WARN.toString());
    xf.setParameter("APP", "example-forkjoinwf");
    assertEquals(0, matches(xf));
    xf.setLogLevel(XLog.Level.DEBUG.toString() + "|" + XLog.Level.INFO.toString());
    xf.setParameter("JOB", "14-200904160239--example-forkjoinwf");
    assertEquals(2, matches(xf));
    XLogFilter xf1 = new XLogFilter();
    xf1.setParameter("USER", "oozie");
    assertEquals(3, matches(xf1));
    xf1.setParameter("GROUP", "oozie");
    assertEquals(2, matches(xf1));
    xf1.setParameter("TOKEN", "MYtoken");
    assertEquals(1, matches(xf1));
}
