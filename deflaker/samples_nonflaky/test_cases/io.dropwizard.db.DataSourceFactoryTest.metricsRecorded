@Test
public void metricsRecorded() throws Exception {
    dataSource();
    Map<String, Gauge> poolMetrics = metricRegistry.getGauges(MetricFilter.startsWith("io.dropwizard.db.ManagedPooledDataSource.test."));
    assertThat(poolMetrics.keySet()).contains("io.dropwizard.db.ManagedPooledDataSource.test.active", "io.dropwizard.db.ManagedPooledDataSource.test.idle", "io.dropwizard.db.ManagedPooledDataSource.test.waiting", "io.dropwizard.db.ManagedPooledDataSource.test.size", "io.dropwizard.db.ManagedPooledDataSource.test.created", "io.dropwizard.db.ManagedPooledDataSource.test.borrowed", "io.dropwizard.db.ManagedPooledDataSource.test.reconnected", "io.dropwizard.db.ManagedPooledDataSource.test.released", "io.dropwizard.db.ManagedPooledDataSource.test.releasedIdle", "io.dropwizard.db.ManagedPooledDataSource.test.returned", "io.dropwizard.db.ManagedPooledDataSource.test.removeAbandoned");
}
