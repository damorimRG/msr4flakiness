@Test
public void pathExcludeWithPathRestrictionsWarn() throws Exception {
    Tree idx = createIndex("test1", of("propa", "propb"));
    idx.setProperty(createProperty(PROP_EXCLUDED_PATHS, of("/test/a"), Type.STRINGS));
    // Do not provide type information
    root.commit();
    Tree test = root.getTree("/").addChild("test");
    test.addChild("a").setProperty("propa", 10);
    test.addChild("a").addChild("b").setProperty("propa", 10);
    test.addChild("c").setProperty("propa", 10);
    test.addChild("c").addChild("d").setProperty("propa", 10);
    root.commit();
    assertThat(explain("select [jcr:path] from [nt:base] where [propa] = 10 and isDescendantNode('/test/c')"), containsString("lucene:test1"));
    assertQuery("select [jcr:path] from [nt:base] where [propa] = 10 and isDescendantNode('/test/c')", asList("/test/c/d"));
    // List appender should not have any warn logs as we are searching under right descendant as per path restrictions
    assertFalse(isWarnMessagePresent(listAppender));
    assertTrue(explain("select [jcr:path] from [nt:base] where [propa] = 10").contains("lucene:test1"));
    // List appender now will have warn log as we are searching under root(/) but index definition have exclude path restriction.
    assertTrue(isWarnMessagePresent(listAppender));
}
