@Test
public void testCompositeConfigurations() {
    AuthenticationConfiguration ac = (AuthenticationConfiguration) mock(CompositeConfiguration.class, withSettings().extraInterfaces(AuthenticationConfiguration.class));
    PrivilegeConfiguration pc = (PrivilegeConfiguration) mock(CompositeConfiguration.class, withSettings().extraInterfaces(PrivilegeConfiguration.class));
    UserConfiguration uc = (UserConfiguration) mock(CompositeConfiguration.class, withSettings().extraInterfaces(UserConfiguration.class));
    AuthorizationConfiguration auc = (AuthorizationConfiguration) mock(CompositeConfiguration.class, withSettings().extraInterfaces(AuthorizationConfiguration.class));
    PrincipalConfiguration pnc = (PrincipalConfiguration) mock(CompositeConfiguration.class, withSettings().extraInterfaces(PrincipalConfiguration.class));
    TokenConfiguration tc = (TokenConfiguration) mock(CompositeConfiguration.class, withSettings().extraInterfaces(TokenConfiguration.class));
    SecurityProvider sp = builder.with(ac, ConfigurationParameters.EMPTY, pc, ConfigurationParameters.EMPTY, uc, ConfigurationParameters.EMPTY, auc, ConfigurationParameters.EMPTY, pnc, ConfigurationParameters.EMPTY, tc, ConfigurationParameters.EMPTY).build();
    assertTrue(sp.getConfiguration(AuthenticationConfiguration.class) instanceof CompositeConfiguration);
    assertTrue(sp.getConfiguration(AuthorizationConfiguration.class) instanceof CompositeConfiguration);
    assertTrue(sp.getConfiguration(PrincipalConfiguration.class) instanceof CompositeConfiguration);
    assertTrue(sp.getConfiguration(PrivilegeConfiguration.class) instanceof CompositeConfiguration);
    assertTrue(sp.getConfiguration(TokenConfiguration.class) instanceof CompositeConfiguration);
    assertTrue(sp.getConfiguration(UserConfiguration.class) instanceof CompositeConfiguration);
}
