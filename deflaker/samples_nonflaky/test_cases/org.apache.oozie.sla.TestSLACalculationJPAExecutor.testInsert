/**
 * Test simple insert
 *
 * @throws Exception
 */
@Test
public void testInsert() throws Exception {
    JPAService jpaService = Services.get().get(JPAService.class);
    assertNotNull(jpaService);
    String wfId = "workflow-1";
    cal.setTime(new Date());
    cal.add(Calendar.DAY_OF_MONTH, -2);
    Date expStart = cal.getTime();
    cal.add(Calendar.DAY_OF_MONTH, -1);
    Date expEnd = cal.getTime();
    Date actStart = new Date();
    cal.add(Calendar.DAY_OF_MONTH, 2);
    Date actEnd = cal.getTime();
    SLASummaryBean bean2 = _createSLASummaryBean(wfId, "RUNNING", EventStatus.START_MISS, expStart, expEnd, 1000, actStart, actEnd, 2000, (byte) 1, actEnd);
    List<JsonBean> insertList = new ArrayList<JsonBean>();
    insertList.add(bean2);
    BatchQueryExecutor.getInstance().executeBatchInsertUpdateDelete(insertList, null, null);
    SLASummaryBean sBean = SLASummaryQueryExecutor.getInstance().get(SLASummaryQuery.GET_SLA_SUMMARY, wfId);
    assertEquals(wfId, sBean.getId());
    assertEquals("RUNNING", sBean.getJobStatus());
    assertEquals(EventStatus.START_MISS, sBean.getEventStatus());
    assertEquals(expStart, sBean.getExpectedStart());
    assertEquals(expEnd, sBean.getExpectedEnd());
    assertEquals(1000, sBean.getExpectedDuration());
    assertEquals(actStart, sBean.getActualStart());
    assertEquals(actEnd, sBean.getActualEnd());
    assertEquals(2000, sBean.getActualDuration());
    assertEquals(actEnd, sBean.getLastModifiedTime());
}
