/**
 * Test : rerun <jobId> -action 1
 *
 * @throws Exception
 */
public void testCoordRerunCleanup() throws Exception {
    final String jobId = "0000000-" + new Date().getTime() + "-testCoordRerun-C";
    final int actionNum = 1;
    final String actionId = jobId + "@" + actionNum;
    try {
        addRecordToJobTable(jobId, CoordinatorJob.Status.SUCCEEDED);
        addRecordToActionTable(jobId, actionNum, actionId, CoordinatorAction.Status.SUCCEEDED, "coord-rerun-action1.xml");
    } catch (Exception e) {
        e.printStackTrace();
        fail("Could not update db.");
    }
    Path appPath = new Path(getFsTestCaseDir(), "coord");
    String outputDir = appPath.toString() + "/coord-input/2009/12/14/11/00";
    Path success = new Path(outputDir, "_SUCCESS");
    FileSystem fs = getFileSystem();
    fs.mkdirs(new Path(outputDir));
    fs.create(success, true);
    // before cleanup
    assertTrue(fs.exists(success));
    final OozieClient coordClient = LocalOozie.getCoordClient();
    coordClient.reRunCoord(jobId, RestConstants.JOB_COORD_SCOPE_ACTION, Integer.toString(actionNum), false, false);
    CoordinatorActionBean action2 = getCoordinatorAction(actionId);
    assertNotSame(action2.getStatus(), CoordinatorAction.Status.SUCCEEDED);
    waitFor(120 * 1000, new Predicate() {

        @Override
        public boolean evaluate() throws Exception {
            CoordinatorAction bean = coordClient.getCoordActionInfo(actionId);
            return (bean.getStatus() == CoordinatorAction.Status.WAITING || bean.getStatus() == CoordinatorAction.Status.READY);
        }
    });
    // after cleanup
    assertFalse(fs.exists(success));
}
