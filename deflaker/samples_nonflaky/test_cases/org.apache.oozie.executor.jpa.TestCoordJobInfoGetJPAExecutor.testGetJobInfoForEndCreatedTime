public void testGetJobInfoForEndCreatedTime() throws Exception {
    CoordinatorJobBean coordinatorJob1 = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, false, false);
    CoordinatorJobBean coordinatorJob2 = addRecordToCoordJobTable(CoordinatorJob.Status.KILLED, false, false);
    CoordinatorJobBean coordinatorJob3 = addRecordToCoordJobTable(CoordinatorJob.Status.FAILED, false, false);
    Date createTime1 = DateUtils.parseDateUTC("2012-01-03T10:00Z");
    Date createTime2 = DateUtils.parseDateUTC("2012-01-05T10:00Z");
    Date createTime3 = DateUtils.parseDateUTC("2012-01-010T10:00Z");
    coordinatorJob1.setCreatedTime(createTime1);
    coordinatorJob2.setCreatedTime(createTime2);
    coordinatorJob3.setCreatedTime(createTime3);
    CoordJobQueryExecutor.getInstance().executeUpdate(CoordJobQueryExecutor.CoordJobQuery.UPDATE_COORD_JOB, coordinatorJob1);
    CoordJobQueryExecutor.getInstance().executeUpdate(CoordJobQueryExecutor.CoordJobQuery.UPDATE_COORD_JOB, coordinatorJob2);
    CoordJobQueryExecutor.getInstance().executeUpdate(CoordJobQueryExecutor.CoordJobQuery.UPDATE_COORD_JOB, coordinatorJob3);
    JPAService jpaService = Services.get().get(JPAService.class);
    assertNotNull(jpaService);
    Map<String, List<String>> filter = new HashMap<String, List<String>>();
    CoordJobInfoGetJPAExecutor coordInfoGetCmd = new CoordJobInfoGetJPAExecutor(filter, 1, 20);
    CoordinatorJobInfo ret = jpaService.execute(coordInfoGetCmd);
    assertNotNull(ret);
    assertEquals(3, ret.getCoordJobs().size());
    filter.clear();
    filter.put(OozieClient.FILTER_CREATED_TIME_START, Arrays.asList("2012-01-02T10:00Z"));
    filter.put(OozieClient.FILTER_CREATED_TIME_END, Arrays.asList("2012-01-07T10:00Z"));
    coordInfoGetCmd = new CoordJobInfoGetJPAExecutor(filter, 1, 20);
    ret = jpaService.execute(coordInfoGetCmd);
    assertNotNull(ret);
    assertEquals(2, ret.getCoordJobs().size());
    // default, expected order of results is by createTime DESC
    CoordinatorJobBean jobBean = ret.getCoordJobs().get(0);
    assertEquals(coordinatorJob2.getStatus(), jobBean.getStatus());
    assertEquals(coordinatorJob2.getCreatedTime(), jobBean.getCreatedTime());
    CoordinatorJobBean jobBean1 = ret.getCoordJobs().get(1);
    assertEquals(coordinatorJob1.getStatus(), jobBean1.getStatus());
    assertEquals(coordinatorJob1.getCreatedTime(), jobBean1.getCreatedTime());
}
