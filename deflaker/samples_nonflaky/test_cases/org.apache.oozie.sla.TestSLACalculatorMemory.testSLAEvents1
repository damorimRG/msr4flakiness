@Test
public void testSLAEvents1() throws Exception {
    SLACalculatorMemory slaCalcMemory = new SLACalculatorMemory();
    EventHandlerService ehs = Services.get().get(EventHandlerService.class);
    slaCalcMemory.init(Services.get().get(ConfigurationService.class).getConf());
    WorkflowJobBean job1 = addRecordToWfJobTable(WorkflowJob.Status.PREP, WorkflowInstance.Status.PREP);
    SLARegistrationBean slaRegBean = _createSLARegistration(job1.getId(), AppType.WORKFLOW_JOB);
    // 1 hour
    slaRegBean.setExpectedStart(new Date(System.currentTimeMillis() - 1 * 1 * 3600 * 1000));
    slaRegBean.setExpectedDuration(2 * 3600 * 1000);
    // 1 hour
    slaRegBean.setExpectedEnd(new Date(System.currentTimeMillis() - 1 * 1 * 3600 * 1000));
    String jobId = slaRegBean.getId();
    slaCalcMemory.addRegistration(jobId, slaRegBean);
    assertEquals(1, slaCalcMemory.size());
    SLASummaryBean slaSummary = SLASummaryQueryExecutor.getInstance().get(SLASummaryQuery.GET_SLA_SUMMARY, jobId);
    assertEquals(SLAStatus.NOT_STARTED, slaSummary.getSLAStatus());
    assertEquals("PREP", slaSummary.getJobStatus());
    slaCalcMemory.updateJobSla(jobId);
    assertEquals(2, ehs.getEventQueue().size());
    slaSummary = SLASummaryQueryExecutor.getInstance().get(SLASummaryQuery.GET_SLA_SUMMARY, jobId);
    // both start miss and end miss (101)
    assertEquals(5, slaSummary.getEventProcessed());
    assertEquals(SLAEvent.EventStatus.END_MISS, slaSummary.getEventStatus());
    assertEquals(SLAStatus.MISS, slaSummary.getSLAStatus());
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    assertEquals(SLAStatus.MISS, slaSummary.getSLAStatus());
    job1.setStatusStr(WorkflowJob.Status.SUSPENDED.toString());
    job1.setLastModifiedTime(new Date());
    WorkflowJobQueryExecutor.getInstance().executeUpdate(WorkflowJobQuery.UPDATE_WORKFLOW_STATUS_MODTIME, job1);
    slaCalcMemory.addJobStatus(jobId, WorkflowJob.Status.SUSPENDED.toString(), EventStatus.SUSPEND, sdf.parse("2012-01-01"), null);
    slaSummary = SLASummaryQueryExecutor.getInstance().get(SLASummaryQuery.GET_SLA_SUMMARY, jobId);
    assertEquals(WorkflowJob.Status.SUSPENDED.toString(), slaSummary.getJobStatus());
    assertEquals(5, slaSummary.getEventProcessed());
    job1.setStatusStr(WorkflowJob.Status.SUCCEEDED.toString());
    job1.setLastModifiedTime(new Date());
    job1.setStartTime(sdf.parse("2012-01-01"));
    job1.setEndTime(sdf.parse("2012-01-02"));
    WorkflowJobQueryExecutor.getInstance().executeUpdate(WorkflowJobQuery.UPDATE_WORKFLOW_STATUS_INSTANCE_MOD_START_END, job1);
    slaCalcMemory.addJobStatus(jobId, WorkflowJob.Status.SUCCEEDED.toString(), EventStatus.SUCCESS, sdf.parse("2012-01-01"), sdf.parse("2012-01-02"));
    assertEquals(3, ehs.getEventQueue().size());
    slaSummary = SLASummaryQueryExecutor.getInstance().get(SLASummaryQuery.GET_SLA_SUMMARY, jobId);
    // All events processed and actual times stored (1000)
    assertEquals(8, slaSummary.getEventProcessed());
    assertEquals(SLAStatus.MET, slaSummary.getSLAStatus());
    assertEquals(WorkflowJob.Status.SUCCEEDED.toString(), slaSummary.getJobStatus());
    assertEquals(SLAEvent.EventStatus.DURATION_MISS, slaSummary.getEventStatus());
    assertEquals(sdf.parse("2012-01-01").getTime(), slaSummary.getActualStart().getTime());
    assertEquals(sdf.parse("2012-01-02").getTime(), slaSummary.getActualEnd().getTime());
    assertEquals(sdf.parse("2012-01-02").getTime() - sdf.parse("2012-01-01").getTime(), slaSummary.getActualDuration());
    assertEquals(0, slaCalcMemory.size());
}
