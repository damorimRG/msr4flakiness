@Test
void integrationJdbcDataSourceInitializerEnabled() {
    this.contextRunner.withUserConfiguration(EmbeddedDataSourceConfiguration.class).withConfiguration(AutoConfigurations.of(DataSourceTransactionManagerAutoConfiguration.class, JdbcTemplateAutoConfiguration.class, IntegrationAutoConfiguration.class)).withPropertyValues("spring.datasource.generate-unique-name=true", "spring.integration.jdbc.initialize-schema=always").run((context) -> {
        IntegrationProperties properties = context.getBean(IntegrationProperties.class);
        assertThat(properties.getJdbc().getInitializeSchema()).isEqualTo(DataSourceInitializationMode.ALWAYS);
        JdbcOperations jdbc = context.getBean(JdbcOperations.class);
        assertThat(jdbc.queryForList("select * from INT_MESSAGE")).isEmpty();
        assertThat(jdbc.queryForList("select * from INT_GROUP_TO_MESSAGE")).isEmpty();
        assertThat(jdbc.queryForList("select * from INT_MESSAGE_GROUP")).isEmpty();
        assertThat(jdbc.queryForList("select * from INT_LOCK")).isEmpty();
        assertThat(jdbc.queryForList("select * from INT_CHANNEL_MESSAGE")).isEmpty();
    });
}
