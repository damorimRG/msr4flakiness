@Test
public void testPackagesFile() throws Exception {
    final Enumeration<URL> enumeration = Collections.enumeration(Collections.singleton(new File(getPath("InputPackageNamesLoaderFile.xml")).toURI().toURL()));
    final Set<String> actualPackageNames = PackageNamesLoader.getPackageNames(new TestUrlsClassLoader(enumeration));
    final String[] expectedPackageNames = { "com.puppycrawl.tools.checkstyle", "com.puppycrawl.tools.checkstyle.checks", "com.puppycrawl.tools.checkstyle.checks.annotation", "com.puppycrawl.tools.checkstyle.checks.blocks", "com.puppycrawl.tools.checkstyle.checks.coding", "com.puppycrawl.tools.checkstyle.checks.design", "com.puppycrawl.tools.checkstyle.checks.header", "com.puppycrawl.tools.checkstyle.checks.imports", "com.puppycrawl.tools.checkstyle.checks.indentation", "com.puppycrawl.tools.checkstyle.checks.javadoc", "com.puppycrawl.tools.checkstyle.checks.metrics", "com.puppycrawl.tools.checkstyle.checks.modifier", "com.puppycrawl.tools.checkstyle.checks.naming", "com.puppycrawl.tools.checkstyle.checks.regexp", "com.puppycrawl.tools.checkstyle.checks.sizes", "com.puppycrawl.tools.checkstyle.checks.whitespace", "com.puppycrawl.tools.checkstyle.filefilters", "com.puppycrawl.tools.checkstyle.filters" };
    assertEquals(expectedPackageNames.length, actualPackageNames.size(), "Invalid package names length.");
    final Set<String> checkstylePackagesSet = new HashSet<>(Arrays.asList(expectedPackageNames));
    assertEquals(checkstylePackagesSet, actualPackageNames, "Invalid names set.");
}
