/**
 * Tests {@link PathUtils#subtractPaths(String, String)} throws the right exception if an input
 * path is invalid or the second argument isn't a prefix of the first.
 */
@Test
public void subtractPathsException() throws InvalidPathException {
    try {
        PathUtils.subtractPaths("", "/");
        fail("\"\" should throw an InvalidPathException");
    } catch (InvalidPathException e) {
        assertEquals(ExceptionMessage.PATH_INVALID.getMessage(""), e.getMessage());
    }
    try {
        PathUtils.subtractPaths("/", "noslash");
        fail("noslash should be an invalid path");
    } catch (InvalidPathException e) {
        assertEquals(ExceptionMessage.PATH_INVALID.getMessage("noslash"), e.getMessage());
    }
    try {
        PathUtils.subtractPaths("/a", "/not/a/prefix");
        fail("subtractPaths should complain about the prefix not being a prefix");
    } catch (RuntimeException e) {
        String expectedMessage = "Cannot subtract /not/a/prefix from /a because it is not a prefix";
        assertEquals(expectedMessage, e.getMessage());
    }
}
