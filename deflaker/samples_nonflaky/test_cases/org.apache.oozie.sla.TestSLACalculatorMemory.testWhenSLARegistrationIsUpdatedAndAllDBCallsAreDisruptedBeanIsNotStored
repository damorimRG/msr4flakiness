public void testWhenSLARegistrationIsUpdatedAndAllDBCallsAreDisruptedBeanIsNotStored() throws Exception {
    SLACalculatorMemory slaCalcMemory = new SLACalculatorMemory();
    slaCalcMemory.init(Services.get().get(ConfigurationService.class).getConf());
    final String jobId = "job-1-W";
    SLARegistrationBean slaRegBean = _createSLARegistration(jobId, AppType.WORKFLOW_JOB);
    SLARegistrationBean slaRegBean2 = _createSLARegistration(jobId, AppType.WORKFLOW_JOB);
    final int expectedDuration = 1000;
    slaRegBean2.setExpectedDuration(expectedDuration);
    try {
        addAndUpdateRegistrationWithDBCrushSimulation(slaCalcMemory, jobId, slaRegBean, slaRegBean2);
        fail("Expected JPAExecutorException not thrown");
    } catch (JPAExecutorException ex) {
        Assert.assertNotNull(slaCalcMemory.get(slaRegBean.getId()));
        // the update failed
        Assert.assertEquals(slaRegBean, slaCalcMemory.get(jobId).getSLARegistrationBean());
    } finally {
        FailingDBHelperForTest.resetDbPredicate();
        System.clearProperty(FailingHSQLDBDriverWrapper.USE_FAILING_DRIVER);
    }
}
