@Test(expected = DocumentStoreException.class)
public void concurrentUpdate1() throws Exception {
    DocumentStore store = new MemoryDocumentStore() {

        private final AtomicBoolean once = new AtomicBoolean(false);

        @Override
        public <T extends Document> T findAndUpdate(Collection<T> collection, UpdateOp update) {
            if (collection == SETTINGS && !once.getAndSet(true)) {
                V1_2.writeTo(this);
            }
            return super.findAndUpdate(collection, update);
        }
    };
    V1_0.writeTo(store);
    V1_2.writeTo(store);
}
