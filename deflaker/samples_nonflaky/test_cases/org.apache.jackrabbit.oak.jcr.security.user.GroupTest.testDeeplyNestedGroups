@Test
public void testDeeplyNestedGroups() throws NotExecutableException, RepositoryException {
    Set<Group> groups = new HashSet<Group>();
    try {
        User auth = getTestUser(superuser);
        Group topGroup = userMgr.createGroup(createGroupId());
        // Create chain of nested groups with auth member of bottom group
        Group bottomGroup = topGroup;
        for (int k = 0; k < 100; k++) {
            Group g = userMgr.createGroup(createGroupId());
            groups.add(g);
            bottomGroup.addMember(g);
            bottomGroup = g;
        }
        bottomGroup.addMember(auth);
        // Check that every groups has exactly one member
        for (Group g : groups) {
            Iterator<Authorizable> declaredMembers = g.getDeclaredMembers();
            assertTrue(declaredMembers.hasNext());
            declaredMembers.next();
            assertFalse(declaredMembers.hasNext());
        }
        // Check that we get all members from the getMembers call
        HashSet<Group> allGroups = new HashSet<Group>(groups);
        for (Iterator<Authorizable> it = topGroup.getMembers(); it.hasNext(); ) {
            Authorizable a = it.next();
            assertTrue(a.equals(auth) || allGroups.remove(a));
        }
        assertTrue(allGroups.isEmpty());
    } finally {
        for (Group g : groups) {
            g.remove();
        }
    }
}
