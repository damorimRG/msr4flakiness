@Test
public void testImportUuidMismatch() throws Exception {
    // importing an authorizable with an jcr:uuid that doesn't match the
    // hash of the given ID -> getAuthorizable(String id) will not find the
    // authorizable.
    // String calculatedUUID = "e358efa4-89f5-3062-b10d-d7316b65649e";
    String mismatchUUID = "a358efa4-89f5-3062-b10d-d7316b65649e";
    String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + "<sv:node sv:name=\"t\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">" + "   <sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:SystemUser</sv:value></sv:property>" + "   <sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>" + mismatchUUID + "</sv:value></sv:property>" + "   <sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property></sv:node>";
    Node target = getTargetNode();
    doImport(getTargetPath(), xml);
    assertTrue(target.isModified());
    assertTrue(getImportSession().hasPendingChanges());
    // node must be present:
    assertTrue(target.hasNode("t"));
    Node n = target.getNode("t");
    assertEquals(mismatchUUID, n.getUUID());
    // but UserManager.getAuthorizable(String) will not find the
    // authorizable
    Authorizable newUser = getUserManager().getAuthorizable("t");
    assertNull(newUser);
}
