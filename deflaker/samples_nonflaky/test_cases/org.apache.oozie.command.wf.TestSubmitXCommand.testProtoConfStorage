// It should not store Hadoop properties
public void testProtoConfStorage() throws Exception {
    final OozieClient wfClient = LocalOozie.getClient();
    Configuration conf = new XConfiguration();
    String workflowUri = getTestCaseFileUri("workflow.xml");
    String appXml = "<workflow-app xmlns='uri:oozie:workflow:0.1' name='${appName}-foo'> " + "<start to='end' /> " + "<end name='end' /> " + "</workflow-app>";
    writeToFile(appXml, workflowUri);
    conf.set(OozieClient.APP_PATH, workflowUri);
    conf.set(OozieClient.USER_NAME, getTestUser());
    conf.set("appName", "var-app-name");
    SubmitXCommand sc = new SubmitXCommand(conf);
    final String jobId = sc.call();
    waitFor(15 * 1000, new Predicate() {

        public boolean evaluate() throws Exception {
            return wfClient.getJobInfo(jobId).getStatus() == WorkflowJob.Status.PREP;
        }
    });
    WorkflowJobBean wf = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW, jobId);
    XConfiguration protoConf = new XConfiguration(new StringReader(wf.getProtoActionConf()));
    // Hadoop 2 adds "mapreduce.job.user.name" in addition to "user.name"
    if (protoConf.get("mapreduce.job.user.name") != null) {
        assertEquals(3, protoConf.size());
    } else {
        assertEquals(2, protoConf.size());
    }
    assertNull(protoConf.get(WorkflowAppService.APP_LIB_PATH_LIST));
    new File(getTestCaseDir() + "/lib").mkdirs();
    File.createTempFile("parentLibrary", ".jar", new File(getTestCaseDir() + "/lib"));
    conf.set(OozieClient.APP_PATH, workflowUri);
    conf.set(OozieClient.USER_NAME, getTestUser());
    conf.set("appName", "var-app-name");
    sc = new SubmitXCommand(conf);
    final String jobId1 = sc.call();
    waitFor(15 * 1000, new Predicate() {

        public boolean evaluate() throws Exception {
            return wfClient.getJobInfo(jobId1).getStatus() == WorkflowJob.Status.PREP;
        }
    });
    wf = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW, jobId1);
    protoConf = new XConfiguration(new StringReader(wf.getProtoActionConf()));
    // Hadoop 2 adds "mapreduce.job.user.name" in addition to "user.name"
    if (protoConf.get("mapreduce.job.user.name") != null) {
        assertEquals(4, protoConf.size());
    } else {
        assertEquals(3, protoConf.size());
    }
    assertNotNull(protoConf.get(WorkflowAppService.APP_LIB_PATH_LIST));
}
