@Test
public void testNotEqualKeys() throws Exception {
    GrpcChannelKey key1 = GrpcChannelKey.create(sConf);
    GrpcChannelKey key2 = GrpcChannelKey.create(sConf);
    InetSocketAddress bindAddress = new InetSocketAddress("0.0.0.0", 0);
    UserState us = UserState.Factory.create(sConf);
    GrpcServer server1 = GrpcServerBuilder.forAddress(GrpcServerAddress.create("localhost", bindAddress), sConf, us).build().start();
    GrpcServer server2 = GrpcServerBuilder.forAddress(GrpcServerAddress.create("localhost", bindAddress), sConf, us).build().start();
    GrpcServerAddress address1 = GrpcServerAddress.create(new InetSocketAddress("localhost", server1.getBindPort()));
    GrpcServerAddress address2 = GrpcServerAddress.create(new InetSocketAddress("localhost", server2.getBindPort()));
    key1.setServerAddress(address1);
    key2.setServerAddress(address2);
    ManagedChannel channel1 = GrpcManagedChannelPool.INSTANCE().acquireManagedChannel(key1, HEALTH_CHECK_TIMEOUT, SHUTDOWN_TIMEOUT);
    ManagedChannel channel2 = GrpcManagedChannelPool.INSTANCE().acquireManagedChannel(key2, HEALTH_CHECK_TIMEOUT, SHUTDOWN_TIMEOUT);
    assertTrue(channel1 != channel2);
    GrpcManagedChannelPool.INSTANCE().releaseManagedChannel(key1, SHUTDOWN_TIMEOUT);
    GrpcManagedChannelPool.INSTANCE().releaseManagedChannel(key2, SHUTDOWN_TIMEOUT);
    server2.shutdown();
    server2.shutdown();
}
