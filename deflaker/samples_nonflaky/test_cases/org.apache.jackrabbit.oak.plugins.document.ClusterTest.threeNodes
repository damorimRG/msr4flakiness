@Test
public void threeNodes() throws Exception {
    DocumentMK mk1 = createMK(1, 0);
    DocumentMK mk2 = createMK(2, 0);
    DocumentMK mk3 = createMK(3, 0);
    mk1.commit("/", "+\"test\":{}", null, null);
    mk2.commit("/", "+\"a\":{}", null, null);
    mk3.commit("/", "+\"b\":{}", null, null);
    mk2.backgroundWrite();
    mk2.backgroundRead();
    mk3.backgroundWrite();
    mk3.backgroundRead();
    mk1.backgroundWrite();
    mk1.backgroundRead();
    mk2.backgroundWrite();
    mk2.backgroundRead();
    mk3.backgroundWrite();
    mk3.backgroundRead();
    mk2.commit("/", "^\"test/x\":1", null, null);
    String n3 = mk3.getNodes("/test", mk3.getHeadRevision(), 0, 0, 10, null);
    // mk3 didn't see the previous change yet;
    // it is questionable if this should prevent any changes to this node
    // (currently it does not)
    assertEquals("{\":childNodeCount\":0}", n3);
    mk3.commit("/", "^\"test/y\":2", null, null);
    mk3.backgroundWrite();
    mk3.backgroundRead();
    mk1.backgroundWrite();
    mk1.backgroundRead();
    String r1 = mk1.getHeadRevision();
    String n1 = mk1.getNodes("/test", r1, 0, 0, 10, null);
    // mk1 only sees the change of mk3 so far
    assertEquals("{\"y\":2,\":childNodeCount\":0}", n1);
    mk2.backgroundWrite();
    mk2.backgroundRead();
    mk1.backgroundWrite();
    mk1.backgroundRead();
    String r1b = mk1.getHeadRevision();
    String n1b = mk1.getNodes("/test", r1b, 0, 0, 10, null);
    JSONParser parser = new JSONParser();
    JSONObject obj = (JSONObject) parser.parse(n1b);
    // mk1 now sees both changes
    assertEquals(1L, obj.get("x"));
    assertEquals(2L, obj.get("y"));
    assertEquals(0L, obj.get(":childNodeCount"));
}
