@Test
void rejectsBadSubcommands() throws Exception {
    assertThat(cli.run("plop")).hasValueSatisfying(t -> assertThat(t).isInstanceOf(UnrecognizedCommandException.class));
    assertThat(stdOut.toString()).isEmpty();
    assertThat(stdErr.toString()).isEqualTo(String.format("invalid choice: 'plop' (choose from 'check', 'custom')%n" + "usage: java -jar dw-thing.jar [-h] [-v] {check,custom} ...%n" + "%n" + "positional arguments:%n" + "  {check,custom}         available commands%n" + "%n" + "named arguments:%n" + "  -h, --help             show this help message and exit%n" + "  -v, --version          show the application version and exit%n"));
}
