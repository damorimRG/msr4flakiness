@Test
public void testDecodesWhenUrlDecodingIsDisabled() throws Exception {
    // When UndertowOptions.DECODE_URL is disabled, the URLDecodingHandler should decode values.
    Undertow undertow = Undertow.builder().setServerOption(UndertowOptions.DECODE_URL, false).addHttpListener(PORT, "0.0.0.0").setHandler(new URLDecodingHandler(new HttpHandler() {

        @Override
        public void handleRequest(HttpServerExchange exchange) throws Exception {
            exchange.getResponseSender().send(exchange.getRelativePath());
        }
    }, "UTF-8")).build();
    undertow.start();
    try {
        TestHttpClient client = new TestHttpClient();
        // '%253E' decodes to '%3E', which would decode to '>' if decoded twice
        try (CloseableHttpResponse response = client.execute(new HttpGet("http://localhost:" + PORT + "/%253E"))) {
            Assert.assertEquals("/%3E", getResponseString(response));
        }
    } finally {
        undertow.stop();
    }
}
