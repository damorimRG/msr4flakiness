@Test
public void should_work_with_flat_extracting() {
    // GIVEN
    List<CartoonCharacter> characters = asList(homer, fred);
    CartoonCharacter[] charactersAsArray = characters.toArray(new CartoonCharacter[0]);
    // WHEN
    softly.assertThat(characters).as("using flatExtracting on Iterable").overridingErrorMessage("error message").flatExtracting(CartoonCharacter::getChildren).containsAnyOf(homer, fred).hasSize(123);
    softly.assertThat(charactersAsArray).as("using flatExtracting on array").overridingErrorMessage("error message").flatExtracting(CartoonCharacter::getChildren).containsAnyOf(homer, fred).hasSize(456);
    // THEN
    List<Throwable> errorsCollected = softly.errorsCollected();
    assertThat(errorsCollected).hasSize(4);
    assertThat(errorsCollected.get(0)).hasMessage("[using flatExtracting on Iterable] error message");
    assertThat(errorsCollected.get(1)).hasMessage("[using flatExtracting on Iterable] error message");
    assertThat(errorsCollected.get(2)).hasMessage("[using flatExtracting on array] error message");
    assertThat(errorsCollected.get(3)).hasMessage("[using flatExtracting on array] error message");
}
