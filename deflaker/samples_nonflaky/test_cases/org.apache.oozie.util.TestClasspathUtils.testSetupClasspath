public void testSetupClasspath() throws Exception {
    Configuration conf = new Configuration(false);
    Map<String, String> env = new HashMap<String, String>();
    Path p1 = new Path(getFsTestCaseDir(), "foo.xml");
    getFileSystem().createNewFile(p1);
    DistributedCache.addFileToClassPath(p1, conf);
    Path p2 = new Path(getFsTestCaseDir(), "foo.txt");
    getFileSystem().createNewFile(p2);
    DistributedCache.addFileToClassPath(p2, conf);
    Path p3 = new Path(getFsTestCaseDir(), "foo.zip");
    getFileSystem().createNewFile(p3);
    DistributedCache.addArchiveToClassPath(p3, conf);
    ClasspathUtils.setupClasspath(env, conf);
    assertEquals(2, env.size());
    assertTrue(env.containsKey("CLASSPATH"));
    String[] paths = env.get("CLASSPATH").split(":");
    assertEquals(9, paths.length);
    Arrays.sort(paths);
    assertEquals("$HADOOP_COMMON_HOME/share/hadoop/common/*", paths[0]);
    assertEquals("$HADOOP_COMMON_HOME/share/hadoop/common/lib/*", paths[1]);
    assertEquals("$HADOOP_CONF_DIR", paths[2]);
    assertEquals("$HADOOP_HDFS_HOME/share/hadoop/hdfs/*", paths[3]);
    assertEquals("$HADOOP_HDFS_HOME/share/hadoop/hdfs/lib/*", paths[4]);
    assertEquals("$HADOOP_YARN_HOME/share/hadoop/yarn/*", paths[5]);
    assertEquals("$HADOOP_YARN_HOME/share/hadoop/yarn/lib/*", paths[6]);
    assertEquals("$PWD", paths[7]);
    assertEquals("$PWD/*", paths[8]);
    assertTrue(env.containsKey("$PWD"));
    paths = env.get("$PWD").split(":");
    assertEquals(3, paths.length);
    Arrays.sort(paths);
    assertEquals("$PWD/foo.txt", paths[0]);
    assertEquals("$PWD/foo.xml", paths[1]);
    assertEquals("$PWD/foo.zip", paths[2]);
}
