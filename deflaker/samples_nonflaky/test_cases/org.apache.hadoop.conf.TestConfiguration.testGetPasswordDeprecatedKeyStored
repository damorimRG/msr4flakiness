@Test
public void testGetPasswordDeprecatedKeyStored() throws Exception {
    final String oldKey = "test.password.old.key";
    final String newKey = "test.password.new.key";
    final String password = "MyPasswordForDeprecatedKey";
    final File tmpDir = GenericTestUtils.getRandomizedTestDir();
    tmpDir.mkdirs();
    final String ourUrl = new URI(LocalJavaKeyStoreProvider.SCHEME_NAME, "file", new File(tmpDir, "test.jks").toURI().getPath(), null).toString();
    conf = new Configuration(false);
    conf.set(CredentialProviderFactory.CREDENTIAL_PROVIDER_PATH, ourUrl);
    CredentialProvider provider = CredentialProviderFactory.getProviders(conf).get(0);
    provider.createCredentialEntry(oldKey, password.toCharArray());
    provider.flush();
    Configuration.addDeprecation(oldKey, newKey);
    assertThat(conf.getPassword(newKey), CoreMatchers.is(password.toCharArray()));
    assertThat(conf.getPassword(oldKey), CoreMatchers.is(password.toCharArray()));
    FileUtil.fullyDelete(tmpDir);
}
