@Test
public void getNewestRevisionAfterGC() throws Exception {
    getNewestRevisionAfterGC(false);
}
private void getNewestRevisionAfterGC(boolean withBranch) throws Exception {
    DocumentStore store = new MemoryDocumentStore();
    Revision r = populateStoreAndGC(store);
    // start fresh
    DocumentNodeStore ns = createTestStore(store, 1, 0, 0);
    String id = Utils.getIdFromPath(Path.fromString("/bar/test"));
    NodeDocument doc = store.find(NODES, id);
    assertNotNull(doc);
    RevisionVector baseRev = ns.getHeadRevision();
    Revision change = ns.newRevision();
    Branch branch = null;
    if (withBranch) {
        SortedSet<Revision> branchCommits = new TreeSet<>(StableRevisionComparator.REVERSE);
        branchCommits.add(change);
        branch = new Branch(branchCommits, baseRev, new ReferenceQueue<>(), null);
        baseRev = baseRev.asBranchRevision(1);
    }
    Revision rev = doc.getNewestRevision(ns, baseRev, change, branch, new HashSet<>());
    assertEquals(r, rev);
}
