// OAK-2288
@Test
public void mergedBranchVisibility() throws Exception {
    final DocumentNodeStore store = builderProvider.newBuilder().setAsyncDelay(0).getNodeStore();
    DocumentStore docStore = store.getDocumentStore();
    NodeBuilder builder1 = store.getRoot().builder();
    builder1.child("test");
    merge(store, builder1);
    builder1 = store.getRoot().builder();
    NodeBuilder node = builder1.getChildNode("test").child("node");
    String id = Utils.getIdFromPath("/test/node");
    int i = 0;
    // force creation of a branch
    while (docStore.find(NODES, id) == null) {
        node.child("foo-" + i++);
    }
    NodeDocument doc = docStore.find(NODES, id);
    assertNotNull(doc);
    RevisionVector rev = new RevisionVector(doc.getLocalDeleted().firstKey());
    merge(store, builder1);
    // must not be visible at the revision of the branch commit
    assertFalse(store.getRoot(rev).getChildNode("test").getChildNode("node").exists());
    // must be visible at the revision of the merged branch
    assertTrue(store.getRoot().getChildNode("test").getChildNode("node").exists());
}
