/**
 * Test : kill a non-killed action. Will throw the exception from {@link
 * WorkflowActionKillXCommand.verifyPrecondition()}
 *
 * @throws Exception
 */
public void testWfActionKillFailed() throws Exception {
    String externalJobID = launchSleepJob(1000);
    WorkflowJobBean job = this.addRecordToWfJobTable(WorkflowJob.Status.RUNNING, WorkflowInstance.Status.RUNNING);
    WorkflowActionBean action = this.addRecordToWfActionTable(job.getId(), externalJobID, "1", WorkflowAction.Status.RUNNING, null);
    JPAService jpaService = Services.get().get(JPAService.class);
    assertNotNull(jpaService);
    WorkflowActionGetJPAExecutor wfActionGetCmd = new WorkflowActionGetJPAExecutor(action.getId());
    action = jpaService.execute(wfActionGetCmd);
    assertEquals(action.getStatus(), WorkflowAction.Status.RUNNING);
    assertEquals(action.getExternalStatus(), "RUNNING");
    new ActionKillXCommand(action.getId()).call();
    // action is not in KILLED, action status must not change
    action = jpaService.execute(wfActionGetCmd);
    assertEquals(action.getStatus(), WorkflowAction.Status.RUNNING);
    assertEquals(action.getExternalStatus(), "RUNNING");
}
