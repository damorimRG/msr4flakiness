@Test
public void shouldMigrateToVersion2() throws SQLException {
    Connection connection = createConnection();
    try {
        // create schema version 1
        SchemaUpdater updater = new SchemaUpdater(connection, "TOGGLZ", DefaultMapSerializer.multiline());
        assertFalse(updater.doesTableExist());
        updater.migrateToVersion1();
        assertTrue(updater.isSchemaVersion1());
        // insert two feature states
        update(connection, "INSERT INTO TOGGLZ VALUES ('F1', 1, 'ck, admin')");
        update(connection, "INSERT INTO TOGGLZ VALUES ('F2', 1, '')");
        update(connection, "INSERT INTO TOGGLZ VALUES ('F3', 1, NULL)");
        List<Object[]> dataBefore = query(connection, "SELECT FEATURE_NAME, FEATURE_USERS FROM TOGGLZ ORDER BY FEATURE_NAME");
        assertEquals(3, dataBefore.size());
        assertEquals("F1", dataBefore.get(0)[0]);
        assertEquals("ck, admin", dataBefore.get(0)[1]);
        // migrate the schema
        updater.migrateToVersion2();
        // check the new columns are present
        assertTrue(querySucceeds(connection, "SELECT FEATURE_NAME,STRATEGY_ID,STRATEGY_PARAMS FROM TOGGLZ"));
        // check the old users column is deleted
        assertFalse(querySucceeds(connection, "SELECT FEATURE_USERS FROM TOGGLZ"));
        // check 3 features are there after the migration
        List<Object[]> dataAfter = query(connection, "SELECT FEATURE_NAME, STRATEGY_ID, STRATEGY_PARAMS FROM TOGGLZ ORDER BY FEATURE_NAME");
        assertEquals(3, dataBefore.size());
        // first feature is migrated
        assertEquals("F1", dataAfter.get(0)[0]);
        assertEquals(UsernameActivationStrategy.ID, dataAfter.get(0)[1]);
        assertEquals("users=ck, admin", dataAfter.get(0)[2].toString().trim());
        // second feature didn't change
        assertEquals("F2", dataAfter.get(1)[0]);
        assertEquals(null, dataAfter.get(1)[1]);
        assertEquals(null, dataAfter.get(1)[2]);
        // second feature didn't change
        assertEquals("F3", dataAfter.get(2)[0]);
        assertEquals(null, dataAfter.get(2)[1]);
        assertEquals(null, dataAfter.get(2)[2]);
    } finally {
        DbUtils.closeQuietly(connection);
    }
}
