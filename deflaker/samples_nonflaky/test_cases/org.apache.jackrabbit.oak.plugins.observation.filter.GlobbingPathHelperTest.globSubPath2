@Test
public void globSubPath2() throws Exception {
    assertMatches("foo", "foo");
    assertDoesntMatch("foo", "/foo");
    assertMatches("**", "foo");
    assertMatches("**", "/foo");
    assertMatches("**", "foo/bar");
    assertMatches("**", "foo/bar/zoo");
    assertMatches("*.html", "foo.html");
    // '*' doesnt match /
    assertDoesntMatch("*.html", "/foo.html");
    assertMatches("**/*.html", "foo.html");
    assertMatches("**/*.*", "foo.html");
    assertDoesntMatch("**/*.*", "foohtml");
    assertMatches("**/*.html", "/foo.html");
    assertMatches("**/*.*", "/foo.html");
    assertMatches("**/*.html", "bar/foo.html");
    assertMatches("**/*.*", "bar/foo.html");
    assertMatches("**/*.html", "bar/a/b/foo.html");
    assertMatches("**/*.*", "bar/a/b/foo.html");
    // no '.':
    assertDoesntMatch("**/*.*", "bar/foohtml");
    assertMatches("**/*.html", "/bar/foo.html");
    assertMatches("**/*.*", "/bar/foo.html");
    // no '.':
    assertDoesntMatch("**/*.*", "/bar/foohtml");
    assertMatches("**/*.html", "bar/zoo/foo.html");
    assertMatches("**/*.*", "bar/zoo/foo.html");
    // no '.':
    assertDoesntMatch("**/*.*", "bar/zoo/foohtml");
    assertMatches("**/*.html", "/bar/zoo/foo.html");
    assertMatches("**/*.*", "/bar/zoo/foo.html");
    // no '.':
    assertDoesntMatch("**/*.*", "/bar/zoo/foohtml");
}
