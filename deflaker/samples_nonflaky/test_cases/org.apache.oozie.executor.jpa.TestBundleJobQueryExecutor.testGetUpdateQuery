public void testGetUpdateQuery() throws Exception {
    EntityManager em = jpaService.getEntityManager();
    BundleJobBean bean = addRecordToBundleJobTable(Job.Status.PREP, false);
    // UPDATE_BUNDLE_JOB
    Query query = BundleJobQueryExecutor.getInstance().getUpdateQuery(BundleJobQuery.UPDATE_BUNDLE_JOB, bean, em);
    assertEquals(query.getParameterValue("appName"), bean.getAppName());
    assertEquals(query.getParameterValue("appPath"), bean.getAppPath());
    assertEquals(query.getParameterValue("conf"), bean.getConfBlob());
    assertEquals(query.getParameterValue("timeOut"), bean.getTimeout());
    assertEquals(query.getParameterValue("createdTime"), bean.getCreatedTimestamp());
    assertEquals(query.getParameterValue("endTime"), bean.getEndTimestamp());
    assertEquals(query.getParameterValue("jobXml"), bean.getJobXmlBlob());
    assertEquals(query.getParameterValue("lastModifiedTime"), bean.getLastModifiedTimestamp());
    assertEquals(query.getParameterValue("origJobXml"), bean.getOrigJobXmlBlob());
    assertEquals(query.getParameterValue("startTime"), bean.getstartTimestamp());
    assertEquals(query.getParameterValue("status"), bean.getStatus().toString());
    assertEquals(query.getParameterValue("timeUnit"), bean.getTimeUnitStr());
    assertEquals(query.getParameterValue("pending"), bean.getPending());
    assertEquals(query.getParameterValue("id"), bean.getId());
    // UPDATE_BUNDLE_JOB_STATUS
    query = BundleJobQueryExecutor.getInstance().getUpdateQuery(BundleJobQuery.UPDATE_BUNDLE_JOB_STATUS, bean, em);
    assertEquals(query.getParameterValue("status"), bean.getStatus().toString());
    assertEquals(query.getParameterValue("id"), bean.getId());
    // UPDATE_BUNDLE_JOB_STATUS_PENDING
    query = BundleJobQueryExecutor.getInstance().getUpdateQuery(BundleJobQuery.UPDATE_BUNDLE_JOB_STATUS_PENDING, bean, em);
    assertEquals(query.getParameterValue("status"), bean.getStatus().toString());
    assertEquals(query.getParameterValue("pending"), bean.getPending());
    assertEquals(query.getParameterValue("id"), bean.getId());
    // UPDATE_BUNDLE_JOB_STATUS_PENDING_SUSP_MOD_TIME:
    query = BundleJobQueryExecutor.getInstance().getUpdateQuery(BundleJobQuery.UPDATE_BUNDLE_JOB_STATUS_PENDING_SUSP_MOD_TIME, bean, em);
    assertEquals(query.getParameterValue("status"), bean.getStatus().toString());
    assertEquals(query.getParameterValue("lastModifiedTime"), bean.getLastModifiedTimestamp());
    assertEquals(query.getParameterValue("pending"), bean.getPending());
    assertEquals(query.getParameterValue("suspendedTime"), bean.getSuspendedTimestamp());
    assertEquals(query.getParameterValue("id"), bean.getId());
    // UPDATE_BUNDLE_JOB_STATUS_PENDING_MODTIME:
    query = BundleJobQueryExecutor.getInstance().getUpdateQuery(BundleJobQuery.UPDATE_BUNDLE_JOB_STATUS_PENDING_MODTIME, bean, em);
    assertEquals(query.getParameterValue("status"), bean.getStatus().toString());
    assertEquals(query.getParameterValue("lastModifiedTime"), bean.getLastModifiedTimestamp());
    assertEquals(query.getParameterValue("pending"), bean.getPending());
    assertEquals(query.getParameterValue("id"), bean.getId());
    // UPDATE_BUNDLE_JOB_STATUS_PAUSE_ENDTIME:
    query = BundleJobQueryExecutor.getInstance().getUpdateQuery(BundleJobQuery.UPDATE_BUNDLE_JOB_STATUS_PAUSE_ENDTIME, bean, em);
    assertEquals(query.getParameterValue("status"), bean.getStatus().toString());
    assertEquals(query.getParameterValue("pauseTime"), bean.getPauseTimestamp());
    assertEquals(query.getParameterValue("endTime"), bean.getEndTimestamp());
    assertEquals(query.getParameterValue("id"), bean.getId());
    // UPDATE_BUNDLE_JOB_PAUSE_KICKOFF:
    query = BundleJobQueryExecutor.getInstance().getUpdateQuery(BundleJobQuery.UPDATE_BUNDLE_JOB_PAUSE_KICKOFF, bean, em);
    assertEquals(query.getParameterValue("pauseTime"), bean.getPauseTimestamp());
    assertEquals(query.getParameterValue("kickoffTime"), bean.getKickoffTimestamp());
    assertEquals(query.getParameterValue("id"), bean.getId());
    em.close();
}
