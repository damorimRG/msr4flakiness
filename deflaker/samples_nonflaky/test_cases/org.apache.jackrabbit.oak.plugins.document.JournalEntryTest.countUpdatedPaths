@Test
public void countUpdatedPaths() {
    DocumentStore store = new MemoryDocumentStore();
    JournalEntry entry = JOURNAL.newDocument(store);
    assertEquals("Incorrect number of initial paths", 0, entry.getNumChangedNodes());
    assertFalse("Incorrect hasChanges", entry.hasChanges());
    entry.modified(p("/foo"));
    entry.modified(p("/bar"));
    assertEquals("Incorrect number of paths", 2, entry.getNumChangedNodes());
    assertTrue("Incorrect hasChanges", entry.hasChanges());
    entry.modified(Arrays.asList(p("/foo1"), p("/bar1")));
    assertEquals("Incorrect number of paths", 4, entry.getNumChangedNodes());
    assertTrue("Incorrect hasChanges", entry.hasChanges());
    entry.modified(p("/foo/bar2"));
    assertEquals("Incorrect number of paths", 5, entry.getNumChangedNodes());
    assertTrue("Incorrect hasChanges", entry.hasChanges());
    entry.modified(p("/foo3/bar3"));
    assertEquals("Incorrect number of paths", 7, entry.getNumChangedNodes());
    assertTrue("Incorrect hasChanges", entry.hasChanges());
    entry.modified(Arrays.asList(p("/foo/bar4"), p("/foo5/bar5")));
    assertEquals("Incorrect number of paths", 10, entry.getNumChangedNodes());
    assertTrue("Incorrect hasChanges", entry.hasChanges());
}
