@Test
public void updateKey() {
    PriorityCache<String, Integer> cache = new PriorityCache<String, Integer>(1, 0);
    assertTrue(cache.put("one", 1, 0, (byte) 0));
    // Cache is full -> cannot put another key of the same cost
    assertFalse(cache.put("two", 2, 0, (byte) 0));
    // But updating an existing key works and boosts its cost to 1
    assertTrue(cache.put("one", 1, 0, (byte) 0));
    // such that adding another key only works at cost 2 and greater
    assertFalse(cache.put("two", 2, 0, (byte) 1));
    assertTrue(cache.put("two", 2, 0, (byte) 2));
}
