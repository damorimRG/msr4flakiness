@Test
public void testRemoveSubTreeWithRestriction() throws Exception {
    /* allow READ/WRITE privilege for testUser at 'path' */
    allow(path, testUser.getPrincipal(), readWritePrivileges);
    /* deny REMOVE_NODE privileges at subtree. */
    deny(path, privilegesFromName(PrivilegeConstants.JCR_REMOVE_NODE), createGlobRestriction("*/" + nodeName3));
    testSession.getNode(childNPath).getNode(nodeName3).remove();
    try {
        testSession.save();
        fail("Removing child node must be denied.");
    } catch (AccessDeniedException e) {
    // success
    }
}
