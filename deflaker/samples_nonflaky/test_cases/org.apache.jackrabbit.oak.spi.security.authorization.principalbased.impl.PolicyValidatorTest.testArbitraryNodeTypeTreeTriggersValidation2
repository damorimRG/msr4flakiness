@Test
public void testArbitraryNodeTypeTreeTriggersValidation2() throws Exception {
    NodeState rootState = spy(getTreeProvider().asNodeState(root.getTree(PathUtils.ROOT_PATH)));
    Validator validator = getValidatorAtNodeTypeTree(rootState, "notJcrSystem", false);
    when(mockNodeState.hasChildNode(REP_PRINCIPAL_POLICY)).thenReturn(true);
    when(mockNodeState.getChildNode(REP_PRINCIPAL_POLICY)).thenReturn(mockNodeState);
    ;
    try {
        validator.childNodeChanged(REP_PRINCIPAL_POLICY, mockNodeState, mockNodeState);
        failCommitFailedExcpected(32);
    } catch (CommitFailedException e) {
        assertCommitFailed(e, 32);
    }
}
