@Test
public void testEffectivePolicyIsolatedAce() throws Exception {
    Root r = spy(root);
    ContentSession cs = when(spy(adminSession).getLatestRoot()).thenReturn(r).getMock();
    when(r.getContentSession()).thenReturn(cs);
    Tree testTree = r.getTree(testPath);
    Tree ace = TreeUtil.addChild(testTree, "ace", NT_REP_GRANT_ACE);
    ace.setProperty(REP_PRINCIPAL_NAME, testPrincipal.getName());
    ace.setProperty(REP_PRIVILEGES, ImmutableList.of(JCR_READ), Type.NAMES);
    ResultRow row = when(mock(ResultRow.class).getPath()).thenReturn(ace.getPath()).getMock();
    Iterable rows = ImmutableList.of(row);
    Result res = mock(Result.class);
    when(res.getRows()).thenReturn(rows).getMock();
    QueryEngine qe = mock(QueryEngine.class);
    when(qe.executeQuery(anyString(), anyString(), any(Map.class), any(Map.class))).thenReturn(res);
    when(r.getQueryEngine()).thenReturn(qe);
    AccessControlManagerImpl mgr = createAccessControlManager(r, getNamePathMapper());
    AccessControlPolicy[] policies = mgr.getEffectivePolicies(ImmutableSet.of(testPrincipal));
    assertPolicies(policies, 0);
}
