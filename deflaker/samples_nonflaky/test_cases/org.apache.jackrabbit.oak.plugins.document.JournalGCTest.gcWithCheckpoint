@Test
public void gcWithCheckpoint() throws Exception {
    Clock c = new Clock.Virtual();
    c.waitUntil(System.currentTimeMillis());
    DocumentNodeStore ns = builderProvider.newBuilder().setJournalGCMaxAge(TimeUnit.HOURS.toMillis(1)).clock(c).setAsyncDelay(0).getNodeStore();
    // perform some change
    NodeBuilder builder = ns.getRoot().builder();
    builder.child("foo");
    ns.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);
    Revision head = ns.getHeadRevision().getRevision(ns.getClusterId());
    assertNotNull(head);
    // trigger creation of journal entry
    ns.runBackgroundOperations();
    String cp = ns.checkpoint(TimeUnit.DAYS.toMillis(1));
    JournalEntry entry = ns.getDocumentStore().find(JOURNAL, JournalEntry.asId(head));
    assertNotNull(entry);
    // wait two hours
    c.waitUntil(c.getTime() + TimeUnit.HOURS.toMillis(2));
    // instruct journal collector to remove entries older than one hour
    ns.getJournalGarbageCollector().gc();
    // must not remove existing entry, because checkpoint is still valid
    entry = ns.getDocumentStore().find(JOURNAL, JournalEntry.asId(head));
    assertNotNull(entry);
    ns.release(cp);
    ns.getJournalGarbageCollector().gc();
    // now journal GC can remove the entry
    entry = ns.getDocumentStore().find(JOURNAL, JournalEntry.asId(head));
    assertNull(entry);
}
