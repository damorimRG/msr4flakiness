/**
 * Basic submit with include file
 * @throws Exception
 */
public void testBasicSubmitWithIncludeFile() throws Exception {
    Configuration conf = new XConfiguration();
    final File includePathFile = new File(getTestCaseDir(), "include1.xml");
    final String URI_TEMPLATE_INCLUDE_XML = "file:///tmp/include_xml/workflows/${YEAR}/${DAY}";
    final String URI_TEMPLATE_COORD_XML = "file:///tmp/coord_xml/workflows/${YEAR}/${DAY}";
    String includeXml = "<datasets> " + "<dataset name=\"A\" frequency=\"${coord:days(7)}\" initial-instance=\"2009-02-01T01:00Z\" timezone=\"UTC\">" + "<uri-template>" + URI_TEMPLATE_INCLUDE_XML + "</uri-template>" + "</dataset> " + "</datasets>";
    writeToFile(includeXml, includePathFile);
    File appPathFile = new File(getTestCaseDir(), "coordinator.xml");
    String appXml = "<coordinator-app name=\"${appName}-foo\" frequency=\"${coord:days(1)}\" start=\"2009-02-01T01:00Z\" " + "end=\"2009-02-03T23:59Z\" timezone=\"UTC\" xmlns=\"uri:oozie:coordinator:0.2\">" + "<controls> " + "<execution>LIFO</execution>" + "</controls>" + "<datasets> " + "<include>" + includePathFile.toURI() + "</include>" + "<dataset name=\"B\" frequency=\"${coord:days(7)}\" initial-instance=\"2009-02-01T01:00Z\" timezone=\"UTC\">" + "<uri-template>" + URI_TEMPLATE_COORD_XML + "</uri-template>" + "</dataset> " + "</datasets>" + " <input-events> " + "<data-in name=\"inputA\" dataset=\"A\"> <instance>${coord:latest(0)}</instance> </data-in>  " + "<data-in name=\"inputB\" dataset=\"B\"> <instance>${coord:latest(0)}</instance> </data-in>  " + "</input-events> " + "<action>" + "<workflow>" + "<app-path>hdfs:///tmp/workflows/</app-path> " + "<configuration>" + "<property> <name>inputA</name> <value>${coord:dataIn('inputB')}</value> </property> " + "</configuration>" + "</workflow>" + "</action>" + " </coordinator-app>";
    writeToFile(appXml, appPathFile);
    conf.set(OozieClient.COORDINATOR_APP_PATH, appPathFile.toURI().toString());
    conf.set(OozieClient.USER_NAME, getTestUser());
    conf.set("appName", "var-app-name");
    CoordSubmitXCommand sc = new CoordSubmitXCommand(conf);
    String jobId = sc.call();
    assertEquals(jobId.substring(jobId.length() - 2), "-C");
    CoordinatorJobBean job = checkCoordJobs(jobId);
    assertNotNull(job);
    Element processedJobXml = XmlUtils.parseXml(job.getJobXml());
    Namespace namespace = processedJobXml.getNamespace();
    @SuppressWarnings("unchecked")
    List<Element> datainElements = processedJobXml.getChild("input-events", namespace).getChildren("data-in", namespace);
    assertTrue("<data-in> should be 2. One from coordinator.xml and the other from the include file", datainElements.size() == 2);
    assertEquals(URI_TEMPLATE_INCLUDE_XML, datainElements.get(0).getChild("dataset", namespace).getChildText("uri-template", namespace));
    assertEquals(URI_TEMPLATE_COORD_XML, datainElements.get(1).getChild("dataset", namespace).getChildText("uri-template", namespace));
}
