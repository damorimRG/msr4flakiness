@Test
public void testNotEqual() {
    List<RestrictionDefinition> defs = new ArrayList<>();
    // - different type
    defs.add(new RestrictionDefinitionImpl(name, Type.STRING, true));
    // - different name
    defs.add(new RestrictionDefinitionImpl("otherName", Type.NAME, true));
    // - different mandatory flag
    defs.add(new RestrictionDefinitionImpl(name, Type.NAME, false));
    // - different mv flag
    defs.add(new RestrictionDefinitionImpl(name, Type.NAMES, true));
    // - different impl
    defs.add(new RestrictionDefinition() {

        @NotNull
        @Override
        public String getName() {
            return name;
        }

        @NotNull
        @Override
        public Type<?> getRequiredType() {
            return Type.NAME;
        }

        @Override
        public boolean isMandatory() {
            return true;
        }
    });
    for (RestrictionDefinition rd : defs) {
        assertNotEquals(definition, rd);
    }
}
