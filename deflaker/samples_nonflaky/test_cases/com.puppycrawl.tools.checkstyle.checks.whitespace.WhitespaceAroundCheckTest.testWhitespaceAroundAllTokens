@Test
public void testWhitespaceAroundAllTokens() throws Exception {
    final DefaultConfiguration checkConfig = createModuleConfig(WhitespaceAroundCheck.class);
    checkConfig.addAttribute("tokens", "ASSIGN, ARRAY_INIT, BAND, BAND_ASSIGN, BOR, " + "BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, " + "DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, " + "LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, " + "LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, " + "MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, " + "RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, " + "LITERAL_ASSERT, TYPE_EXTENSION_AND, WILDCARD_TYPE, GENERIC_START, GENERIC_END, " + "ELLIPSIS");
    checkConfig.addAttribute("allowEmptyTypes", "true");
    checkConfig.addAttribute("allowEmptyCatches", "true");
    final String[] expected = { "6:29: " + getCheckMessage(MSG_WS_NOT_FOLLOWED, "<"), "6:29: " + getCheckMessage(MSG_WS_NOT_PRECEDED, "<"), "6:35: " + getCheckMessage(MSG_WS_NOT_FOLLOWED, "<"), "6:35: " + getCheckMessage(MSG_WS_NOT_PRECEDED, "<"), "6:36: " + getCheckMessage(MSG_WS_NOT_FOLLOWED, "?"), "6:36: " + getCheckMessage(MSG_WS_NOT_PRECEDED, "?"), "6:37: " + getCheckMessage(MSG_WS_NOT_FOLLOWED, ">"), "6:37: " + getCheckMessage(MSG_WS_NOT_PRECEDED, ">"), "6:38: " + getCheckMessage(MSG_WS_NOT_PRECEDED, ">") };
    verify(checkConfig, getPath("InputWhitespaceAroundAllTokens.java"), expected);
}
