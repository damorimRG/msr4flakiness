@Test
void applicationRunnerFailureCausesApplicationFailedEventToBePublished() throws Exception {
    SpringApplication application = new SpringApplication(ExampleConfig.class);
    application.setWebApplicationType(WebApplicationType.NONE);
    @SuppressWarnings("unchecked")
    ApplicationListener<SpringApplicationEvent> listener = mock(ApplicationListener.class);
    application.addListeners(listener);
    ApplicationRunner runner = mock(ApplicationRunner.class);
    Exception failure = new Exception();
    willThrow(failure).given(runner).run(isA(ApplicationArguments.class));
    application.addInitializers((context) -> context.getBeanFactory().registerSingleton("runner", runner));
    assertThatIllegalStateException().isThrownBy(application::run).withCause(failure);
    verify(listener).onApplicationEvent(isA(ApplicationStartedEvent.class));
    verify(listener).onApplicationEvent(isA(ApplicationFailedEvent.class));
    verify(listener, never()).onApplicationEvent(isA(ApplicationReadyEvent.class));
}
