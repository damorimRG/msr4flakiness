/**
 * Invalidate from staging.
 */
@Test
public void invalidateStaging() throws IOException {
    LOG.info("Starting invalidateStaging");
    // create executor
    taskLatch = new CountDownLatch(2);
    callbackLatch = new CountDownLatch(2);
    afterExecuteLatch = new CountDownLatch(2);
    executor = new TestExecutor(1, taskLatch, callbackLatch, afterExecuteLatch);
    cache = new CompositeDataStoreCache(root.getAbsolutePath(), null, 80 * 1024, /*
        bytes */
    10, /* staging % */
    1, /*threads*/
    loader, uploader, statsProvider, executor, scheduledExecutor, fileCacheExecutor, 3000, 6000);
    closer.register(cache);
    File f = copyToFile(randomStream(0, 4 * 1024), folder.newFile());
    boolean accepted = cache.stage(ID_PREFIX + 0, f);
    assertTrue(accepted);
    File f2 = copyToFile(randomStream(1, 4 * 1024), folder.newFile());
    accepted = cache.stage(ID_PREFIX + 1, f2);
    assertTrue(accepted);
    cache.invalidate(ID_PREFIX + 0);
    // start the original uploads
    taskLatch.countDown();
    taskLatch.countDown();
    callbackLatch.countDown();
    callbackLatch.countDown();
    waitFinish();
    File file = cache.getIfPresent(ID_PREFIX + 0);
    assertNull(file);
    file = cache.getIfPresent(ID_PREFIX + 1);
    assertFile(file, 1, folder);
    assertCacheStats(cache.getStagingCacheStats(), 0, 0, 2, 2);
    LOG.info("Finished invalidateStaging");
}
