@Test
public void testImportUser() throws Exception {
    String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<sv:node sv:name=\"t\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">" + "   <sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\"><sv:value>rep:SystemUser</sv:value></sv:property>" + "   <sv:property sv:name=\"jcr:uuid\" sv:type=\"String\"><sv:value>e358efa4-89f5-3062-b10d-d7316b65649e</sv:value></sv:property>" + "   <sv:property sv:name=\"rep:principalName\" sv:type=\"String\"><sv:value>t</sv:value></sv:property>" + "   <sv:property sv:name=\"rep:disabled\" sv:type=\"String\"><sv:value>disabledUser</sv:value></sv:property>" + "</sv:node>";
    Node target = getTargetNode();
    doImport(getTargetPath(), xml);
    Session s = getImportSession();
    assertTrue(target.isModified());
    assertTrue(s.hasPendingChanges());
    Authorizable newUser = getUserManager().getAuthorizable("t");
    assertNotNull(newUser);
    assertFalse(newUser.isGroup());
    assertTrue(((User) newUser).isSystemUser());
    assertEquals("t", newUser.getPrincipal().getName());
    assertEquals("t", newUser.getID());
    assertTrue(((User) newUser).isDisabled());
    assertEquals("disabledUser", ((User) newUser).getDisabledReason());
    Node n = s.getNode(newUser.getPath());
    assertTrue(n.isNew());
    assertTrue(n.getParent().isSame(target));
    assertEquals("t", n.getName());
    assertEquals("t", n.getProperty(UserConstants.REP_PRINCIPAL_NAME).getString());
    assertEquals("disabledUser", n.getProperty(UserConstants.REP_DISABLED).getString());
    assertFalse(n.hasProperty(UserConstants.REP_PASSWORD));
    // saving changes of the import -> must succeed. all mandatory props should have been created.
    s.save();
}
