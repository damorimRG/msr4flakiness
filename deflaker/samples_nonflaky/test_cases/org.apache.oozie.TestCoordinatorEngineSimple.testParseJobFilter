public void testParseJobFilter() throws CoordinatorEngineException {
    final CoordinatorEngine ce = new CoordinatorEngine();
    // valid status filter
    Map<Pair<String, FILTER_COMPARATORS>, List<Object>> map = ce.parseJobFilter("staTus=succeeded; status=waiTing");
    assertNotNull(map);
    assertEquals(1, map.size());
    Pair<String, FILTER_COMPARATORS> key = map.keySet().iterator().next();
    assertNotNull(key);
    assertEquals(OozieClient.FILTER_STATUS, key.getFirst());
    assertEquals(FILTER_COMPARATORS.EQUALS, key.getSecond());
    List<Object> list = map.get(key);
    assertNotNull(list);
    assertEquals(2, list.size());
    assertEquals(Status.SUCCEEDED.name(), (String) list.get(0));
    assertEquals(Status.WAITING.name(), (String) list.get(1));
    // valid nominal time filter
    map = ce.parseJobFilter("nominaltime>=2013-05-01T10:00Z");
    assertNotNull(map);
    assertEquals(1, map.size());
    key = map.keySet().iterator().next();
    assertNotNull(key);
    assertEquals(OozieClient.FILTER_NOMINAL_TIME, key.getFirst());
    assertEquals(FILTER_COMPARATORS.GREATER_EQUAL, key.getSecond());
    list = map.get(key);
    assertNotNull(list);
    assertEquals(1, list.size());
    assertEquals("2013-05-01T10:00Z", DateUtils.formatDateOozieTZ(new Date(((Timestamp) list.get(0)).getTime())));
    // invalid format
    try {
        ce.parseJobFilter("winniethepooh");
        fail("CoordinatorEngineException expected.");
    } catch (CoordinatorEngineException bee) {
        assertEquals(ErrorCode.E0421, bee.getErrorCode());
    }
    // invalid key
    try {
        ce.parseJobFilter("stat=some");
        fail("CoordinatorEngineException expected.");
    } catch (CoordinatorEngineException bee) {
        assertEquals(ErrorCode.E0421, bee.getErrorCode());
    }
    // invalid status value
    try {
        ce.parseJobFilter("status=some");
        fail("CoordinatorEngineException expected.");
    } catch (CoordinatorEngineException bee) {
        assertEquals(ErrorCode.E0421, bee.getErrorCode());
    }
    // invalid comparator for status
    try {
        ce.parseJobFilter("status>=some");
        fail("CoordinatorEngineException expected.");
    } catch (CoordinatorEngineException bee) {
        assertEquals(ErrorCode.E0421, bee.getErrorCode());
    }
    // invalid nominal time value
    try {
        ce.parseJobFilter("nominaltime=2013-13-01T00:00Z");
        fail("CoordinatorEngineException expected.");
    } catch (CoordinatorEngineException bee) {
        assertEquals(ErrorCode.E0421, bee.getErrorCode());
    }
    // invalid comparator
    try {
        ce.parseJobFilter("nominaltime*2013-13-01T00:00Z");
        fail("CoordinatorEngineException expected.");
    } catch (CoordinatorEngineException bee) {
        assertEquals(ErrorCode.E0421, bee.getErrorCode());
    }
}
