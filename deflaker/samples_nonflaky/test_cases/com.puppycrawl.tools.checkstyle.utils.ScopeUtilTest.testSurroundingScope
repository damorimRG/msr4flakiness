@Test
public void testSurroundingScope() {
    final Scope publicScope = ScopeUtil.getSurroundingScope(getNodeWithParentScope(TokenTypes.LITERAL_PUBLIC, "public", TokenTypes.ANNOTATION_DEF));
    assertEquals(Scope.PUBLIC, publicScope, "Invalid surrounding scope");
    final Scope protectedScope = ScopeUtil.getSurroundingScope(getNodeWithParentScope(TokenTypes.LITERAL_PROTECTED, "protected", TokenTypes.INTERFACE_DEF));
    assertEquals(Scope.PROTECTED, protectedScope, "Invalid surrounding scope");
    final Scope privateScope = ScopeUtil.getSurroundingScope(getNodeWithParentScope(TokenTypes.LITERAL_PRIVATE, "private", TokenTypes.ENUM_DEF));
    assertEquals(Scope.PRIVATE, privateScope, "Invalid surrounding scope");
    final Scope staticScope = ScopeUtil.getSurroundingScope(getNodeWithParentScope(TokenTypes.LITERAL_STATIC, "static", TokenTypes.CLASS_DEF));
    assertEquals(Scope.PACKAGE, staticScope, "Invalid surrounding scope");
}
