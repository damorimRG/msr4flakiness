@Test
public void gcIndexDirs() throws Exception {
    // Create an old format directory
    File fa0 = dir.getIndexDir(getDefn(), "/a", "default");
    configureUniqueId();
    File fa1 = dir.getIndexDir(getDefn(), "/a", "default");
    configureUniqueId();
    File fa2 = dir.getIndexDir(getDefn(), "/a", "default");
    List<LocalIndexDir> dirs = dir.getLocalIndexes("/a");
    assertEquals(2, dirs.size());
    dir.gcEmptyDirs(fa2);
    // No index dir should be removed. Even empty ones
    assertEquals(2, dirs.size());
    configureUniqueId();
    File fa3 = dir.getIndexDir(getDefn(), "/a", "default");
    assertEquals(3, dir.getLocalIndexes("/a").size());
    // Dir size should still be 3 as non empty dir cannot be be collected
    dir.gcEmptyDirs(fa3);
    assertEquals(3, dir.getLocalIndexes("/a").size());
    // Now get rid of 'default' for the first localDir dir i.e. fa1
    FileUtils.deleteQuietly(fa1);
    dir.gcEmptyDirs(fa1);
    assertEquals(2, dir.getLocalIndexes("/a").size());
    assertFalse(fa0.exists());
    FileUtils.deleteDirectory(fa2);
    FileUtils.deleteDirectory(fa3);
    // Note that we deleted both fa2 and fa3 but GC was done based on fa2 (fa2 < fa3)
    // So only dirs which are of same time or older than fa2 would be removed. So in this
    // case fa3 would be left
    dir.gcEmptyDirs(fa2);
    assertEquals(1, dir.getLocalIndexes("/a").size());
}
