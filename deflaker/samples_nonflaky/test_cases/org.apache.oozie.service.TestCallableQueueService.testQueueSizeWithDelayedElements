public void testQueueSizeWithDelayedElements() throws InterruptedException {
    final int taskCount = 10_000;
    List<DummyCallable> callables = new ArrayList<>(taskCount);
    for (int i = 0; i < taskCount; i++) {
        String keyAndType = String.valueOf(i);
        DummyCallable dc = new DummyCallable(taskCount, keyAndType, keyAndType, 0, 0);
        callables.add(dc);
    }
    CallableQueueService queueservice = Services.get().get(CallableQueueService.class);
    for (int i = 0; i < taskCount; i++) {
        queueservice.queue(callables.get(i), 2000);
    }
    int queueSizeAfterSubmission = queueservice.queueSize();
    try {
        finished.await(10, TimeUnit.SECONDS);
    } catch (Exception e) {
        log.error("Error", e);
        fail("Exception during test: " + e.getMessage());
    }
    assertEquals("Queue size after submission", taskCount, queueSizeAfterSubmission);
    assertEquals("Queue size after execution", 0, queueservice.queueSize());
}
