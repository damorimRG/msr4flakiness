// OAK-4805
@Test
public void badIndexDefinitionShouldLetQEWork() throws Exception {
    Tree idx = createFulltextIndex(root.getTree("/"), "badIndex");
    TestUtil.useV2(idx);
    // This would allow index def to get committed. Else bad index def can't be created.
    idx.setProperty(ASYNC_PROPERTY_NAME, "async");
    Tree anl = idx.addChild(LuceneIndexConstants.ANALYZERS).addChild(LuceneIndexConstants.ANL_DEFAULT);
    anl.addChild(LuceneIndexConstants.ANL_TOKENIZER).setProperty(LuceneIndexConstants.ANL_NAME, "Standard");
    Tree synFilter = anl.addChild(LuceneIndexConstants.ANL_FILTERS).addChild("Synonym");
    synFilter.setProperty("synonyms", "syn.txt");
    // Don't add syn.txt to make analyzer (and hence index def) invalid
    // synFilter.addChild("syn.txt").addChild(JCR_CONTENT).setProperty(JCR_DATA, "blah, foo, bar");
    root.commit();
    // Using this version of executeQuery as we don't want a result row quoting the exception
    executeQuery("SELECT * FROM [nt:base] where a='b'", SQL2, NO_BINDINGS);
}
