@Test
public void unregister() {
    Registration r1 = whiteboard.register(Service1.class, new Service1("s1"), ImmutableMap.of());
    Registration r2 = whiteboard.register(Service2.class, new Service2("s2"), ImmutableMap.of("role", "myrole"));
    Registration r3_1 = whiteboard.register(Service3.class, new Service3("s3_1"), ImmutableMap.of());
    Registration r3_2 = whiteboard.register(Service3.class, new Service3("s3_2"), ImmutableMap.of("role", "myrole"));
    Registration r3_3 = whiteboard.register(Service3.class, new Service3("s3_3"), ImmutableMap.of("role", "myotherrole", "id", 1024));
    assertEquals(of("s1"), track(Service1.class));
    r1.unregister();
    assertEquals(of(), track(Service1.class));
    assertEquals(of("s2"), track(Service2.class));
    r2.unregister();
    assertEquals(of(), track(Service2.class));
    assertEquals(of("s3_1", "s3_2", "s3_3"), track(Service3.class));
    r3_1.unregister();
    assertEquals(of("s3_2", "s3_3"), track(Service3.class));
    r3_2.unregister();
    assertEquals(of("s3_3"), track(Service3.class));
    r3_3.unregister();
    assertEquals(of(), track(Service3.class));
}
