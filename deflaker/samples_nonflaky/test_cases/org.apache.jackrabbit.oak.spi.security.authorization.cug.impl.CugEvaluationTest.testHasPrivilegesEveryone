@Test
public void testHasPrivilegesEveryone() {
    // everyone
    PermissionProvider pp = createPermissionProvider(EveryonePrincipal.getInstance());
    assertFalse(pp.hasPrivileges(content, PrivilegeConstants.JCR_READ));
    assertFalse(pp.hasPrivileges(content2, PrivilegeConstants.JCR_READ));
    assertFalse(pp.hasPrivileges(a, PrivilegeConstants.JCR_READ));
    assertFalse(pp.hasPrivileges(c, PrivilegeConstants.JCR_READ));
    assertFalse(pp.hasPrivileges(content, PrivilegeConstants.REP_WRITE, PrivilegeConstants.JCR_READ_ACCESS_CONTROL));
    assertFalse(pp.hasPrivileges(content2, PrivilegeConstants.REP_WRITE, PrivilegeConstants.JCR_READ_ACCESS_CONTROL));
    assertFalse(pp.hasPrivileges(a, PrivilegeConstants.REP_WRITE, PrivilegeConstants.JCR_READ_ACCESS_CONTROL));
    assertFalse(pp.hasPrivileges(c, PrivilegeConstants.REP_WRITE, PrivilegeConstants.JCR_READ_ACCESS_CONTROL));
}
