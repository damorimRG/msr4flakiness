/**
 * Stage request same file concurrently.
 * @throws Exception
 */
@Test
public void testConcurrentSameAddRequest() throws Exception {
    LOG.info("Starting testConcurrentSameAddRequest");
    closer.close();
    ListeningExecutorService executorService = MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(2));
    List<ListenableFuture<Integer>> futures = Lists.newArrayList();
    CountDownLatch moveLatch = new CountDownLatch(1);
    init(1, new TestStagingUploader(folder.newFolder(), moveLatch), null);
    // 1st request
    ListenableFuture<Boolean> resultReq1 = putThread(folder, executorService, futures);
    Thread.sleep(100);
    // 2nd Request
    ListenableFuture<Boolean> resultReq2 = putThread(folder, executorService, futures);
    Thread.sleep(200);
    // Allow any thread to start moving
    moveLatch.countDown();
    assertTrue(resultReq1.get());
    assertTrue(resultReq2.get());
    taskLatch.countDown();
    callbackLatch.countDown();
    assertFuture(futures, 0);
    assertCacheStats(stagingCache, 0, 0, 1, 2);
    LOG.info("Finished testConcurrentSameAddRequest");
}
