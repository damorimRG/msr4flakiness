@Test
public void testInEnumBlock() {
    assertFalse(ScopeUtil.isInEnumBlock(new DetailAstImpl()), "Should return false when passed is not enum");
    assertFalse(ScopeUtil.isInEnumBlock(getNode(TokenTypes.LITERAL_NEW, TokenTypes.MODIFIERS)), "Should return false when passed is not enum");
    assertTrue(ScopeUtil.isInEnumBlock(getNode(TokenTypes.OBJBLOCK, TokenTypes.ENUM_DEF, TokenTypes.MODIFIERS)), "Should return true when passed is enum");
    assertFalse(ScopeUtil.isInEnumBlock(getNode(TokenTypes.ENUM_DEF, TokenTypes.INTERFACE_DEF, TokenTypes.MODIFIERS)), "Should return false when passed is not enum");
    assertFalse(ScopeUtil.isInEnumBlock(getNode(TokenTypes.ENUM_DEF, TokenTypes.ANNOTATION_DEF, TokenTypes.MODIFIERS)), "Should return false when passed is not enum");
    assertFalse(ScopeUtil.isInEnumBlock(getNode(TokenTypes.ENUM_DEF, TokenTypes.CLASS_DEF, TokenTypes.MODIFIERS)), "Should return false when passed is not enum");
    assertFalse(ScopeUtil.isInEnumBlock(getNode(TokenTypes.ENUM_DEF, TokenTypes.LITERAL_NEW, TokenTypes.IDENT)), "Should return false when passed is not enum");
    assertFalse(ScopeUtil.isInEnumBlock(getNode(TokenTypes.PACKAGE_DEF, TokenTypes.DOT)), "Should return false when passed is not expected");
}
