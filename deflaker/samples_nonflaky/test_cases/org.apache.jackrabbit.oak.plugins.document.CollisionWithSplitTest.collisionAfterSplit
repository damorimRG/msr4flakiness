@Test
public void collisionAfterSplit() throws Exception {
    final int NUM_NODES = 10;
    NodeBuilder b1 = ns1.getRoot().builder();
    for (int i = 0; i < NUM_NODES; i++) {
        b1.child("node-" + i);
    }
    merge(ns1, b1);
    ns1.runBackgroundOperations();
    ns2.runBackgroundOperations();
    Revision conflictRev = null;
    for (int i = 0; i < NUM_NODES; i++) {
        b1 = ns1.getRoot().builder();
        b1.setProperty("p", i);
        b1.child("node-" + i).remove();
        merge(ns1, b1);
        if (i == 0) {
            // assume a conflict is detected while writing on ns2
            // -> remember this revision
            conflictRev = ns1.getHeadRevision().getRevision(ns1.getClusterId());
        }
    }
    assertNotNull(conflictRev);
    // run document split on ns1
    DocumentStore store = ns1.getDocumentStore();
    NodeDocument doc = Utils.getRootDocument(store);
    List<UpdateOp> ops = SplitOperations.forDocument(doc, ns1, ns1.getHeadRevision(), NO_BINARY, NUM_NODES);
    assertFalse(ops.isEmpty());
    for (UpdateOp op : ops) {
        if (!op.isNew() || !store.create(NODES, Collections.singletonList(op))) {
            store.createOrUpdate(NODES, op);
        }
    }
    // attempt to set a property on a removed node
    String id = Utils.getIdFromPath("/node-0");
    UpdateOp op = new UpdateOp(id, false);
    Revision ourRev = ns2.newRevision();
    op.setMapEntry("p", ourRev, "v");
    NodeDocument.setModified(op, ourRev);
    NodeDocument.setCommitRoot(op, ourRev, 0);
    ns2.getDocumentStore().findAndUpdate(NODES, op);
    // now try to set a collision marker for the
    // committed revision on ns2
    doc = ns2.getDocumentStore().find(NODES, id);
    assertTrue(doc.getLocalCommitRoot().containsKey(conflictRev));
    Collision c = new Collision(doc, conflictRev, op, ourRev, ns2, RevisionVector.fromString(""));
    assertEquals("Collision must match our revision (" + ourRev + "). " + "The conflict revision " + conflictRev + " is already committed.", ourRev, c.mark(ns2.getDocumentStore()));
}
