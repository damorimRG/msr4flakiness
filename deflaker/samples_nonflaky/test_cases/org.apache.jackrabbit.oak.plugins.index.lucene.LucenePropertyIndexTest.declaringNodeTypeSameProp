@Test
public void declaringNodeTypeSameProp() throws Exception {
    createIndex("test1", of("propa"));
    Tree indexWithType = createIndex("test2", of("propa"));
    indexWithType.setProperty(PropertyStates.createProperty(DECLARING_NODE_TYPES, of("nt:unstructured"), Type.STRINGS));
    Tree test = root.getTree("/").addChild("test");
    test.setProperty("jcr:primaryType", "nt:unstructured", Type.NAME);
    root.commit();
    Tree a = test.addChild("a");
    a.setProperty("jcr:primaryType", "nt:unstructured", Type.NAME);
    a.setProperty("propa", "foo");
    Tree b = test.addChild("b");
    b.setProperty("jcr:primaryType", "nt:unstructured", Type.NAME);
    b.setProperty("propa", "foo");
    test.addChild("c").setProperty("propa", "foo");
    test.addChild("d").setProperty("propa", "foo");
    root.commit();
    String propabQuery = "select [jcr:path] from [nt:unstructured] where [propa] = 'foo'";
    assertThat(explain(propabQuery), containsString("lucene:test2"));
    assertQuery(propabQuery, asList("/test/a", "/test/b"));
    String propcdQuery = "select [jcr:path] from [nt:base] where [propa] = 'foo'";
    assertThat(explain(propcdQuery), containsString("lucene:test1"));
    assertQuery(propcdQuery, asList("/test/a", "/test/b", "/test/c", "/test/d"));
}
