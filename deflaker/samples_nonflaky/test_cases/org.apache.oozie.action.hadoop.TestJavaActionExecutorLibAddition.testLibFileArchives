public void testLibFileArchives() throws Exception {
    Map<String, Path> libs = createAndGetSharelibTestFiles();
    final String actionXml = "<java>" + "      <job-tracker>" + getJobTrackerUri() + "</job-tracker>" + "      <name-node>" + getNameNodeUri() + "</name-node>" + "      <main-class>CLASS</main-class>" + "      <file>" + libs.get(TEST_SHARELIB_FILES[0]).toString() + "</file>\n" + "      <file>" + libs.get(TEST_SHARELIB_FILES[1]).toString() + "</file>\n" + "      <file>" + libs.get(TEST_SHARELIB_FILES[2]).toString() + "</file>\n" + "      <file>" + libs.get(TEST_SHARELIB_FILES[3]).toString() + "</file>\n" + "      <file>" + libs.get(TEST_SHARELIB_ROOT_FILES[0]).toString() + "</file>\n" + "      <file>" + libs.get(TEST_SHARELIB_ROOT_FILES[1]).toString() + "</file>\n" + "      <file>" + libs.get(TEST_SHARELIB_ROOT_FILES[2]).toString() + "</file>\n" + "      <file>" + libs.get(TEST_SHARELIB_ROOT_FILES[3]).toString() + "</file>\n" + "      <archive>" + libs.get(TEST_SHARELIB_ARCHIVES[0]).toString() + "</archive>\n" + "      <archive>" + libs.get(TEST_SHARELIB_ARCHIVES[1]).toString() + "</archive>\n" + "</java>";
    final Configuration jobConf = createActionExecutorAndSetLibFilesArchives(createContext(actionXml, null));
    verifyFilesInDistributedCache(libs, jobConf);
}
