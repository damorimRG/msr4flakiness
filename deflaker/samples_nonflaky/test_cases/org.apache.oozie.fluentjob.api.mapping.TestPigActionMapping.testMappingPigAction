@Test
public void testMappingPigAction() {
    final String resourceManager = "${resourceManager}";
    final String nameNode = "${nameNode}";
    final List<String> args = Arrays.asList("arg1", "arg2");
    final PigActionBuilder builder = PigActionBuilder.create();
    builder.withResourceManager(resourceManager).withNameNode(nameNode).withPrepare(new PrepareBuilder().withDelete("/path/to/delete").withMkdir("/path/to/mkdir").build()).withLauncher(new LauncherBuilder().withMemoryMb(1024).withVCores(2).withQueue("default").withSharelib("default").withViewAcl("default").withModifyAcl("default").build());
    for (final String arg : args) {
        builder.withArg(arg);
    }
    builder.withConfigProperty("propertyName1", "propertyValue1").withConfigProperty("propertyName2", "propertyValue2");
    final PigAction action = builder.build();
    final PIG pig = DozerBeanMapperSingleton.instance().map(action, PIG.class);
    assertEquals(resourceManager, pig.getResourceManager());
    assertEquals(nameNode, pig.getNameNode());
    assertNotNull(pig.getPrepare());
    assertEquals("/path/to/delete", pig.getPrepare().getDelete().get(0).getPath());
    assertEquals("/path/to/mkdir", pig.getPrepare().getMkdir().get(0).getPath());
    assertNotNull(pig.getConfiguration());
    assertEquals(args, pig.getArgument());
    assertEquals(1024L, pig.getLauncher().getMemoryMbOrVcoresOrJavaOpts().get(0).getValue());
    assertEquals(2L, pig.getLauncher().getMemoryMbOrVcoresOrJavaOpts().get(1).getValue());
    assertEquals("default", pig.getLauncher().getMemoryMbOrVcoresOrJavaOpts().get(2).getValue());
    assertEquals("default", pig.getLauncher().getMemoryMbOrVcoresOrJavaOpts().get(3).getValue());
    assertEquals("default", pig.getLauncher().getMemoryMbOrVcoresOrJavaOpts().get(4).getValue());
    assertEquals("default", pig.getLauncher().getMemoryMbOrVcoresOrJavaOpts().get(5).getValue());
}
