@Test
public void testHeartbeatFailure() throws InterruptedException {
    HLockManagerImpl failedLockManager = new HLockManagerImpl(cluster, hlc);
    failedLockManager.init();
    HLock lock = failedLockManager.createLock("/testHeartbeatFailure");
    failedLockManager.acquire(lock);
    assertTrue(lock.isAcquired());
    failedLockManager.shutdownScheduler();
    // Force timeout since heartbeat isn't working
    Thread.sleep(hlc.getLocksTTLInMillis() + 2000);
    // use a different lock manager to try and get the lock, should succeed
    HLock newLock = lm.createLock("/testHeartbeatFailure");
    boolean lockTimedOut = false;
    try {
        lm.acquire(newLock, 0);
    } catch (HLockTimeoutException te) {
        lockTimedOut = true;
    }
    assertFalse(lockTimedOut);
    assertTrue(newLock.isAcquired());
    lm.release(newLock);
}
