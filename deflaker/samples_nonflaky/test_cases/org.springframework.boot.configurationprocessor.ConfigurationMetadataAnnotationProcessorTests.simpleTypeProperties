@Test
void simpleTypeProperties() {
    ConfigurationMetadata metadata = compile(SimpleTypeProperties.class);
    assertThat(metadata).has(Metadata.withGroup("simple.type").fromSource(SimpleTypeProperties.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-string", String.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-byte", Byte.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-primitive-byte", Byte.class).withDefaultValue(0));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-char", Character.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-primitive-char", Character.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-boolean", Boolean.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-primitive-boolean", Boolean.class).withDefaultValue(false));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-short", Short.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-primitive-short", Short.class).withDefaultValue(0));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-integer", Integer.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-primitive-integer", Integer.class).withDefaultValue(0));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-long", Long.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-primitive-long", Long.class).withDefaultValue(0));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-double", Double.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-primitive-double", Double.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-float", Float.class));
    assertThat(metadata).has(Metadata.withProperty("simple.type.my-primitive-float", Float.class));
    assertThat(metadata.getItems().size()).isEqualTo(18);
}
