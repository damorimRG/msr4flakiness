@Test
public void testIgnoreNegativeOctalHex() throws Exception {
    final DefaultConfiguration checkConfig = createModuleConfig(MagicNumberCheck.class);
    checkConfig.addAttribute("ignoreNumbers", "-9223372036854775808, -2147483648, -1, 0, 1, 2, -2");
    checkConfig.addAttribute("tokens", "NUM_INT, NUM_LONG");
    checkConfig.addAttribute("ignoreAnnotation", "true");
    final String[] expected = { "41:26: " + getCheckMessage(MSG_KEY, "3_000"), "43:27: " + getCheckMessage(MSG_KEY, "3"), "43:31: " + getCheckMessage(MSG_KEY, "4"), "45:29: " + getCheckMessage(MSG_KEY, "3"), "47:23: " + getCheckMessage(MSG_KEY, "3"), "50:22: " + getCheckMessage(MSG_KEY, "3"), "50:29: " + getCheckMessage(MSG_KEY, "5"), "50:37: " + getCheckMessage(MSG_KEY, "3"), "54:26: " + getCheckMessage(MSG_KEY, "3"), "55:39: " + getCheckMessage(MSG_KEY, "3"), "60:25: " + getCheckMessage(MSG_KEY, "010"), "61:25: " + getCheckMessage(MSG_KEY, "011"), "63:30: " + getCheckMessage(MSG_KEY, "0_10L"), "64:30: " + getCheckMessage(MSG_KEY, "011l"), "68:24: " + getCheckMessage(MSG_KEY, "0x10"), "69:24: " + getCheckMessage(MSG_KEY, "0X011"), "71:29: " + getCheckMessage(MSG_KEY, "0x10L"), "72:29: " + getCheckMessage(MSG_KEY, "0X11l"), "85:28: " + getCheckMessage(MSG_KEY, "3"), "92:14: " + getCheckMessage(MSG_KEY, "0xffffffffL"), "100:30: " + getCheckMessage(MSG_KEY, "+3"), "131:20: " + getCheckMessage(MSG_KEY, "378"), "160:16: " + getCheckMessage(MSG_KEY, "31"), "165:16: " + getCheckMessage(MSG_KEY, "42"), "170:16: " + getCheckMessage(MSG_KEY, "13"), "174:15: " + getCheckMessage(MSG_KEY, "21"), "178:15: " + getCheckMessage(MSG_KEY, "37"), "182:15: " + getCheckMessage(MSG_KEY, "101"), "214:20: " + getCheckMessage(MSG_KEY, "0b101"), "215:22: " + getCheckMessage(MSG_KEY, "0b1010000101000101101000010100010110100001010001011010000101000101L"), "225:21: " + getCheckMessage(MSG_KEY, "122") };
    verify(checkConfig, getPath("InputMagicNumber.java"), expected);
}
