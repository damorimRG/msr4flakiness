/*
    <OAK-8166>
    Given an index def with 2 orderable property definitions(Relative) for same property - one with function and one without
    Indexer should not fail to index the nodes covered by this index
     */
@Test
public void sameOrderableRelativePropertyWithAndWithoutFunction() throws Exception {
    LogCustomizer customLogs = LogCustomizer.forLogger(LuceneIndexEditor.class.getName()).enable(Level.WARN).create();
    // Create nodes that will be served by the index definition that follows
    Tree test = root.getTree("/").addChild("test");
    test.setProperty("jcr:primaryType", "nt:unstructured", Type.NAME);
    Tree a = test.addChild("jcr:content");
    a.setProperty("jcr:primaryType", "nt:unstructured", Type.NAME);
    Tree b = a.addChild("n");
    b.setProperty("jcr:primaryType", "nt:unstructured", Type.NAME);
    b.setProperty("foo", "bar");
    root.commit();
    // Index def with same property - ordered - one with function and one without
    Tree luceneIndex = createIndex("upper", Collections.<String>emptySet());
    Tree nonFunc = luceneIndex.addChild(FulltextIndexConstants.INDEX_RULES).addChild("nt:unstructured").addChild(FulltextIndexConstants.PROP_NODE).addChild("foo");
    nonFunc.setProperty(FulltextIndexConstants.PROP_ORDERED, true);
    nonFunc.setProperty("name", "jcr:content/n/foo");
    Tree func = luceneIndex.getChild(FulltextIndexConstants.INDEX_RULES).getChild("nt:unstructured").getChild(FulltextIndexConstants.PROP_NODE).addChild("testOak");
    func.setProperty(FulltextIndexConstants.PROP_ORDERED, true);
    func.setProperty(FulltextIndexConstants.PROP_FUNCTION, "fn:upper-case(jcr:content/n/@foo)");
    // Now do some change in the node that are covered by above index definition
    try {
        customLogs.starting();
        root.getTree("/").getChild("test").getChild("jcr:content").getChild("n").setProperty("foo", "bar2");
        root.commit();
        Assert.assertFalse(customLogs.getLogs().contains("Failed to index the node [/test]"));
        Assert.assertTrue(customLogs.getLogs().size() == 0);
    } finally {
        customLogs.finished();
    }
}
