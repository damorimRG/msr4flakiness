public void testOnDurationMiss() throws Exception {
    String id = "0000000-000000000000001-oozie-wrkf-C@1";
    SLACalcStatus event = _createSLACalcStatus(id);
    SLARegistrationBean eventBean = event.getSLARegistrationBean();
    Date expectedStartDate = DateUtils.parseDateUTC("2013-01-01T00:00Z");
    Date actualStartDate = DateUtils.parseDateUTC("2013-01-01T00:10Z");
    Date expectedEndDate = DateUtils.parseDateUTC("2013-01-01T00:20Z");
    Date actualEndDate = DateUtils.parseDateUTC("2013-01-01T00:40Z");
    long expectedDuration = expectedEndDate.getTime() - expectedStartDate.getTime();
    long actualDuration = actualEndDate.getTime() - actualStartDate.getTime();
    long expectedDurationInMins = expectedDuration / 60000;
    long actualDurationInMins = actualDuration / 60000;
    event.setId(id);
    eventBean.setParentId("0000000-000000000000001-oozie-wrkf-C");
    event.setEventStatus(EventStatus.DURATION_MISS);
    event.setJobStatus(JobEvent.EventStatus.SUCCESS.toString());
    eventBean.setAppName("Test-SLA-Duration-Miss");
    eventBean.setUser("dummyuser");
    eventBean.setNominalTime(expectedStartDate);
    eventBean.setExpectedStart(expectedStartDate);
    eventBean.setExpectedEnd(expectedEndDate);
    eventBean.setNotificationMsg("notification of duration miss");
    eventBean.setAlertContact("alert-receiver-durationmiss@oozie.com");
    eventBean.setAppType(AppType.COORDINATOR_ACTION);
    eventBean.setExpectedStart(expectedStartDate);
    eventBean.setExpectedEnd(expectedEndDate);
    event.setActualStart(actualStartDate);
    event.setActualEnd(actualEndDate);
    eventBean.setExpectedDuration(expectedDuration);
    event.setActualDuration(actualDuration);
    slaEmailListener.onEndMiss(event);
    MimeMessage[] msgs = greenMail.getReceivedMessages();
    MimeMessage msg = msgs[0];
    // check message header
    assertEquals(msg.getFrom()[0].toString(), "oozie@localhost");
    assertEquals(msg.getRecipients(RecipientType.TO)[0].toString(), "alert-receiver-durationmiss@oozie.com");
    assertEquals(msg.getSubject(), "OOZIE - SLA " + EventStatus.DURATION_MISS + " (AppName=Test-SLA-Duration-Miss, JobID=0000000-000000000000001-oozie-wrkf-C@1)");
    // check message body
    String msgBody = msg.getContent().toString();
    String headerSep = SLAEmailEventListener.EMAIL_BODY_HEADER_SEPARATER;
    String sep = SLAEmailEventListener.EMAIL_BODY_FIELD_SEPARATER;
    String indent = SLAEmailEventListener.EMAIL_BODY_FIELD_INDENT;
    assertTrue(msgBody.indexOf("Status" + headerSep) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.EVENT_STATUS.toString() + sep + EventStatus.DURATION_MISS.toString()) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.JOB_STATUS.toString() + sep + JobEvent.EventStatus.SUCCESS.toString()) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.NOTIFICATION_MESSAGE.toString() + sep + "notification of duration miss") > -1);
    assertTrue(msgBody.indexOf("Job Details" + headerSep) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.APP_TYPE.toString() + sep + AppType.COORDINATOR_ACTION) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.APP_NAME.toString() + sep + "Test-SLA-Duration-Miss") > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.USER.toString() + sep + "dummyuser") > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.JOBID.toString() + sep + "0000000-000000000000001-oozie-wrkf-C@1") > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.PARENT_JOBID.toString() + sep + "0000000-000000000000001-oozie-wrkf-C") > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.JOB_URL.toString() + sep + conf.get(SLAEmailEventListener.OOZIE_BASE_URL) + "/?job=" + "0000000-000000000000001-oozie-wrkf-C@1") > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.PARENT_JOB_URL.toString() + sep + conf.get(SLAEmailEventListener.OOZIE_BASE_URL) + "/?job=" + "0000000-000000000000001-oozie-wrkf-C") > -1);
    assertTrue(msgBody.indexOf("SLA Details" + headerSep) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.NOMINAL_TIME.toString() + sep + expectedStartDate) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.EXPECTED_START_TIME.toString() + sep + expectedStartDate) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.ACTUAL_START_TIME.toString() + sep + actualStartDate) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.EXPECTED_END_TIME.toString() + sep + expectedEndDate) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.ACTUAL_END_TIME.toString() + sep + actualEndDate) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.EXPECTED_DURATION.toString() + sep + expectedDurationInMins) > -1);
    assertTrue(msgBody.indexOf(indent + EmailField.ACTUAL_DURATION.toString() + sep + actualDurationInMins) > -1);
}
