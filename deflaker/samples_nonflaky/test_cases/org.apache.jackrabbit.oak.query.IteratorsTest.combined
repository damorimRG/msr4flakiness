@Test
public void combined() {
    // no filtering
    assertEquals("3, 3, 2, 1", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), false, Long.MAX_VALUE, 0, null, settings)));
    // distinct
    assertEquals("3, 2, 1", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), true, Long.MAX_VALUE, 0, null, settings)));
    // order by
    assertEquals("1, 2, 3, 3", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), false, Long.MAX_VALUE, 0, INT_COMP, settings)));
    // distinct & order by
    assertEquals("1, 2, 3", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), true, Long.MAX_VALUE, 0, INT_COMP, settings)));
    // limit
    assertEquals("3, 3", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), false, 2, 0, null, settings)));
    // offset
    assertEquals("3, 2, 1", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), false, Long.MAX_VALUE, 1, null, settings)));
    // limit & offset
    assertEquals("3, 2", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), false, 2, 1, null, settings)));
    // distinct & limit & offset
    assertEquals("2, 1", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), true, 2, 1, null, settings)));
    // distinct & limit & offset & order by
    assertEquals("2, 3", toString(FilterIterators.newCombinedFilter(it(3, 3, 2, 1), true, 2, 1, INT_COMP, settings)));
}
