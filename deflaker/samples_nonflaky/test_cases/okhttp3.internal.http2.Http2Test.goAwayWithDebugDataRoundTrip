@Test
public void goAwayWithDebugDataRoundTrip() throws IOException {
    final ErrorCode expectedError = ErrorCode.PROTOCOL_ERROR;
    final ByteString expectedData = ByteString.encodeUtf8("abcdefgh");
    // Compose the expected GOAWAY frame without debug data.
    writeMedium(frame, 8 + expectedData.size());
    frame.writeByte(Http2.TYPE_GOAWAY);
    frame.writeByte(Http2.FLAG_NONE);
    // connection-scope
    frame.writeInt(0);
    // never read any stream!
    frame.writeInt(0);
    frame.writeInt(expectedError.getHttpCode());
    frame.write(expectedData.toByteArray());
    // Check writer sends the same bytes.
    assertThat(sendGoAway(0, expectedError, expectedData.toByteArray())).isEqualTo(frame);
    reader.nextFrame(false, new BaseTestHandler() {

        @Override
        public void goAway(int lastGoodStreamId, ErrorCode errorCode, ByteString debugData) {
            assertThat(lastGoodStreamId).isEqualTo(0);
            assertThat(errorCode).isEqualTo(expectedError);
            assertThat(debugData).isEqualTo(expectedData);
        }
    });
}
