public void testMultipleFiles() throws Exception {
    File dir = new File(getTestCaseDir());
    File f1 = new File(dir, "file1.txt");
    Writer fw = new OutputStreamWriter(new FileOutputStream(f1), StandardCharsets.UTF_8);
    String str1 = "This is the first line of the first file\nThis is the second line\n";
    fw.write(str1);
    fw.close();
    File f2 = new File(dir, "file2.gz");
    String str2 = "This is a gz file with just one line\n";
    TestLogStreamer.writeToGZFile(f2, new StringBuilder(str2));
    File f3 = new File(dir, "file3.txt");
    fw = new OutputStreamWriter(new FileOutputStream(f3), StandardCharsets.UTF_8);
    String str3 = "And this is the last file\nwith\n3 lines\n";
    fw.write(str3);
    fw.close();
    ArrayList<File> files = new ArrayList<File>();
    files.add(f1);
    files.add(f2);
    files.add(f3);
    MultiFileReader reader = new MultiFileReader(files);
    char[] buf = new char[str1.length() + str2.length() + str3.length()];
    Arrays.fill(buf, '+');
    // Try reading longer than the first file; MultiFileReader doesn't read past it and will simply return less chars
    // Reading again should get the next chars from the second file
    int numRead = reader.read(buf, 0, str1.length() + 10);
    assertEquals(str1.length(), numRead);
    assertEquals(str1, new String(buf, 0, str1.length()));
    for (int i = str1.length(); i < buf.length; i++) {
        assertEquals('+', buf[i]);
    }
    numRead = reader.read(buf, str1.length(), str2.length());
    assertEquals(str2.length(), numRead);
    assertEquals(str1 + str2, new String(buf, 0, str1.length() + str2.length()));
    for (int i = str1.length() + str2.length(); i < buf.length; i++) {
        assertEquals('+', buf[i]);
    }
    numRead = reader.read(buf, str1.length() + str2.length(), str3.length());
    assertEquals(str3.length(), numRead);
    assertEquals(str1 + str2 + str3, new String(buf));
    numRead = reader.read();
    assertEquals(-1, numRead);
}
