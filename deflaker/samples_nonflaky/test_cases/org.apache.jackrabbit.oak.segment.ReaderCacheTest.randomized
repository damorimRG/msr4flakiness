@Test
public void randomized() {
    ArrayList<Function<Integer, String>> loaderList = new ArrayList<Function<Integer, String>>();
    int segmentCount = 10;
    for (int i = 0; i < segmentCount; i++) {
        final int x = i;
        Function<Integer, String> loader = new Function<Integer, String>() {

            @Override
            @Nullable
            public String apply(@Nullable Integer input) {
                return "loader #" + x + " offset " + input;
            }
        };
        loaderList.add(loader);
    }
    StringCache c = new StringCache(10);
    Random r = new Random(1);
    for (int i = 0; i < 1000; i++) {
        int segment = r.nextInt(segmentCount);
        int offset = r.nextInt(10);
        Function<Integer, String> loader = loaderList.get(segment);
        String x = c.get(segment, segment, offset, loader);
        assertEquals(loader.apply(offset), x);
    }
}
