@Test(expected = LoginException.class)
public void testSyncUserFailsCommit() throws Exception {
    when(extIPMgr.getProvider(DEFAULT_IDP_NAME)).thenReturn(new TestIdentityProvider());
    when(syncManager.getSyncHandler("syncHandler")).thenReturn(new DefaultSyncHandler(new DefaultSyncConfigImpl().setName("syncHandler")));
    wb.register(ExternalIdentityProviderManager.class, extIPMgr, Collections.emptyMap());
    wb.register(SyncManager.class, syncManager, Collections.emptyMap());
    ContentRepository repository = spy(getContentRepository());
    ContentSession s = spy(adminSession);
    Root r = spy(root);
    doThrow(new CommitFailedException(OAK, -1, "error")).when(r).commit();
    when(r.hasPendingChanges()).thenReturn(true);
    doReturn(s).when(repository).login(null, null);
    when(s.getLatestRoot()).thenReturn(r);
    CallbackHandler cbh = createCallbackHandler(wb, repository, getSecurityProvider(), null);
    Map<String, Object> sharedState = Maps.newHashMap();
    sharedState.put(SHARED_KEY_PRE_AUTH_LOGIN, new PreAuthenticatedLogin(ID_TEST_USER));
    loginModule.initialize(new Subject(), cbh, sharedState, ImmutableMap.of(PARAM_IDP_NAME, DEFAULT_IDP_NAME, PARAM_SYNC_HANDLER_NAME, "syncHandler"));
    try {
        loginModule.login();
    } catch (LoginException e) {
        assertTrue(e.getCause() instanceof SyncException);
        throw e;
    }
}
