// OAK-7401
@Test
public void commitHookTriggersBranchWithConflict() throws Exception {
    DocumentNodeStore ns = builderProvider.newBuilder().setAsyncDelay(0).setUpdateLimit(10).build();
    // get initial branch commits
    NodeDocument root = Utils.getRootDocument(ns.getDocumentStore());
    int initialNumBranchCommits = numBranchCommits(root);
    NodeBuilder builder = ns.getRoot().builder();
    builder.child("test");
    TestHook hook = new TestHook(41);
    ns.merge(builder, new CompositeHook(hook, // fail once
    new FailingHook(1)), CommitInfo.EMPTY);
    // must have created branch commits
    root = Utils.getRootDocument(ns.getDocumentStore());
    assertTrue(numBranchCommits(root) > initialNumBranchCommits);
    hook.assertChanges(ns.getRoot());
    // must not leave behind unmerged branch commits (OAK-8106)
    root = Utils.getRootDocument(ns.getDocumentStore());
    for (String value : root.getLocalRevisions().values()) {
        if (!Utils.isCommitted(value)) {
            fail("Must not leave unmerged branch commits behind");
        }
    }
}
