public void testVariables() throws Exception {
    MetricsInstrumentation inst = new MetricsInstrumentation();
    inst.addVariable("a", "1", new Instrumentation.Variable<Long>() {

        private long counter = 0;

        public Long getValue() {
            return counter++;
        }
    });
    assertEquals(1, inst.getMetricRegistry().getGauges(noJvm).size());
    inst.addVariable("a", "2", new Instrumentation.Variable<Long>() {

        private long counter = 1;

        public Long getValue() {
            return counter++;
        }
    });
    assertEquals(2, inst.getMetricRegistry().getGauges(noJvm).size());
    inst.addVariable("b", "1", new Instrumentation.Variable<Long>() {

        private long counter = 2;

        public Long getValue() {
            return counter++;
        }
    });
    assertEquals(3, inst.getMetricRegistry().getGauges(noJvm).size());
    assertEquals(0L, inst.getMetricRegistry().getGauges(noJvm).get("a.1").getValue());
    assertEquals(1L, inst.getMetricRegistry().getGauges(noJvm).get("a.2").getValue());
    assertEquals(2L, inst.getMetricRegistry().getGauges(noJvm).get("b.1").getValue());
    assertEquals(1L, inst.getMetricRegistry().getGauges(noJvm).get("a.1").getValue());
    assertEquals(2L, inst.getMetricRegistry().getGauges(noJvm).get("a.2").getValue());
    assertEquals(3L, inst.getMetricRegistry().getGauges(noJvm).get("b.1").getValue());
}
