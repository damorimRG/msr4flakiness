@Test
public void testGetTreePermissionVersionableNodeRemoved() throws Exception {
    String versionPath = getVersionPath(TEST_OAK_PATH, false);
    root.getTree(TEST_OAK_PATH).remove();
    root.commit();
    permissionProvider.refresh();
    Tree tree = getRootProvider().createReadOnlyRoot(root).getTree(PathUtils.ROOT_PATH);
    TreePermission tp = permissionProvider.getTreePermission(tree, TreePermission.EMPTY);
    for (String elem : PathUtils.elements(versionPath)) {
        tree = tree.getChild(elem);
        tp = permissionProvider.getTreePermission(tree, tp);
    }
    assertTrue(tp instanceof AbstractTreePermission);
    AbstractTreePermission atp = (AbstractTreePermission) tp;
    assertSame(TreeType.VERSION, atp.getType());
    // tree must point to non-existing versionable node and NOT to the version tree
    assertNotSame(tree, atp.getTree());
    assertFalse(atp.getTree().exists());
    assertEquals(TEST_OAK_PATH, atp.getTree().getPath());
}
