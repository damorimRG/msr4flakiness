// OAK-7284
@Test
public void comodificationException() {
    Set<String> preferred = ImmutableSet.of("j:c");
    CountingIterable<NodeStateEntry> citr = createList(preferred, asList("/a", "/a/j:c", "/a/j:c/j:c", "/a/b"));
    FlatFileStoreIterator fitr = new FlatFileStoreIterator(citr.iterator(), preferred);
    NodeStateEntry a = fitr.next();
    assertEquals("/a", a.getPath());
    NodeState aNS = a.getNodeState();
    // fake aggregate rule like "j:c/*"
    for (ChildNodeEntry cne : aNS.getChildNodeEntries()) {
        NodeState childNS = cne.getNodeState();
        // read preferred names for aggregation sub-tree nodes
        for (String prefName : preferred) {
            childNS.getChildNode(prefName);
        }
    }
}
