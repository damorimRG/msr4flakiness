@Test(timeout = 30000)
public void copyFromLargeLocalDirectory() throws Exception {
    final String testDir = FileSystemShellUtilsTest.TEST_DIR;
    final String filePathFormat = "file_%d";
    final File src = new File(mLocalAlluxioCluster.getAlluxioHome() + testDir);
    FileUtils.deleteDirectory(src);
    src.mkdir();
    ExecutorService executor = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors() * 2);
    final int numFiles = 2_000;
    for (int i = 0; i < numFiles; i++) {
        final int fileId = i;
        executor.submit(() -> {
            try {
                new File(src, String.format(filePathFormat, fileId)).createNewFile();
            } catch (IOException e) {
            // Ignore errors here, if the file cannot be created, asserts below will fail.
            }
        });
    }
    executor.shutdown();
    executor.awaitTermination(Long.MAX_VALUE, TimeUnit.SECONDS);
    File[] files = src.listFiles();
    Assert.assertNotNull(files);
    Assert.assertEquals(numFiles, files.length);
    AlluxioURI dst = new AlluxioURI(testDir);
    if (mFileSystem.exists(dst)) {
        mFileSystem.delete(dst, DeletePOptions.newBuilder().setRecursive(true).build());
    }
    mFileSystem.createDirectory(dst);
    int ret = mFsShell.run("copyFromLocal", src.getAbsolutePath(), testDir);
    Assert.assertEquals(0, ret);
    for (int i = 0; i < numFiles; i++) {
        Assert.assertTrue(fileExists(dst.join(String.format(filePathFormat, i))));
    }
}
