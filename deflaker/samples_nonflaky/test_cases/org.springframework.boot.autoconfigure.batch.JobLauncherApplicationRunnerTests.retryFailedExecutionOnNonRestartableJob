@Test
void retryFailedExecutionOnNonRestartableJob() throws Exception {
    this.job = this.jobs.get("job").preventRestart().start(this.steps.get("step").tasklet(throwingTasklet()).build()).incrementer(new RunIdIncrementer()).build();
    this.runner.execute(this.job, new JobParameters());
    this.runner.execute(this.job, new JobParameters());
    // A failed job that is not restartable does not re-use the job params of
    // the last execution, but creates a new job instance when running it again.
    assertThat(this.jobExplorer.getJobInstances("job", 0, 100)).hasSize(2);
    assertThatExceptionOfType(JobRestartException.class).isThrownBy(() -> {
        // try to re-run a failed execution
        this.runner.execute(this.job, new JobParametersBuilder().addLong("run.id", 1L).toJobParameters());
        fail("expected JobRestartException");
    }).withMessageContaining("JobInstance already exists and is not restartable");
}
