@Test
@SuppressWarnings("unchecked")
void callbacksInvokeAndWhenLambdaMismatchOnDifferentArgumentShouldSwallowException() {
    GenericMultiArgFactory<StringBuilder> callbackInstance = (n, s, b) -> {
        fail("Should not get here");
        return 123;
    };
    String argument = "foo";
    Stream<Integer> result = LambdaSafe.callbacks(GenericMultiArgFactory.class, Collections.singleton(callbackInstance), argument).invokeAnd((c) -> c.handle(1, argument, false));
    assertThat(result).isEmpty();
}
