// check command report
public void testBundleChangeReport() throws Exception {
    BundleJobBean bundleJob = this.addRecordToBundleJobTable(Job.Status.RUNNING, false);
    CoordinatorJobBean coordJob1 = addRecordToCoordJobTable(CoordinatorJob.Status.SUCCEEDED, false, false);
    coordJob1.setBundleId(bundleJob.getId());
    coordJob1.setAppName("COORD-TEST1");
    final JPAService jpaService = Services.get().get(JPAService.class);
    assertNotNull(jpaService);
    CoordJobQueryExecutor.getInstance().executeUpdate(CoordJobQuery.UPDATE_COORD_JOB, coordJob1);
    BundleActionBean bundleAction1 = new BundleActionBean();
    bundleAction1.setBundleActionId(bundleJob.getId() + "_COORD-TEST1");
    bundleAction1.setCoordId(coordJob1.getId());
    bundleAction1.setBundleId(bundleJob.getId());
    bundleAction1.setStatus(Job.Status.SUCCEEDED);
    jpaService.execute(new BundleActionInsertJPAExecutor(bundleAction1));
    CoordinatorJobBean coordJob2 = addRecordToCoordJobTable(CoordinatorJob.Status.KILLED, false, false);
    coordJob2.setBundleId(bundleJob.getId());
    coordJob2.setAppName("COORD-TEST2");
    CoordJobQueryExecutor.getInstance().executeUpdate(CoordJobQuery.UPDATE_COORD_JOB, coordJob2);
    BundleActionBean bundleAction2 = new BundleActionBean();
    bundleAction2.setBundleActionId(bundleJob.getId() + "_COORD-TEST2");
    bundleAction2.setCoordId(coordJob2.getId());
    bundleAction2.setBundleId(bundleJob.getId());
    bundleAction2.setStatus(Job.Status.KILLED);
    jpaService.execute(new BundleActionInsertJPAExecutor(bundleAction2));
    CoordinatorJobBean coordJob3 = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, false, false);
    addRecordToCoordActionTable(coordJob3.getId(), 1, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", 0);
    addRecordToCoordActionTable(coordJob3.getId(), 2, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", 0, DateUtils.parseDateOozieTZ("2013-08-01T02:00Z"));
    addRecordToCoordActionTable(coordJob3.getId(), 3, CoordinatorAction.Status.RUNNING, "coord-action-get.xml", 0, DateUtils.parseDateOozieTZ("2013-08-01T03:00Z"));
    addRecordToCoordActionTable(coordJob3.getId(), 4, CoordinatorAction.Status.WAITING, "coord-action-get.xml", 0, DateUtils.parseDateOozieTZ("2013-08-01T04:00Z"));
    coordJob3.setBundleId(bundleJob.getId());
    coordJob3.setAppName("COORD-TEST3");
    coordJob3.setLastActionNumber(4);
    coordJob3.setEndTime(DateUtils.parseDateOozieTZ("2013-08-01T04:00Z"));
    coordJob3.setStartTime(DateUtils.parseDateOozieTZ("2013-08-01T00:00Z"));
    CoordJobQueryExecutor.getInstance().executeUpdate(CoordJobQuery.UPDATE_COORD_JOB, coordJob3);
    BundleActionBean bundleAction3 = new BundleActionBean();
    bundleAction3.setBundleActionId(bundleJob.getId() + "_COORD-TEST3");
    bundleAction3.setCoordId(coordJob3.getId());
    bundleAction3.setBundleId(bundleJob.getId());
    bundleAction3.setStatus(Job.Status.RUNNING);
    jpaService.execute(new BundleActionInsertJPAExecutor(bundleAction3));
    BundleJobGetJPAExecutor bundleJobGetCmd = new BundleJobGetJPAExecutor(bundleJob.getId());
    String dateStr = "2099-01-01T01:00Z";
    bundleJob = jpaService.execute(bundleJobGetCmd);
    assertEquals(bundleJob.getPauseTime(), null);
    String reports = null;
    try {
        new BundleJobChangeXCommand(bundleJob.getId(), "pausetime=" + dateStr).call();
    } catch (Exception e) {
        reports = e.getMessage();
    }
    assertTrue(reports.contains(coordJob2.getId() + " : Coord is in killed state"));
    bundleJobGetCmd = new BundleJobGetJPAExecutor(bundleJob.getId());
    dateStr = "2013-08-01T03:00Z";
    bundleJob = jpaService.execute(bundleJobGetCmd);
    try {
        new BundleJobChangeXCommand(bundleJob.getId(), "endtime=" + dateStr).call();
    } catch (Exception e) {
        reports = e.getMessage();
    }
    assertTrue(reports.contains(coordJob2.getId() + " : Coord is in killed state"));
    assertTrue(reports.contains(coordJob3.getId() + " : E1022: Cannot delete running/completed coordinator action"));
}
