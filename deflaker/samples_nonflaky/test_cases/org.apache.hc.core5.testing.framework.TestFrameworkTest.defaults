@Test
public void defaults() throws Exception {
    final FrameworkTest test = new FrameworkTest();
    final Map<String, Object> request = test.initRequest();
    Assert.assertNotNull("request should not be null", request);
    Assert.assertEquals("Default method should be GET", "GET", request.get(METHOD));
    Assert.assertEquals("Default request body expected.", TestingFramework.DEFAULT_REQUEST_BODY, request.get(BODY));
    Assert.assertEquals("Default request content type expected.", TestingFramework.DEFAULT_REQUEST_CONTENT_TYPE, request.get(CONTENT_TYPE));
    Assert.assertEquals("Default request query parameters expected.", TestingFramework.DEFAULT_REQUEST_QUERY, request.get(QUERY));
    Assert.assertEquals("Default request headers expected.", TestingFramework.DEFAULT_REQUEST_HEADERS, request.get(HEADERS));
    Assert.assertEquals("Default protocol version expected.", TestingFramework.DEFAULT_REQUEST_PROTOCOL_VERSION, request.get(PROTOCOL_VERSION));
    final Map<String, Object> responseExpectations = test.initResponseExpectations();
    Assert.assertNotNull("responseExpectations should not be null", responseExpectations);
    Assert.assertEquals("Default status expected.", TestingFramework.DEFAULT_RESPONSE_STATUS, responseExpectations.get(STATUS));
    Assert.assertEquals("Default body expected.", TestingFramework.DEFAULT_RESPONSE_BODY, responseExpectations.get(BODY));
    Assert.assertEquals("Default response content type expected.", TestingFramework.DEFAULT_RESPONSE_CONTENT_TYPE, responseExpectations.get(CONTENT_TYPE));
    Assert.assertEquals("Default headers expected.", TestingFramework.DEFAULT_RESPONSE_HEADERS, responseExpectations.get(HEADERS));
}
