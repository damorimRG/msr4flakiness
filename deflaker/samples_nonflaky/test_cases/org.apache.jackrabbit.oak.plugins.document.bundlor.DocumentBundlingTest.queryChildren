@Test
public void queryChildren() throws Exception {
    NodeBuilder builder = store.getRoot().builder();
    NodeBuilder appNB = newNode("app:Asset");
    createChild(appNB, "jcr:content", // not bundled
    "jcr:content/comments", "jcr:content/metadata", // not bundled
    "jcr:content/metadata/xmp", // includes all
    "jcr:content/renditions", "jcr:content/renditions/original", "jcr:content/renditions/original/jcr:content");
    builder.child("test").setChildNode("book.jpg", appNB.getNodeState());
    merge(builder);
    NodeState appNode = getNode(store.getRoot(), "test/book.jpg");
    ds.reset();
    int childCount = Iterables.size(appNode.getChildNodeEntries());
    assertEquals(1, childCount);
    assertEquals(0, ds.queryPaths.size());
    assertThat(childNames(appNode, "jcr:content"), hasItems("comments", "metadata", "renditions"));
    assertEquals(3, getNode(appNode, "jcr:content").getChildNodeCount(100));
    assertThat(childNames(appNode, "jcr:content/metadata"), hasItems("xmp"));
    assertEquals(1, getNode(appNode, "jcr:content/metadata").getChildNodeCount(100));
    ds.reset();
    // For bundled case no query should be fired
    assertThat(childNames(appNode, "jcr:content/renditions"), hasItems("original"));
    assertEquals(1, getNode(appNode, "jcr:content/renditions").getChildNodeCount(100));
    assertEquals(0, ds.queryPaths.size());
    assertThat(childNames(appNode, "jcr:content/renditions/original"), hasItems("jcr:content"));
    assertEquals(1, getNode(appNode, "jcr:content/renditions/original").getChildNodeCount(100));
    assertEquals(0, ds.queryPaths.size());
    AssertingDiff.assertEquals(appNB.getNodeState(), appNode);
}
