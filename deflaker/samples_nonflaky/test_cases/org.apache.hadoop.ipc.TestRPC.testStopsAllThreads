/**
 * Test that server.stop() properly stops all threads
 */
@Test
public void testStopsAllThreads() throws IOException, InterruptedException {
    Server server;
    int threadsBefore = countThreads("Server$Listener$Reader");
    assertEquals("Expect no Reader threads running before test", 0, threadsBefore);
    server = setupTestServer(conf, 5);
    try {
        // Wait for at least one reader thread to start
        int threadsRunning = 0;
        long totalSleepTime = 0;
        do {
            totalSleepTime += 10;
            Thread.sleep(10);
            threadsRunning = countThreads("Server$Listener$Reader");
        } while (threadsRunning == 0 && totalSleepTime < 5000);
        // Validate that at least one thread started (we didn't timeout)
        threadsRunning = countThreads("Server$Listener$Reader");
        assertTrue(threadsRunning > 0);
    } finally {
        server.stop();
    }
    int threadsAfter = countThreads("Server$Listener$Reader");
    assertEquals("Expect no Reader threads left running after test", 0, threadsAfter);
}
