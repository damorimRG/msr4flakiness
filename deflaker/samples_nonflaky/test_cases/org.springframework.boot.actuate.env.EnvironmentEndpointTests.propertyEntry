@Test
void propertyEntry() {
    TestPropertyValues.of("my.foo=another").applyToSystemProperties(() -> {
        StandardEnvironment environment = new StandardEnvironment();
        TestPropertyValues.of("my.foo=bar", "my.foo2=bar2").applyTo(environment, TestPropertyValues.Type.MAP, "test");
        EnvironmentEntryDescriptor descriptor = new EnvironmentEndpoint(environment).environmentEntry("my.foo");
        assertThat(descriptor).isNotNull();
        assertThat(descriptor.getProperty()).isNotNull();
        assertThat(descriptor.getProperty().getSource()).isEqualTo("test");
        assertThat(descriptor.getProperty().getValue()).isEqualTo("bar");
        Map<String, PropertySourceEntryDescriptor> sources = propertySources(descriptor);
        assertThat(sources.keySet()).containsExactly("test", "systemProperties", "systemEnvironment");
        assertPropertySourceEntryDescriptor(sources.get("test"), "bar", null);
        assertPropertySourceEntryDescriptor(sources.get("systemProperties"), "another", null);
        assertPropertySourceEntryDescriptor(sources.get("systemEnvironment"), null, null);
        return null;
    });
}
