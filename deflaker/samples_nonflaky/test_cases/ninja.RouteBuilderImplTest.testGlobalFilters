@Test
public void testGlobalFilters() throws Exception {
    // given
    // different setup that uses com.example packages and thus reads the Filters there
    Mockito.when(ninjaProperties.get(NinjaConstant.APPLICATION_MODULES_BASE_PACKAGE)).thenReturn("com.example");
    this.ninjaBaseDirectoryResolver = new NinjaBaseDirectoryResolver(ninjaProperties);
    this.routeBuilder = new RouteBuilderImpl(ninjaProperties, ninjaBaseDirectoryResolver);
    DummyFilter dummyFilter = new DummyFilter();
    Result expectedResult = Mockito.mock(Result.class);
    Context context = Mockito.mock(Context.class);
    Provider filterProvider = Mockito.mock(Provider.class);
    com.example.conf.Filters filters = new com.example.conf.Filters(DummyFilter.class);
    Mockito.when(injector.getInstance(com.example.conf.Filters.class)).thenReturn(filters);
    Mockito.when(injector.getProvider(DummyFilter.class)).thenReturn(filterProvider);
    Mockito.when(filterProvider.get()).thenReturn(dummyFilter);
    routeBuilder.GET().route("/").with(() -> expectedResult);
    Route route = routeBuilder.buildRoute(injector);
    FilterChain filterChain = route.getFilterChain();
    // when
    Result result = filterChain.next(context);
    // then
    Mockito.verify(injector).getInstance(com.example.conf.Filters.class);
    assertThat(dummyFilter.executed, Matchers.equalTo(1));
    assertThat(result, org.hamcrest.Matchers.equalTo(expectedResult));
}
