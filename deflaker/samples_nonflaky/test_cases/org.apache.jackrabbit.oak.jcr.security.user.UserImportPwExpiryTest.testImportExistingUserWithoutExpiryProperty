/**
 * @since Oak 1.1
 */
@Test
public void testImportExistingUserWithoutExpiryProperty() throws Exception {
    String uid = "existing";
    User user = getUserManager().createUser(uid, uid);
    Session s = getImportSession();
    // change password to force existence of password last modified property
    user.changePassword(uid);
    s.save();
    Node userNode = s.getNode(user.getPath());
    assertTrue(userNode.hasNode(UserConstants.REP_PWD));
    Node pwdNode = userNode.getNode(UserConstants.REP_PWD);
    assertTrue(pwdNode.hasProperty(UserConstants.REP_PASSWORD_LAST_MODIFIED));
    // overwrite user via import
    String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<sv:node sv:name=\"" + uid + "\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">" + "   <sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\">" + "      <sv:value>rep:User</sv:value>" + "   </sv:property>" + "   <sv:property sv:name=\"rep:password\" sv:type=\"String\">" + "      <sv:value>" + uid + "</sv:value>" + "   </sv:property>" + "   <sv:property sv:name=\"rep:principalName\" sv:type=\"String\">" + "      <sv:value>" + uid + "Principal</sv:value>" + "   </sv:property>" + "</sv:node>";
    doImport(USERPATH, xml);
    Authorizable authorizable = getUserManager().getAuthorizable(uid);
    userNode = s.getNode(authorizable.getPath());
    assertTrue(userNode.hasNode(UserConstants.REP_PWD));
    pwdNode = userNode.getNode(UserConstants.REP_PWD);
    assertTrue(pwdNode.hasProperty(UserConstants.REP_PASSWORD_LAST_MODIFIED));
}
