@Test
public void testModified2() {
    PrincipalBasedAuthorizationConfiguration pbac = getPrincipalBasedAuthorizationConfiguration();
    ServiceRegistration registrationMock = mock(ServiceRegistration.class);
    BundleContext ctx = when(mock(BundleContext.class).registerService(anyString(), any(AggregationFilter.class), any(Hashtable.class))).thenReturn(registrationMock).getMock();
    PrincipalBasedAuthorizationConfiguration.Configuration config = mock(PrincipalBasedAuthorizationConfiguration.Configuration.class);
    when(config.configurationRanking()).thenReturn(50);
    when(config.enableAggregationFilter()).thenReturn(true);
    pbac.activate(ctx, config);
    when(config.configurationRanking()).thenReturn(85);
    when(config.enableAggregationFilter()).thenReturn(false);
    pbac.modified(ctx, config);
    ConfigurationParameters params = pbac.getParameters();
    assertEquals(85, params.get(PARAM_RANKING));
    assertEquals(Boolean.FALSE, params.get(PARAM_ENABLE_AGGREGATION_FILTER));
    verify(registrationMock, times(1)).unregister();
}
