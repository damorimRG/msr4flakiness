@Test
public void testLiteralHeaderWithoutIndexingEncodingRFC7541Examples() throws Exception {
    final OutboundDynamicTable dynamicTable = new OutboundDynamicTable();
    final HPackEncoder encoder = new HPackEncoder(dynamicTable, StandardCharsets.US_ASCII);
    final ByteArrayBuffer buf = new ByteArrayBuffer(128);
    final Header header = new BasicHeader(":path", "/sample/path");
    encoder.encodeLiteralHeader(buf, new HPackEntry() {

        @Override
        public int getIndex() {
            return 4;
        }

        @Override
        public HPackHeader getHeader() {
            return new HPackHeader(header);
        }
    }, header, HPackRepresentation.WITHOUT_INDEXING, false);
    final byte[] expected = createByteArray(0x04, 0x0c, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x70, 0x61, 0x74, 0x68);
    Assert.assertArrayEquals(expected, buf.toByteArray());
}
