@Test
public void testDirectoryIndex() throws IOException, URISyntaxException {
    TestHttpClient client = new TestHttpClient();
    Path rootPath = Paths.get(getClass().getResource("page.html").toURI()).getParent();
    Path badSymlink = null;
    try {
        DefaultServer.setRootHandler(new PathHandler().addPrefixPath("/path", new ResourceHandler(new PathResourceManager(rootPath, 10485760)).setDirectoryListingEnabled(true)));
        badSymlink = rootPath.resolve("tmp2");
        Path badSymlinkTarget = rootPath.resolve("/tmp2");
        Files.createSymbolicLink(badSymlink, badSymlinkTarget);
        HttpGet get = new HttpGet(DefaultServer.getDefaultServerURL() + "/path");
        HttpResponse result = client.execute(get);
        Assert.assertEquals(StatusCodes.OK, result.getStatusLine().getStatusCode());
        String response = HttpClientUtils.readResponse(result);
        Header[] headers = result.getHeaders("Content-Type");
        Assert.assertEquals("text/html; charset=UTF-8", headers[0].getValue());
        Assert.assertTrue(response, response.contains("page.html"));
        get = new HttpGet(DefaultServer.getDefaultServerURL() + "/path/.");
        result = client.execute(get);
        Assert.assertEquals(StatusCodes.OK, result.getStatusLine().getStatusCode());
        response = HttpClientUtils.readResponse(result);
        headers = result.getHeaders("Content-Type");
        Assert.assertEquals("text/html; charset=UTF-8", headers[0].getValue());
        Assert.assertTrue(response, response.contains("page.html"));
        Assert.assertTrue(response, response.contains("tmp2"));
        // All invalid symlinks have their date set to epoch
        SimpleDateFormat format = new SimpleDateFormat("MMM dd, yyyy HH:mm:ss", Locale.US);
        Assert.assertTrue(response, response.contains(format.format((new Date(0L)))));
    } finally {
        client.getConnectionManager().shutdown();
        if (badSymlink != null) {
            Files.deleteIfExists(badSymlink);
        }
    }
}
