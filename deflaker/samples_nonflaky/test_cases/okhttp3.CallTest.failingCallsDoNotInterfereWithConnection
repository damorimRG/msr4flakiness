/**
 * We had a bug where failed HTTP/2 calls could break the entire connection.
 */
@Flaky
@Test
public void failingCallsDoNotInterfereWithConnection() throws Exception {
    enableProtocol(Protocol.HTTP_2);
    server.enqueue(new MockResponse().setBody("Response 1"));
    server.enqueue(new MockResponse().setBody("Response 2"));
    RequestBody requestBody = new RequestBody() {

        @Override
        public MediaType contentType() {
            return null;
        }

        @Override
        public void writeTo(BufferedSink sink) throws IOException {
            sink.writeUtf8("abc");
            sink.flush();
            makeFailingCall();
            sink.writeUtf8("def");
            sink.flush();
        }
    };
    Call call = client.newCall(new Request.Builder().url(server.url("/")).post(requestBody).build());
    try (Response response = call.execute()) {
        assertThat(response.code()).isEqualTo(200);
        assertThat(response.body().string()).isNotBlank();
    }
    long connectCount = listener.getEventSequence().stream().filter((event) -> event instanceof ConnectStart).count();
    long expected = platform.isJdk8() ? 2 : 1;
    assertThat(connectCount).isEqualTo(expected);
}
