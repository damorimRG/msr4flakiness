@Test
public void testResult() throws Exception {
    QueryResult queryResult = mock(QueryResult.class);
    when(queryResult.getColumnNames()).thenReturn(new String[] { "rep:facet(text)", "jcr:path", "rep:facet(jcr:title)" });
    RowIterator rows = mock(RowIterator.class);
    when(rows.hasNext()).thenReturn(true);
    Row row = mock(Row.class);
    Value value = mock(Value.class);
    when(value.getString()).thenReturn("{}");
    when(row.getValue("rep:facet(text)")).thenReturn(value);
    Value value2 = mock(Value.class);
    when(value2.getString()).thenReturn("{\"a\" : 2, \"b\" : 1}");
    when(row.getValue("rep:facet(jcr:title)")).thenReturn(value2);
    when(rows.nextRow()).thenReturn(row);
    when(queryResult.getRows()).thenReturn(rows);
    FacetResult facetResult = new FacetResult(queryResult);
    assertNotNull(facetResult.getDimensions());
    assertEquals(2, facetResult.getDimensions().size());
    assertTrue(facetResult.getDimensions().contains("text"));
    assertTrue(facetResult.getDimensions().contains("jcr:title"));
    assertNotNull(facetResult.getFacets("text"));
    assertTrue(facetResult.getFacets("text").isEmpty());
    assertNotNull(facetResult.getFacets("jcr:title"));
    assertEquals(2, facetResult.getFacets("jcr:title").size());
    assertEquals("a", facetResult.getFacets("jcr:title").get(0).getLabel());
    assertEquals(2, facetResult.getFacets("jcr:title").get(0).getCount(), 0);
    assertEquals("b", facetResult.getFacets("jcr:title").get(1).getLabel());
    assertEquals(1, facetResult.getFacets("jcr:title").get(1).getCount(), 0);
}
