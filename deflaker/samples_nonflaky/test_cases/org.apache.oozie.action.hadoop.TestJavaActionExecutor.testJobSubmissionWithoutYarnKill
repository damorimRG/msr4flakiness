public void testJobSubmissionWithoutYarnKill() throws Exception {
    Path inputDir = new Path(getFsTestCaseDir(), "input");
    Path outputDir = new Path(getFsTestCaseDir(), "output");
    Writer w = new OutputStreamWriter(getFileSystem().create(new Path(inputDir, "data.txt")), StandardCharsets.UTF_8);
    w.write("dummy\n");
    w.write("dummy\n");
    w.close();
    w = new OutputStreamWriter(getFileSystem().create(new Path(inputDir, "id.pig")), StandardCharsets.UTF_8);
    w.write("A = load '$INPUT' using PigStorage(':');\n");
    w.write("store B into '$OUTPUT' USING PigStorage();\n");
    w.close();
    String actionXml = "<pig>" + "<job-tracker>" + getJobTrackerUri() + "</job-tracker>" + "<name-node>" + getNameNodeUri() + "</name-node>" + "<prepare>" + "<delete path='outputdir' />" + "</prepare>" + "<configuration>" + "<property>" + "<name>mapred.compress.map.output</name>" + "<value>true</value>" + "</property>" + "<property>" + "<name>mapred.job.queue.name</name>" + "<value>default</value>" + "</property>" + "</configuration>" + "<script>" + inputDir.toString() + "/id.pig" + "</script>" + "<param>INPUT=" + inputDir.toUri().getPath() + "</param>" + "<param>OUTPUT=" + outputDir.toUri().getPath() + "/pig-output</param>" + "</pig>";
    PigActionExecutor ae = new PigActionExecutor();
    WorkflowJobBean wfBean = addRecordToWfJobTable("test1", actionXml);
    WorkflowActionBean action = (WorkflowActionBean) wfBean.getActions().get(0);
    action.setType(ae.getType());
    action.setConf(actionXml);
    Context context = new Context(wfBean, action);
    ConfigurationService.setBoolean(JavaActionExecutor.HADOOP_YARN_KILL_CHILD_JOBS_ON_AMRESTART, false);
    final String runningJob = submitAction(context, ae);
    waitUntilYarnAppDoneAndAssertSuccess(runningJob);
}
