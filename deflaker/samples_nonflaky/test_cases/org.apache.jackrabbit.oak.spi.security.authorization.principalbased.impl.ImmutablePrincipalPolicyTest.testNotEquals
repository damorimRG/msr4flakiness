@Test
public void testNotEquals() {
    ImmutablePrincipalPolicy differentPath = new ImmutablePrincipalPolicy(policy.getPrincipal(), "/different/path", policy.getEntries(), policy.getRestrictionProvider(), policy.getNamePathMapper());
    ImmutablePrincipalPolicy differentPrincipal = new ImmutablePrincipalPolicy(EveryonePrincipal.getInstance(), policy.getOakPath(), policy.getEntries(), policy.getRestrictionProvider(), policy.getNamePathMapper());
    ImmutablePrincipalPolicy differentEntries = new ImmutablePrincipalPolicy(policy.getPrincipal(), policy.getOakPath(), Collections.emptyList(), policy.getRestrictionProvider(), policy.getNamePathMapper());
    assertNotEquals(immutable, policy);
    assertNotEquals(immutable, new ImmutableACL(policy));
    assertNotEquals(immutable, differentPath);
    assertNotEquals(immutable, differentPrincipal);
    assertNotEquals(immutable, differentEntries);
    int hc = immutable.hashCode();
    assertNotEquals(hc, policy.hashCode());
    assertNotEquals(hc, new ImmutableACL(policy).hashCode());
    assertNotEquals(hc, differentPath.hashCode());
    assertNotEquals(hc, differentPrincipal.hashCode());
    assertNotEquals(hc, differentEntries.hashCode());
}
