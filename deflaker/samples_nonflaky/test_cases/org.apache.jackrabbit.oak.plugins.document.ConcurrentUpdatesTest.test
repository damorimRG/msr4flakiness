@Test
public void test() throws Exception {
    final List<Exception> exceptions = Collections.synchronizedList(new ArrayList<Exception>());
    List<Thread> writers = new ArrayList<Thread>();
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < NUM_WRITERS; i++) {
        final String nodeName = "test-" + i;
        sb.append("+\"").append(nodeName).append("\":{}");
        writers.add(new Thread(new Runnable() {

            @Override
            public void run() {
                try {
                    for (int i = 0; i < NUM_OPS; i++) {
                        mk.commit("/" + nodeName, "^\"prop\":" + i, null, null);
                    }
                } catch (Exception e) {
                    exceptions.add(e);
                }
            }
        }));
    }
    mk.commit("/", sb.toString(), null, null);
    long time = System.currentTimeMillis();
    for (Thread t : writers) {
        t.start();
    }
    for (Thread t : writers) {
        t.join();
    }
    time = System.currentTimeMillis() - time;
    // System.out.println(time);
    for (Exception e : exceptions) {
        throw e;
    }
}
