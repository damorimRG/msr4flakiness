@Test
public void testReadRestrictions() throws Exception {
    Tree aceNode = TreeUtil.addChild(root.getTree("/"), "test", NT_REP_GRANT_ACE);
    aceNode.setProperty("boolean", true);
    aceNode.setProperty(PropertyStates.createProperty("longs", ImmutableList.of(vf.createValue(10), vf.createValue(290))));
    aceNode.setProperty(REP_GLOB, "*");
    // empty array
    aceNode.setProperty(REP_NT_NAMES, ImmutableSet.of(), Type.NAMES);
    aceNode.setProperty("invalid", "val");
    aceNode.setProperty("invalid2", ImmutableList.of("val1", "val2", "val3"), Type.STRINGS);
    Set<Restriction> restrictions = provider.readRestrictions("/test", aceNode);
    assertEquals(4, restrictions.size());
    for (Restriction r : restrictions) {
        String name = r.getDefinition().getName();
        if (!supported.contains(name)) {
            fail("read unsupported restriction");
        }
    }
}
