@Test
public void simplePropertyUpdateCallback() throws Exception {
    IndexDefinitionBuilder defnb = new IndexDefinitionBuilder();
    defnb.indexRule("nt:base").property("foo").propertyIndex();
    NodeState defnState = defnb.build();
    IndexDefinition defn = new IndexDefinition(root, defnState, indexPath);
    LuceneIndexEditorContext ctx = newContext(defnState.builder(), defn, true);
    ctx.setPropertyUpdateCallback(propCallback);
    EditorHook hook = createHook(ctx);
    updateBefore(defnb);
    // Property added
    NodeBuilder builder = before.builder();
    builder.child("a").setProperty("foo", "bar");
    builder.child("a").setProperty("foo2", "bar");
    builder.child("a").child("b");
    before = hook.processCommit(root, builder.getNodeState(), CommitInfo.EMPTY);
    propCallback.state.assertState("/a", "foo", UpdateState.ADDED);
    assertEquals(1, propCallback.invocationCount);
    assertEquals(1, propCallback.doneInvocationCount);
    propCallback.reset();
    // Property updated
    builder = before.builder();
    builder.child("a").setProperty("foo", "bar2");
    builder.child("a").setProperty("foo2", "bar2");
    before = hook.processCommit(before, builder.getNodeState(), CommitInfo.EMPTY);
    propCallback.state.assertState("/a", "foo", UpdateState.UPDATED);
    assertEquals(1, propCallback.invocationCount);
    propCallback.reset();
    // Property deleted
    builder = before.builder();
    builder.child("a").removeProperty("foo");
    builder.child("a").removeProperty("foo2");
    before = hook.processCommit(before, builder.getNodeState(), CommitInfo.EMPTY);
    propCallback.state.assertState("/a", "foo", UpdateState.DELETED);
    assertEquals(1, propCallback.invocationCount);
    propCallback.reset();
}
