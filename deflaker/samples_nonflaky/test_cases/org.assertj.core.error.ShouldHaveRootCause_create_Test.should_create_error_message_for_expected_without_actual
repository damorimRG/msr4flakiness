@Test
public void should_create_error_message_for_expected_without_actual() {
    // GIVEN
    Throwable actualCause = null;
    Throwable actual = new RuntimeException();
    Throwable expectedCause = new RuntimeException("hello");
    // WHEN
    String message = shouldHaveRootCause(actual, actualCause, expectedCause).create(DESCRIPTION);
    // THEN
    assertThat(message).isEqualTo(format("[TEST] %n" + "Expecting a root cause with type:%n" + "  <\"java.lang.RuntimeException\">%n" + "and message:%n" + "  <\"hello\">%n" + "but actual had no root cause." + "%n" + "Throwable that failed the check:%n" + "%n%s", getStackTrace(actual)));
}
