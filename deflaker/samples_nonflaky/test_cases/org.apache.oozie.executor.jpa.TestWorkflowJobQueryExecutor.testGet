public void testGet() throws Exception {
    WorkflowJobBean bean = addRecordToWfJobTable(WorkflowJob.Status.RUNNING, WorkflowInstance.Status.RUNNING);
    assertNotNull(bean.getProtoActionConf());
    bean.setStartTime(new Date(System.currentTimeMillis() - 10));
    bean.setEndTime(new Date());
    WorkflowJobQueryExecutor.getInstance().executeUpdate(WorkflowJobQuery.UPDATE_WORKFLOW, bean);
    WorkflowJobBean retBean;
    // GET_WORKFLOW_STARTTIME
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_STARTTIME, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getStartTime().getTime(), retBean.getStartTime().getTime());
    assertNull(retBean.getWorkflowInstance());
    assertNull(retBean.getProtoActionConf());
    assertNull(retBean.getSlaXml());
    assertNull(retBean.getConf());
    // GET_WORKFLOW_START_END_TIME
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_START_END_TIME, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getStartTime().getTime(), retBean.getStartTime().getTime());
    assertEquals(bean.getEndTime().getTime(), retBean.getEndTime().getTime());
    assertNull(retBean.getWorkflowInstance());
    assertNull(retBean.getProtoActionConf());
    assertNull(retBean.getSlaXml());
    assertNull(retBean.getConf());
    // GET_WORKFLOW_USER_GROUP
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_USER_GROUP, bean.getId());
    assertEquals(bean.getUser(), retBean.getUser());
    assertEquals(bean.getGroup(), retBean.getGroup());
    assertNull(retBean.getWorkflowInstance());
    assertNull(retBean.getProtoActionConf());
    assertNull(retBean.getSlaXml());
    assertNull(retBean.getConf());
    // GET_WORKFLOW_SUSPEND
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_SUSPEND, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getUser(), retBean.getUser());
    assertEquals(bean.getGroup(), retBean.getGroup());
    assertEquals(bean.getAppName(), retBean.getAppName());
    assertEquals(bean.getStatusStr(), retBean.getStatusStr());
    assertEquals(bean.getParentId(), retBean.getParentId());
    assertEquals(bean.getLogToken(), retBean.getLogToken());
    assertEquals(ByteBuffer.wrap(bean.getWfInstanceBlob().getBytes()).getInt(), ByteBuffer.wrap(retBean.getWfInstanceBlob().getBytes()).getInt());
    assertEquals(bean.getStartTime().getTime(), retBean.getStartTime().getTime());
    assertEquals(bean.getEndTime().getTime(), retBean.getEndTime().getTime());
    assertNull(retBean.getProtoActionConf());
    assertNull(retBean.getSlaXml());
    assertNull(retBean.getConf());
    // GET_WORKFLOW_ACTION_OP
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_ACTION_OP, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getUser(), retBean.getUser());
    assertEquals(bean.getGroup(), retBean.getGroup());
    assertEquals(bean.getAppName(), retBean.getAppName());
    assertEquals(bean.getAppPath(), retBean.getAppPath());
    assertEquals(bean.getStatusStr(), retBean.getStatusStr());
    assertEquals(bean.getRun(), retBean.getRun());
    assertEquals(bean.getParentId(), retBean.getParentId());
    assertEquals(bean.getLogToken(), retBean.getLogToken());
    assertEquals(ByteBuffer.wrap(bean.getWfInstanceBlob().getBytes()).getInt(), ByteBuffer.wrap(retBean.getWfInstanceBlob().getBytes()).getInt());
    assertEquals(bean.getProtoActionConf(), retBean.getProtoActionConf());
    assertNull(retBean.getSlaXml());
    assertNull(retBean.getConf());
    // GET_WORKFLOW_RERUN
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_RERUN, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getUser(), retBean.getUser());
    assertEquals(bean.getGroup(), retBean.getGroup());
    assertEquals(bean.getAppName(), retBean.getAppName());
    assertEquals(bean.getStatusStr(), retBean.getStatusStr());
    assertEquals(bean.getRun(), retBean.getRun());
    assertEquals(bean.getLogToken(), retBean.getLogToken());
    assertEquals(ByteBuffer.wrap(bean.getWfInstanceBlob().getBytes()).getInt(), ByteBuffer.wrap(retBean.getWfInstanceBlob().getBytes()).getInt());
    assertNull(retBean.getProtoActionConf());
    assertNull(retBean.getSlaXml());
    assertNull(retBean.getConf());
    // GET_WORKFLOW_DEFINITION
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_DEFINITION, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getUser(), retBean.getUser());
    assertEquals(bean.getGroup(), retBean.getGroup());
    assertEquals(bean.getAppName(), retBean.getAppName());
    assertEquals(bean.getLogToken(), retBean.getLogToken());
    assertEquals(ByteBuffer.wrap(bean.getWfInstanceBlob().getBytes()).getInt(), ByteBuffer.wrap(retBean.getWfInstanceBlob().getBytes()).getInt());
    assertNull(retBean.getProtoActionConf());
    assertNull(retBean.getSlaXml());
    assertNull(retBean.getConf());
    // GET_WORKFLOW_KILL
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_KILL, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getUser(), retBean.getUser());
    assertEquals(bean.getGroup(), retBean.getGroup());
    assertEquals(bean.getAppName(), retBean.getAppName());
    assertEquals(bean.getAppPath(), retBean.getAppPath());
    assertEquals(bean.getStatusStr(), retBean.getStatusStr());
    assertEquals(bean.getParentId(), retBean.getParentId());
    assertEquals(bean.getStartTime().getTime(), retBean.getStartTime().getTime());
    assertEquals(bean.getEndTime().getTime(), retBean.getEndTime().getTime());
    assertEquals(bean.getLogToken(), retBean.getLogToken());
    assertEquals(ByteBuffer.wrap(bean.getWfInstanceBlob().getBytes()).getInt(), ByteBuffer.wrap(retBean.getWfInstanceBlob().getBytes()).getInt());
    assertEquals(bean.getSlaXml(), retBean.getSlaXml());
    assertEquals(bean.getProtoActionConf(), retBean.getProtoActionConf());
    assertNull(retBean.getConf());
    // GET_WORKFLOW_RESUME
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_RESUME, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getUser(), retBean.getUser());
    assertEquals(bean.getGroup(), retBean.getGroup());
    assertEquals(bean.getAppName(), retBean.getAppName());
    assertEquals(bean.getAppPath(), retBean.getAppPath());
    assertEquals(bean.getStatusStr(), retBean.getStatusStr());
    assertEquals(bean.getParentId(), retBean.getParentId());
    assertEquals(bean.getStartTime().getTime(), retBean.getStartTime().getTime());
    assertEquals(bean.getEndTime().getTime(), retBean.getEndTime().getTime());
    assertEquals(bean.getLogToken(), retBean.getLogToken());
    assertEquals(ByteBuffer.wrap(bean.getWfInstanceBlob().getBytes()).getInt(), ByteBuffer.wrap(retBean.getWfInstanceBlob().getBytes()).getInt());
    assertEquals(bean.getProtoActionConf(), retBean.getProtoActionConf());
    assertNull(retBean.getConf());
    assertNull(retBean.getSlaXml());
    // GET_WORKFLOW_STATUS
    retBean = WorkflowJobQueryExecutor.getInstance().get(WorkflowJobQuery.GET_WORKFLOW_STATUS, bean.getId());
    assertEquals(bean.getId(), retBean.getId());
    assertEquals(bean.getStatus(), retBean.getStatus());
}
