@Test
public void scheduledJobOnLeader() {
    Map<String, Object> config = Collections.emptyMap();
    final AtomicReference<Map<?, ?>> props = new AtomicReference<Map<?, ?>>();
    Whiteboard wb = new DefaultWhiteboard() {

        @Override
        public <T> Registration register(Class<T> type, T service, Map<?, ?> properties) {
            props.set(properties);
            return super.register(type, service, properties);
        }
    };
    WhiteboardUtils.scheduleWithFixedDelay(wb, new TestRunnable(), config, 1, RUN_ON_LEADER, false);
    assertEquals("LEADER", props.get().get("scheduler.runOn"));
}
