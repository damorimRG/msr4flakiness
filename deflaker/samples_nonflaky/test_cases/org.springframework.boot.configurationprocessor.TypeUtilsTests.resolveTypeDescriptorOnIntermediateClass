@Test
void resolveTypeDescriptorOnIntermediateClass() throws IOException {
    process(AbstractIntermediateGenericProperties.class, (roundEnv, typeUtils) -> {
        TypeDescriptor typeDescriptor = typeUtils.resolveTypeDescriptor(roundEnv.getRootElement(AbstractIntermediateGenericProperties.class));
        assertThat(typeDescriptor.getGenerics().keySet().stream().map(Object::toString)).containsOnly("A", "B", "C");
        assertThat(typeDescriptor.resolveGeneric("A")).hasToString(String.class.getName());
        assertThat(typeDescriptor.resolveGeneric("B")).hasToString(Integer.class.getName());
        assertThat(typeDescriptor.resolveGeneric("C")).hasToString("C");
    });
}
