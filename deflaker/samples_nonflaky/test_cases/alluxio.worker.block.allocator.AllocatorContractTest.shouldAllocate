/**
 * Tests that allocation happens when the RAM, SSD and HDD size is lower than the default size.
 */
@Test
public void shouldAllocate() throws Exception {
    for (String strategyName : mStrategies) {
        ServerConfiguration.set(PropertyKey.WORKER_ALLOCATOR_CLASS, strategyName);
        resetManagerView();
        Allocator tierAllocator = Allocator.Factory.create(getMetadataEvictorView());
        for (int i = 0; i < DEFAULT_RAM_NUM; i++) {
            assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc1, DEFAULT_RAM_SIZE - 1, true);
        }
        for (int i = 0; i < DEFAULT_SSD_NUM; i++) {
            assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc2, DEFAULT_SSD_SIZE - 1, true);
        }
        for (int i = 0; i < DEFAULT_HDD_NUM; i++) {
            assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc3, DEFAULT_HDD_SIZE - 1, true);
        }
        resetManagerView();
        Allocator anyAllocator = Allocator.Factory.create(getMetadataEvictorView());
        for (int i = 0; i < DEFAULT_RAM_NUM; i++) {
            assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_RAM_SIZE - 1, true);
        }
        for (int i = 0; i < DEFAULT_SSD_NUM; i++) {
            assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_SSD_SIZE - 1, true);
        }
        for (int i = 0; i < DEFAULT_HDD_NUM; i++) {
            assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_HDD_SIZE - 1, true);
        }
    }
}
