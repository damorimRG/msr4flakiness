/**
 * Test : The subworkflow and workflow should get purged, and the coordinator parent should get purged --> all will get
 * purged
 *
 * Coordinator parent finished Workflow and its subworkflow have terminated, last modified time is known, but end time is null
 * for workflow and subworkflow
 *
 * @throws Exception if cannot insert records to the database
 */
public void testPurgeableCoordinatorPurgeableWorkflowPurgeableSubWorkflowWithNullEndTimeValidLastModifiedTime() throws Exception {
    CoordinatorJobBean coordJob = addRecordToCoordJobTable(CoordinatorJob.Status.SUCCEEDED, false, false);
    final QueryExecutor<WorkflowJobBean, WorkflowJobQueryExecutor.WorkflowJobQuery> workflowJobQueryExecutor = WorkflowJobQueryExecutor.getInstance();
    WorkflowJobBean wfJob = addRecordToWfJobTable(WorkflowJob.Status.SUCCEEDED, WorkflowInstance.Status.SUCCEEDED);
    wfJob.setLastModifiedTime(wfJob.getEndTime());
    wfJob.setEndTime(null);
    workflowJobQueryExecutor.executeUpdate(WorkflowJobQuery.UPDATE_WORKFLOW, wfJob);
    WorkflowActionBean wfAction = addRecordToWfActionTable(wfJob.getId(), "1", WorkflowAction.Status.OK);
    WorkflowJobBean subwfJob = addRecordToWfJobTable(WorkflowJob.Status.SUCCEEDED, WorkflowInstance.Status.SUCCEEDED, wfJob.getId());
    subwfJob.setLastModifiedTime(subwfJob.getEndTime());
    subwfJob.setEndTime(null);
    workflowJobQueryExecutor.executeUpdate(WorkflowJobQuery.UPDATE_WORKFLOW, subwfJob);
    WorkflowActionBean subwfAction = addRecordToWfActionTable(subwfJob.getId(), "1", WorkflowAction.Status.OK);
    CoordinatorActionBean coordAction = addRecordToCoordActionTable(coordJob.getId(), 1, CoordinatorAction.Status.SUCCEEDED, "coord-action-get.xml", wfJob.getId(), "SUCCEEDED", 0);
    purgeWithDefaultParameters();
    assertCoordinatorJobPurged(coordJob);
    assertCoordinatorActionPurged(coordAction);
    assertWorkflowJobPurged(wfJob);
    assertWorkflowActionPurged(wfAction);
    assertWorkflowJobPurged(subwfJob);
    assertWorkflowActionPurged(subwfAction);
}
