@Test
public void indexCreationAndCloser() throws Exception {
    LuceneIndexDefinition idxDefn = getNRTIndexDefinition("/foo");
    NRTIndex idx1 = indexFactory.createIndex(idxDefn);
    assertNotNull(idx1);
    assertEquals(1, indexFactory.getIndexes("/foo").size());
    NRTIndex idx2 = indexFactory.createIndex(idxDefn);
    assertEquals(2, indexFactory.getIndexes("/foo").size());
    assertFalse(idx1.isClosed());
    NRTIndex idx3 = indexFactory.createIndex(idxDefn);
    assertFalse(idx1.isClosed());
    assertEquals(3, indexFactory.getIndexes("/foo").size());
    // Nothing index so size is zero
    assertEquals(0, idx2.getReaders().size());
    assertEquals(0, idx3.getReaders().size());
    NRTIndex idx4 = indexFactory.createIndex(idxDefn);
    assertEquals(3, indexFactory.getIndexes("/foo").size());
    assertEquals(0, idx3.getReaders().size());
    assertEquals(0, idx4.getReaders().size());
    // With 3 generation open the first one should be closed
    assertTrue(idx1.isClosed());
    assertNull(idx1.getPrevious());
    NRTIndex idx5 = indexFactory.createIndex(idxDefn);
    assertEquals(3, indexFactory.getIndexes("/foo").size());
    assertTrue(idx2.isClosed());
    assertNull(idx2.getPrevious());
}
