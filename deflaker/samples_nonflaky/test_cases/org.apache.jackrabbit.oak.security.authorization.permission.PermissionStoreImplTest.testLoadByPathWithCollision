@Test
public void testLoadByPathWithCollision() throws Exception {
    try {
        Tree everyoneTree = getPermissionRoot(EveryonePrincipal.NAME);
        Tree aa = TreeUtil.addChild(everyoneTree, "/Aa".hashCode() + "", NT_REP_PERMISSION_STORE);
        aa.setProperty(REP_ACCESS_CONTROLLED_PATH, "/Aa");
        Tree entry = TreeUtil.addChild(aa, "1", NT_REP_PERMISSIONS);
        entry.setProperty(PrivilegeBits.BUILT_IN.get(REP_READ_NODES).asPropertyState(REP_PRIVILEGE_BITS));
        entry.setProperty(REP_IS_ALLOW, false);
        Tree collision = TreeUtil.addChild(aa, "c_" + "/BB".hashCode(), NT_REP_PERMISSION_STORE);
        collision.setProperty(REP_ACCESS_CONTROLLED_PATH, "/BB");
        Tree entryBB = TreeUtil.addChild(collision, "1", NT_REP_PERMISSIONS);
        entryBB.setProperty(PrivilegeBits.BUILT_IN.get(REP_READ_NODES).asPropertyState(REP_PRIVILEGE_BITS));
        entryBB.setProperty(REP_IS_ALLOW, true);
        // a single allow entry for /BB (must descend to collision tree)
        Collection<PermissionEntry> entries = permissionStore.load(EveryonePrincipal.NAME, "/BB");
        assertNotNull(entries);
        assertEquals(1, entries.size());
        assertTrue(entries.iterator().next().isAllow);
        // a single deny entry for /Aa
        entries = permissionStore.load(EveryonePrincipal.NAME, "/Aa");
        assertNotNull(entries);
        assertFalse(entries.iterator().next().isAllow);
    } finally {
        root.refresh();
    }
}
