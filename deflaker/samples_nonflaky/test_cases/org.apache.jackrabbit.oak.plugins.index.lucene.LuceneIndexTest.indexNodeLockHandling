@Test
public void indexNodeLockHandling() throws Exception {
    tracker = new IndexTracker();
    // Create 2 indexes. /oak:index/lucene and /test/oak:index/lucene
    // The way LuceneIndexLookupUtil works is. It collect child first and then
    // parent
    NodeBuilder index = builder.child(INDEX_DEFINITIONS_NAME);
    NodeBuilder nb = newLuceneIndexDefinitionV2(index, "lucene", of(TYPENAME_STRING));
    nb.setProperty(FulltextIndexConstants.FULL_TEXT_ENABLED, false);
    nb.setProperty(createProperty(INCLUDE_PROPERTY_NAMES, of("foo"), STRINGS));
    index = builder.child("test").child(INDEX_DEFINITIONS_NAME);
    NodeBuilder nb2 = newLuceneIndexDefinitionV2(index, "lucene", of(TYPENAME_STRING));
    nb2.setProperty(FulltextIndexConstants.FULL_TEXT_ENABLED, false);
    nb2.setProperty(createProperty(INCLUDE_PROPERTY_NAMES, of("foo"), STRINGS));
    NodeState before = builder.getNodeState();
    builder.child("test").setProperty("foo", "fox is jumping");
    NodeState after = builder.getNodeState();
    NodeState indexed = HOOK.processCommit(before, after, CommitInfo.EMPTY);
    tracker.update(indexed);
    QueryIndex.AdvancedQueryIndex queryIndex = new LucenePropertyIndex(tracker);
    FilterImpl filter = createFilter(NT_BASE);
    filter.restrictPath("/test", Filter.PathRestriction.EXACT);
    filter.restrictProperty("foo", Operator.EQUAL, PropertyValues.newString("bar"));
    builder = indexed.builder();
    NodeBuilder dir = builder.child("oak:index").child("lucene").child(":data");
    // Mutate the blob to fail on access i.e. create corrupt index
    List<Blob> blobs = new ArrayList<Blob>();
    Blob b = dir.child("segments_1").getProperty(JCR_DATA).getValue(Type.BINARY, 0);
    FailingBlob fb = new FailingBlob(IOUtils.toByteArray(b.getNewStream()));
    blobs.add(fb);
    dir.child("segments_1").setProperty(JCR_DATA, blobs, BINARIES);
    indexed = builder.getNodeState();
    tracker.update(indexed);
    List<IndexPlan> list = queryIndex.getPlans(filter, null, indexed);
    assertEquals("There must be only one plan", 1, list.size());
    IndexPlan plan = list.get(0);
    assertEquals("Didn't get the expected plan", "/test/oak:index/lucene", plan.getPlanName());
}
