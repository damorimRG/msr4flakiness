@Test
void loadPropertiesThenProfilePropertiesActivatedInSpringApplication() {
    // This should be the effect of calling
    // SpringApplication.setAdditionalProfiles("other")
    this.environment.setActiveProfiles("other");
    this.initializer.postProcessEnvironment(this.environment, this.application);
    String property = this.environment.getProperty("my.property");
    // The "other" profile is activated in SpringApplication so it should take
    // precedence over the default profile
    assertThat(property).isEqualTo("fromotherpropertiesfile");
}
