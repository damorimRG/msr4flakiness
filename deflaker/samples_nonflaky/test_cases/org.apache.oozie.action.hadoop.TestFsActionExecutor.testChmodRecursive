public void testChmodRecursive() throws Exception {
    FsActionExecutor ae = new FsActionExecutor();
    FileSystem fs = getFileSystem();
    Path path = new Path(getFsTestCaseDir(), "dir");
    Path child = new Path(path, "child");
    Path grandchild = new Path(child, "grandchild");
    fs.mkdirs(grandchild);
    fs.setPermission(path, FsPermission.valueOf("-rwx------"));
    fs.setPermission(child, FsPermission.valueOf("-rwxr-----"));
    fs.setPermission(grandchild, FsPermission.valueOf("-rwx---r--"));
    assertEquals("rwx------", fs.getFileStatus(path).getPermission().toString());
    assertEquals("rwxr-----", fs.getFileStatus(child).getPermission().toString());
    assertEquals("rwx---r--", fs.getFileStatus(grandchild).getPermission().toString());
    Context context = createContext("<fs/>");
    ae.chmod(context, path, "-rwx-----x", false, false);
    assertEquals("rwx-----x", fs.getFileStatus(path).getPermission().toString());
    assertEquals("rwxr-----", fs.getFileStatus(child).getPermission().toString());
    assertEquals("rwx---r--", fs.getFileStatus(grandchild).getPermission().toString());
    ae.chmod(context, path, "-rwx-----x", false, true);
    assertEquals("rwx-----x", fs.getFileStatus(path).getPermission().toString());
    assertEquals("rwxr-----", fs.getFileStatus(child).getPermission().toString());
    assertEquals("rwx---r--", fs.getFileStatus(grandchild).getPermission().toString());
    ae.chmod(context, path, "-rwxr----x", true, true);
    assertEquals("rwxr----x", fs.getFileStatus(path).getPermission().toString());
    assertEquals("rwxr----x", fs.getFileStatus(child).getPermission().toString());
    assertEquals("rwxr----x", fs.getFileStatus(grandchild).getPermission().toString());
}
