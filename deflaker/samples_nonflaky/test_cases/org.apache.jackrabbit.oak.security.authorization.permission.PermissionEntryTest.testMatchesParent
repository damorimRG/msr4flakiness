@Test
public void testMatchesParent() {
    // the entry matchesParent if the parent of the path to be evaluated is equal or a descendant of the entry-path
    // and the pattern evaluates to true (which is always the case here)
    when(pattern.matches(anyString())).thenReturn(true);
    assertTrue(entryWithNonEmptyPattern.matchesParent(path));
    assertTrue(entryWithNonEmptyPattern.matchesParent(PathUtils.concat(path, "parent", "of", "target")));
    assertFalse(entryWithNonEmptyPattern.matchesParent(PathUtils.getParentPath(path)));
    assertFalse(entryWithNonEmptyPattern.matchesParent("/another/path"));
    // pattern doesn't match => always false
    when(pattern.matches(anyString())).thenReturn(false);
    assertFalse(entryWithNonEmptyPattern.matchesParent(path));
    assertFalse(entryWithNonEmptyPattern.matchesParent(PathUtils.concat(path, "parent", "of", "target")));
    assertFalse(entryWithNonEmptyPattern.matchesParent(PathUtils.getParentPath(path)));
    assertFalse(entryWithNonEmptyPattern.matchesParent("/another/path"));
}
