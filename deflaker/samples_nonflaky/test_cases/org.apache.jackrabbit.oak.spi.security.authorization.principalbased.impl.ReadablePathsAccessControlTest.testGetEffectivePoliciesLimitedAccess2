@Test
public void testGetEffectivePoliciesLimitedAccess2() throws Exception {
    String path = readablePaths.next();
    setupPrincipalBasedAccessControl(testPrincipal, path, PrivilegeConstants.JCR_READ_ACCESS_CONTROL);
    // default: grant read-ac at root node as nodetype/namespace roots cannot have their mixin changed
    addDefaultEntry(PathUtils.ROOT_PATH, testPrincipal, PrivilegeConstants.JCR_READ_ACCESS_CONTROL);
    root.commit();
    // test-session can read-ac at readable path but cannot access principal-based policy
    try (ContentSession cs = Subject.doAsPrivileged(getTestSubject(), (PrivilegedExceptionAction<ContentSession>) () -> getContentRepository().login(null, null), null)) {
        PrincipalBasedAccessControlManager testAcMgr = new PrincipalBasedAccessControlManager(getMgrProvider(cs.getLatestRoot()), getFilterProvider());
        Set<AccessControlPolicy> effective = ImmutableSet.copyOf(testAcMgr.getEffectivePolicies(path));
        assertEquals(1, effective.size());
        assertTrue(effective.contains(ReadPolicy.INSTANCE));
    }
}
