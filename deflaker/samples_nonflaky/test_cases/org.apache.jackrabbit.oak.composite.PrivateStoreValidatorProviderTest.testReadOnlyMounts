@Test
public void testReadOnlyMounts() throws Exception {
    // default mount info provider to setup some content
    setUp();
    ContentSession s = repository.login(null, null);
    Root r = s.getLatestRoot();
    Tree t = r.getTree("/").addChild("content");
    t.addChild("node1").setProperty("jcr:primaryType", "nt:base");
    Tree readonlyRoot = t.addChild("readonly");
    readonlyRoot.setProperty("jcr:primaryType", "nt:base");
    readonlyRoot.addChild("readonlyChild").setProperty("jcr:primaryType", "nt:base");
    r.commit();
    // register a different mount info provider
    configureMountInfoProvider("/content/readonly");
    // commits under /content/readonly should now fail
    s = repository.login(null, null);
    // changes that are not under the read-only mount should work
    r = s.getLatestRoot();
    t = r.getTree("/").addChild("content");
    t.addChild("node2").setProperty("jcr:primaryType", "nt:base");
    r.commit();
    // changes under the read-only mount should fail
    readonlyRoot = t.getChild("readonly");
    readonlyRoot.setProperty("testProp", "test");
    try {
        r.commit();
        Assert.fail("Commit to read-only mount should fail!");
    } catch (CommitFailedException ignore) {
    }
    r.refresh();
    readonlyRoot = t.getChild("readonly");
    readonlyRoot.getChild("readonlyChild").remove();
    try {
        r.commit();
        Assert.fail("Commit to read-only mount should fail!");
    } catch (CommitFailedException ignore) {
    }
}
