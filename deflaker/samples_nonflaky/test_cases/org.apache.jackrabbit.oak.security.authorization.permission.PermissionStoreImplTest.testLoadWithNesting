@Test
public void testLoadWithNesting() throws Exception {
    try {
        Tree everyoneTree = getPermissionRoot(EveryonePrincipal.NAME);
        everyoneTree.removeProperty(REP_NUM_PERMISSIONS);
        for (Tree child : everyoneTree.getChildren()) {
            if (child.hasProperty(REP_ACCESS_CONTROLLED_PATH)) {
                Tree collision = TreeUtil.addChild(child, "c_" + child.getName(), NT_REP_PERMISSION_STORE);
                collision.setProperty(REP_ACCESS_CONTROLLED_PATH, "/another/path");
                Tree entry = TreeUtil.addChild(collision, "1", NT_REP_PERMISSIONS);
                entry.setProperty(PrivilegeBits.BUILT_IN.get(REP_READ_NODES).asPropertyState(REP_PRIVILEGE_BITS));
                entry.setProperty(REP_IS_ALLOW, false);
                break;
            }
        }
        PrincipalPermissionEntries entries = permissionStore.load(EveryonePrincipal.NAME);
        assertNotNull(entries);
        assertTrue(entries.isFullyLoaded());
        assertEquals(3, entries.getSize());
    } finally {
        root.refresh();
    }
}
