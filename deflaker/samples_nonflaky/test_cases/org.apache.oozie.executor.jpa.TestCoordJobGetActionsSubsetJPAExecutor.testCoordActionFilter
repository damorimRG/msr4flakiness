// Check status filters for Coordinator actions
public void testCoordActionFilter() throws Exception {
    CoordinatorJobBean job = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, false, false);
    // Add Coordinator action with nominal time: 2009-12-15T01:00Z
    addRecordToCoordActionTable(job.getId(), 1, CoordinatorAction.Status.RUNNING, "coord-action-get.xml", 0);
    // Add Coordinator action with nominal time: 2009-02-01T23:59Z
    addRecordToCoordActionTable(job.getId(), 2, CoordinatorAction.Status.WAITING, "coord-action-get.xml", 0);
    // Create lists for status filter to test positive filter
    Map<Pair<String, FILTER_COMPARATORS>, List<Object>> filterMap = new HashMap<Pair<String, FILTER_COMPARATORS>, List<Object>>();
    List<Object> positiveFilter = new ArrayList<Object>();
    positiveFilter.add("RUNNING");
    positiveFilter.add("KILLED");
    filterMap.put(POSITIVE_STATUS_FILTER, positiveFilter);
    List<CoordinatorActionBean> actions = _testGetActionsSubsetFilter(job.getId(), 1, filterMap, 1, 2);
    assertEquals(actions.size(), 1);
    assertEquals(actions.get(0).getActionNumber(), 1);
    // Create lists for status filter to test negative filter
    filterMap.clear();
    List<Object> negativeFilter = new ArrayList<Object>();
    negativeFilter.add("WAITING");
    negativeFilter.add("KILLED");
    filterMap.put(NEGATIVE_STATUS_FILTER, negativeFilter);
    actions = _testGetActionsSubsetFilter(job.getId(), 1, filterMap, 1, 2);
    assertEquals(actions.size(), 1);
    assertEquals(actions.get(0).getActionNumber(), 1);
    // Test Combination of include/exclude filters - no dup
    filterMap.clear();
    filterMap.put(POSITIVE_STATUS_FILTER, positiveFilter);
    filterMap.put(NEGATIVE_STATUS_FILTER, negativeFilter);
    actions = _testGetActionsSubsetFilter(job.getId(), 1, filterMap, 1, 2);
    assertEquals(actions.size(), 1);
    assertEquals(actions.get(0).getActionNumber(), 1);
    // Test Combination of include/exclude filters - dup --> no result
    filterMap.clear();
    filterMap.put(POSITIVE_STATUS_FILTER, positiveFilter);
    filterMap.put(NEGATIVE_STATUS_FILTER, positiveFilter);
    actions = _testGetActionsSubsetFilter(job.getId(), 1, filterMap, 1, 2);
    assertEquals(actions.size(), 0);
}
