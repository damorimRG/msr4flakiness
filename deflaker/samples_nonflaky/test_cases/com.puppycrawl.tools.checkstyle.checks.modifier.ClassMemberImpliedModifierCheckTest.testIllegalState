@Test
public void testIllegalState() {
    final DetailAstImpl init = new DetailAstImpl();
    init.setType(TokenTypes.STATIC_INIT);
    final DetailAstImpl objBlock = new DetailAstImpl();
    objBlock.setType(TokenTypes.OBJBLOCK);
    objBlock.addChild(init);
    final DetailAstImpl interfaceAst = new DetailAstImpl();
    interfaceAst.setType(TokenTypes.CLASS_DEF);
    interfaceAst.addChild(objBlock);
    final ClassMemberImpliedModifierCheck check = new ClassMemberImpliedModifierCheck();
    try {
        check.visitToken(init);
        fail("IllegalStateException is expected");
    } catch (IllegalStateException ex) {
        assertEquals(init.toString(), ex.getMessage(), "Error message is unexpected");
    }
}
