@Test
public void timeoutsUpdatedOnReusedConnections() throws Exception {
    server.enqueue(new MockResponse().setBody("abc"));
    server.enqueue(new MockResponse().setBody("def").throttleBody(1, 750, TimeUnit.MILLISECONDS));
    // First request: time out after 1000ms.
    client = client.newBuilder().readTimeout(1000, TimeUnit.MILLISECONDS).build();
    executeSynchronously("/a").assertBody("abc");
    // Second request: time out after 250ms.
    client = client.newBuilder().readTimeout(250, TimeUnit.MILLISECONDS).build();
    Request request = new Request.Builder().url(server.url("/b")).build();
    Response response = client.newCall(request).execute();
    BufferedSource bodySource = response.body().source();
    assertThat(bodySource.readByte()).isEqualTo((byte) 'd');
    // The second byte of this request will be delayed by 750ms so we should time out after 250ms.
    long startNanos = System.nanoTime();
    try {
        bodySource.readByte();
        fail();
    } catch (IOException expected) {
        // Timed out as expected.
        long elapsedNanos = System.nanoTime() - startNanos;
        long elapsedMillis = TimeUnit.NANOSECONDS.toMillis(elapsedNanos);
        assertThat(elapsedMillis).isLessThan(500);
    } finally {
        bodySource.close();
    }
}
