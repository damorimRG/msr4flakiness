@Test
public void testRemove4() throws Exception {
    Privilege[] rmChildNodes = privilegesFromName(Privilege.JCR_REMOVE_CHILD_NODES);
    Privilege[] rmNode = privilegesFromName(Privilege.JCR_REMOVE_NODE);
    // add 'remove_child_nodes' privilege at 'path'...
    allow(path, rmChildNodes);
    // ... and add 'remove_node' privilege at 'childNPath'
    allow(childNPath, rmNode);
    /*
         expected result:
         - remove not allowed for node at path
         - remove-permission present for node at childNPath
         - both remove_node and remove_childNodes privilege present at childNPath
         */
    assertFalse(testSession.hasPermission(path, javax.jcr.Session.ACTION_REMOVE));
    assertTrue(testSession.hasPermission(childNPath, javax.jcr.Session.ACTION_REMOVE));
    assertTrue(testAcMgr.hasPrivileges(childNPath, new Privilege[] { rmChildNodes[0], rmNode[0] }));
    testSession.getNode(childNPath).remove();
    testSession.save();
}
