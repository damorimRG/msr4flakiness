@Test
public // see OAK-8566
void testUncleanStopWithEmptyArchive() throws URISyntaxException, IOException, InvalidFileStoreVersionException, CommitFailedException, StorageException {
    AzurePersistence p = new AzurePersistence(container.getDirectoryReference("oak"));
    FileStore fs = FileStoreBuilder.fileStoreBuilder(new File("target")).withCustomPersistence(p).build();
    SegmentNodeStore segmentNodeStore = SegmentNodeStoreBuilders.builder(fs).build();
    NodeBuilder builder = segmentNodeStore.getRoot().builder();
    builder.setProperty("foo", "bar");
    segmentNodeStore.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);
    fs.close();
    // make sure there are 2 archives
    fs = FileStoreBuilder.fileStoreBuilder(new File("target")).withCustomPersistence(p).build();
    segmentNodeStore = SegmentNodeStoreBuilders.builder(fs).build();
    builder = segmentNodeStore.getRoot().builder();
    builder.setProperty("foo2", "bar2");
    segmentNodeStore.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);
    fs.close();
    // remove the segment 0000 from the second archive
    ListBlobItem segment0000 = container.listBlobs("oak/data00001a.tar/0000.").iterator().next();
    ((CloudBlob) segment0000).delete();
    container.getBlockBlobReference("oak/data00001a.tar/closed").delete();
    fs = FileStoreBuilder.fileStoreBuilder(new File("target")).withCustomPersistence(p).build();
    segmentNodeStore = SegmentNodeStoreBuilders.builder(fs).build();
    assertEquals("bar", segmentNodeStore.getRoot().getString("foo"));
    fs.close();
}
