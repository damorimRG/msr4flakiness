@Test
public void process() throws Throwable {
    ExtractedTextCache cache = new ExtractedTextCache(0, 0, false, null);
    try {
        cache.process("test", new Callable<Void>() {

            @Override
            public Void call() throws Exception {
                throw new OutOfMemoryError();
            }
        });
        fail();
    } catch (OutOfMemoryError e) {
    // expected
    }
    assertEquals(0, cache.getStatsMBean().getTimeoutCount());
    cache.setExtractionTimeoutMillis(10);
    long time = System.currentTimeMillis();
    try {
        cache.process("test", new Callable<Void>() {

            @Override
            public Void call() throws Exception {
                // this happens in the background, so doesn't block the test
                Thread.sleep(10000);
                return null;
            }
        });
        fail();
    } catch (TimeoutException e) {
    // expected
    }
    time = System.currentTimeMillis() - time;
    assertTrue("" + time, time < 5000);
    assertEquals(1, cache.getStatsMBean().getTimeoutCount());
}
