@Test
public void testWithoutProcessJavadoc() throws Exception {
    final DefaultConfiguration checkConfig = createModuleConfig(UnusedImportsCheck.class);
    checkConfig.addAttribute("processJavadoc", "false");
    final String[] expected = { "8:16: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.checks." + "imports.unusedimports.InputUnusedImportsBug"), "11:8: " + getCheckMessage(MSG_KEY, "java.lang.String"), "13:8: " + getCheckMessage(MSG_KEY, "java.util.List"), "14:8: " + getCheckMessage(MSG_KEY, "java.util.List"), "17:8: " + getCheckMessage(MSG_KEY, "java.util.Enumeration"), "20:8: " + getCheckMessage(MSG_KEY, "javax.swing.JToggleButton"), "22:8: " + getCheckMessage(MSG_KEY, "javax.swing.BorderFactory"), "27:15: " + getCheckMessage(MSG_KEY, "java.io.File.createTempFile"), // "29:8: Unused import - java.awt.Component.", // Should be detected
    "30:8: " + getCheckMessage(MSG_KEY, "java.awt.Graphics2D"), "31:8: " + getCheckMessage(MSG_KEY, "java.awt.HeadlessException"), "32:8: " + getCheckMessage(MSG_KEY, "java.awt.Label"), "33:8: " + getCheckMessage(MSG_KEY, "java.util.Date"), "34:8: " + getCheckMessage(MSG_KEY, "java.util.Calendar"), "35:8: " + getCheckMessage(MSG_KEY, "java.util.BitSet"), "37:8: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.Checker"), "38:8: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.CheckerTest"), "39:8: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.Definitions"), "40:8: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.checks.imports.unusedimports." + "InputUnusedImports15Extensions"), "41:8: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest"), "42:8: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.PackageNamesLoader"), "43:8: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.DefaultConfiguration"), "44:8: " + getCheckMessage(MSG_KEY, "com.puppycrawl.tools.checkstyle.DefaultLogger") };
    verify(checkConfig, getPath("InputUnusedImports.java"), expected);
}
