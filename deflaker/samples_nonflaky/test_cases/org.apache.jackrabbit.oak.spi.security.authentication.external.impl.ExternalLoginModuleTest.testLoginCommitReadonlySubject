@Test
public void testLoginCommitReadonlySubject() throws Exception {
    when(extIPMgr.getProvider(DEFAULT_IDP_NAME)).thenReturn(new TestIdentityProvider());
    when(syncManager.getSyncHandler("syncHandler")).thenReturn(new DefaultSyncHandler(new DefaultSyncConfigImpl().setName("syncHandler")));
    wb.register(ExternalIdentityProviderManager.class, extIPMgr, Collections.emptyMap());
    wb.register(SyncManager.class, syncManager, Collections.emptyMap());
    Map<String, Object> sharedState = Maps.newHashMap();
    sharedState.put(SHARED_KEY_PRE_AUTH_LOGIN, new PreAuthenticatedLogin(ID_TEST_USER));
    sharedState.put(SHARED_KEY_ATTRIBUTES, Collections.singletonMap("att", "value"));
    CallbackHandler cbh = createCallbackHandler(wb, getContentRepository(), getSecurityProvider(), null);
    Subject readOnly = new Subject(true, Collections.emptySet(), Collections.emptySet(), Collections.emptySet());
    loginModule.initialize(readOnly, cbh, sharedState, ImmutableMap.of(PARAM_IDP_NAME, DEFAULT_IDP_NAME, PARAM_SYNC_HANDLER_NAME, "syncHandler"));
    assertTrue(loginModule.login());
    assertTrue(loginModule.commit());
    root.refresh();
    assertNotNull(getUserManager(root).getAuthorizable(ID_TEST_USER));
    assertTrue(loginModule.logout());
}
