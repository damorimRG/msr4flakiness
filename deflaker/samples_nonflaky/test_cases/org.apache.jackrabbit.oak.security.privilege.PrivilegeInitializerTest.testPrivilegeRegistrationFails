@Test(expected = RuntimeException.class)
public void testPrivilegeRegistrationFails() {
    try {
        NodeState ns = mock(NodeState.class);
        NodeBuilder nb = when(mock(NodeBuilder.class).hasChildNode(JCR_SYSTEM)).thenReturn(true).getMock();
        when(nb.getChildNode(anyString())).thenReturn(nb);
        when(nb.child(anyString())).thenReturn(nb);
        when(nb.getNodeState()).thenReturn(ns);
        Tree t = when(mock(Tree.class).exists()).thenReturn(true).getMock();
        when(t.hasChild(anyString())).thenReturn(true);
        Root r = when(mock(Root.class).getTree(anyString())).thenReturn(t).getMock();
        RootProvider rp = when(mock(RootProvider.class).createSystemRoot(any(NodeStore.class), isNull())).thenReturn(r).getMock();
        PrivilegeInitializer pi = new PrivilegeInitializer(rp);
        pi.initialize(nb);
    } catch (RuntimeException e) {
        assertTrue(e.getCause() instanceof RepositoryException);
        throw e;
    }
}
