@Test
public void testTokenWithExpiredActivityIntervaln() throws Exception {
    // Provide token containing invalid maxInactive value.
    // The token is inactive.
    // The server has maxInactiveInterval configured to -1.(disabled)
    // The server should deny access and expire the token.
    long maxInactives = System.currentTimeMillis() - TOKEN_MAX_INACTIVE_INTERVAL;
    long expires = System.currentTimeMillis() + TOKEN_VALIDITY_SEC;
    _testDoFilterAuthenticationMaxInactiveInterval(maxInactives, -1, expires, // authorized
    false, // newCookie
    false);
    // Provide token containing invalid maxInactive value.
    // The token is inactive.
    // The server has maxInactiveInterval configured to value
    // greater than 0.(enabled)
    // The server should deny access and expire the token.
    maxInactives = System.currentTimeMillis() + TOKEN_MAX_INACTIVE_INTERVAL;
    expires = System.currentTimeMillis() + TOKEN_VALIDITY_SEC;
    _testDoFilterAuthenticationMaxInactiveInterval(maxInactives, -1, expires, // authorized
    true, // newCookie
    false);
}
