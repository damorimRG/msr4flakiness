// Test log duration - in range
public void testNoException_Withrecent() throws Exception {
    File log4jFile = new File(getTestCaseConfDir(), "test-log4j.properties");
    ClassLoader cl = Thread.currentThread().getContextClassLoader();
    InputStream is = cl.getResourceAsStream("test-no-dash-log4j.properties");
    Properties log4jProps = new Properties();
    log4jProps.load(is);
    // prevent conflicts with other tests by changing the log file location
    log4jProps.setProperty("log4j.appender.oozie.File", getTestCaseDir() + "/oozie.log");
    log4jProps.store(new FileOutputStream(log4jFile), "");
    setSystemProperty(XLogService.LOG4J_FILE, log4jFile.getName());
    new Services().init();
    Services.get().getConf().setInt(XLogFilter.MAX_SCAN_DURATION, 10);
    Map<String, String[]> paramMap = new HashMap<String, String[]>();
    String param = XLogUserFilterParam.RECENT_LOG_OFFSET + "=9";
    paramMap.put(RestConstants.LOG_FILTER_OPTION, new String[] { param });
    XLogFilter filter = new XLogFilter(new XLogUserFilterParam(paramMap));
    Date startDate = new Date();
    Date endDate = new Date(startDate.getTime() + 60 * 60 * 1000 * 15);
    try {
        doStreamLog(filter, startDate, endDate);
    } catch (Exception e) {
        fail("should not throw exception");
    }
}
