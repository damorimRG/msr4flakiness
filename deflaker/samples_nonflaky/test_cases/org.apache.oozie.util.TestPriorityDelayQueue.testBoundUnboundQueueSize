@Test
public void testBoundUnboundQueueSize() {
    PriorityDelayQueue<Integer> q = new PriorityDelayQueue<Integer>(1, 1000, TimeUnit.MILLISECONDS, -1);
    assertEquals(1, q.getPriorities());
    assertEquals(-1, q.getMaxSize());
    assertEquals(1000, q.getMaxWait(TimeUnit.MILLISECONDS));
    assertEquals(0, q.size());
    assertTrue(q.offer(new TestQueueElement<Integer>(1)));
    assertEquals(1, q.size());
    assertTrue(q.offer(new TestQueueElement<Integer>(1)));
    assertEquals(2, q.size());
    assertTrue(q.offer(new TestQueueElement<Integer>(1)));
    assertEquals(3, q.size());
    q = new PriorityDelayQueue<Integer>(1, 1000, TimeUnit.MILLISECONDS, 1);
    assertEquals(1, q.getMaxSize());
    assertEquals(0, q.size());
    assertTrue(q.offer(new TestQueueElement<Integer>(1)));
    assertEquals(1, q.size());
    assertFalse(q.offer(new TestQueueElement<Integer>(1)));
    assertEquals(1, q.size());
    assertNotNull(q.poll());
    assertEquals(0, q.size());
    assertTrue(q.offer(new TestQueueElement<Integer>(1)));
    assertEquals(1, q.size());
}
