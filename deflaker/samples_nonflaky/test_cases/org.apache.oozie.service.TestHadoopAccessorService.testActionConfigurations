public void testActionConfigurations() throws Exception {
    Services services = Services.get();
    HadoopAccessorService has = services.get(HadoopAccessorService.class);
    assertNotNull(has);
    XConfiguration conf = has.createActionDefaultConf("jt", "action");
    assertNotNull(conf);
    // Check that the param only in default.xml is still present
    assertEquals("default.bar", conf.get("default.foo"));
    // And a property that is present in one of the conf files in default dir
    assertEquals("default.bus", conf.get("default.car"));
    // Check that a default param is overridden by one of the action config files
    assertEquals("action.bar", conf.get("action.foo"));
    // Check that params from <action-dir>/action/conf files is still present
    assertEquals("action.car", conf.get("action.boo"));
    assertEquals("action.carcar", conf.get("oozie.launcher.action.booboo"));
    /*
            Check precedence - Order of precedence - 0 is the lowest.   Parameters in files of
            lower precedence will be overridden by redefinitions in higher precedence files.

            0 - All files in defaultdir/*.xml (sorted by lexical name)
               Files with names lexically lower have lesser precedence than the following ones.
            1 - default.xml
            2 - All files in actiondir/*.xml (sort by lexical name)
               Files with names lexically lower have lesser precedence than the following ones
            3 - action.xml
         */
    assertEquals("100", conf.get("action.testprop"));
    assertEquals("1", conf.get("default.testprop"));
    assertEquals("org.apache.log4j.ConsoleAppender", conf.get("log4j.appender.oozie"));
    assertEquals("NONE, null", conf.get("log4j.logger.a"));
}
