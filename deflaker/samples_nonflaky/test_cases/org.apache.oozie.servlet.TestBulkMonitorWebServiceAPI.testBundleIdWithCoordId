public void testBundleIdWithCoordId() throws Exception {
    // fetching coord Ids
    JPAService jpaService = Services.get().get(JPAService.class);
    List<String> coordIds = jpaService.execute(new CoordJobsGetFromParentIdJPAExecutor(bundleId, 10));
    // there are 3 coordinators but giving range as only two of them
    final String coordIdsStr = coordIds.get(0) + "," + coordIds.get(1);
    runTest("/v1/jobs", V1JobsServlet.class, false, new Callable<Void>() {

        public Void call() throws Exception {
            // giving range as 2 of the total 3 coordinators
            String bulkRequest = "bundle=" + bundleId + ";coordinators=" + coordIdsStr + ";actionstatus=KILLED";
            JSONArray array = _requestToServer(bulkRequest);
            assertEquals(2, array.size());
            JSONObject jbundle = (JSONObject) ((JSONObject) array.get(0)).get(JsonTags.BULK_RESPONSE_BUNDLE);
            JSONObject jaction1 = (JSONObject) ((JSONObject) array.get(0)).get(JsonTags.BULK_RESPONSE_ACTION);
            JSONObject jaction2 = (JSONObject) ((JSONObject) array.get(1)).get(JsonTags.BULK_RESPONSE_ACTION);
            assertEquals(jaction1.get(JsonTags.COORDINATOR_ACTION_ID), "Coord1@2");
            assertEquals(jaction2.get(JsonTags.COORDINATOR_ACTION_ID), "Coord2@1");
            return null;
        }
    });
}
