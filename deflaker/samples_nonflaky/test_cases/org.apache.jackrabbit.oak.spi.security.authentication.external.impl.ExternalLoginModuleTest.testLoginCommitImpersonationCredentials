@Test
public void testLoginCommitImpersonationCredentials() throws Exception {
    SimpleCredentials sc = new SimpleCredentials(ID_TEST_USER, new char[0]);
    ImpersonationCredentials creds = new ImpersonationCredentials(sc, AuthInfo.EMPTY);
    ExternalIdentityProvider idp = mock(ExternalIdentityProvider.class, withSettings().extraInterfaces(CredentialsSupport.class));
    when(idp.getName()).thenReturn(DEFAULT_IDP_NAME);
    when(idp.authenticate(creds)).thenReturn(new TestIdentityProvider.TestUser(ID_TEST_USER, DEFAULT_IDP_NAME));
    when(((CredentialsSupport) idp).getUserId(any(Credentials.class))).thenReturn(ID_TEST_USER);
    when(((CredentialsSupport) idp).getCredentialClasses()).thenReturn(ImmutableSet.of(ImpersonationCredentials.class));
    Map attr = ImmutableMap.of("attr", "value");
    when(((CredentialsSupport) idp).getAttributes(creds)).thenReturn(attr);
    when(((CredentialsSupport) idp).getAttributes(sc)).thenReturn(Collections.emptyMap());
    when(extIPMgr.getProvider(DEFAULT_IDP_NAME)).thenReturn(idp);
    when(syncManager.getSyncHandler("syncHandler")).thenReturn(new DefaultSyncHandler(new DefaultSyncConfigImpl().setName("syncHandler")));
    wb.register(ExternalIdentityProviderManager.class, extIPMgr, Collections.emptyMap());
    wb.register(SyncManager.class, syncManager, Collections.emptyMap());
    CallbackHandler cbh = createCallbackHandler(wb, getContentRepository(), getSecurityProvider(), creds);
    Subject subject = new Subject();
    loginModule.initialize(subject, cbh, Maps.newHashMap(), ImmutableMap.of(PARAM_IDP_NAME, DEFAULT_IDP_NAME, PARAM_SYNC_HANDLER_NAME, "syncHandler"));
    assertTrue(loginModule.login());
    assertTrue(loginModule.commit());
    AuthInfo authInfo = subject.getPublicCredentials(AuthInfo.class).iterator().next();
    assertNull(authInfo.getAttribute("attr"));
    assertTrue(loginModule.logout());
    assertTrue(subject.getPublicCredentials().isEmpty());
    assertTrue(subject.getPrincipals().isEmpty());
}
