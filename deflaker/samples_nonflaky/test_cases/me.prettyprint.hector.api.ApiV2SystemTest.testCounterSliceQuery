@Test
public void testCounterSliceQuery() {
    String cf = "Counter1";
    // TestCleanupDescriptor cleanup = insertColumns(cf, 1, "testSliceQuery", 4, "testSliceQuery");
    Mutator<String> mutator = createMutator(ko, se);
    for (int i = 0; i < 10; i++) {
        mutator.addCounter("testCounterSliceQuery_key", cf, createCounterColumn("" + i, i));
    }
    mutator.execute();
    // get value
    SliceCounterQuery<String, String> q = createCounterSliceQuery(ko, se, se);
    q.setColumnFamily(cf);
    q.setKey("testCounterSliceQuery_key");
    // try with column name first
    q.setColumnNames("4", "5", "6");
    QueryResult<CounterSlice<String>> r = q.execute();
    assertNotNull(r);
    CounterSlice<String> slice = r.get();
    assertNotNull(slice);
    assertEquals(3, slice.getColumns().size());
    // Test slice.getColumnByName
    assertEquals(4, slice.getColumnByName("4").getValue().longValue());
    assertEquals(5, slice.getColumnByName("5").getValue().longValue());
    assertEquals(6, slice.getColumnByName("6").getValue().longValue());
    // Test slice.getColumns
    List<HCounterColumn<String>> columns = slice.getColumns();
    assertNotNull(columns);
    assertEquals(3, columns.size());
    // Cleanup
    mutator.deleteCounter("testCounterSliceQuery_key", cf, null, se);
    mutator.execute();
}
