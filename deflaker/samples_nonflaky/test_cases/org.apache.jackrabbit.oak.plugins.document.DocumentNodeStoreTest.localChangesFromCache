// OAK-4715
@Test
public void localChangesFromCache() throws Exception {
    final AtomicInteger numQueries = new AtomicInteger();
    DocumentStore store = new MemoryDocumentStore() {

        @NotNull
        @Override
        public <T extends Document> List<T> query(Collection<T> collection, String fromKey, String toKey, int limit) {
            if (collection == Collection.NODES) {
                numQueries.incrementAndGet();
            }
            return super.query(collection, fromKey, toKey, limit);
        }
    };
    DocumentNodeStore ns1 = builderProvider.newBuilder().setClusterId(1).setAsyncDelay(0).setDocumentStore(store).getNodeStore();
    NodeBuilder builder = ns1.getRoot().builder();
    builder.child("node-1");
    merge(ns1, builder);
    ns1.runBackgroundOperations();
    DocumentNodeStore ns2 = builderProvider.newBuilder().setClusterId(2).setAsyncDelay(0).setDocumentStore(store).getNodeStore();
    builder = ns2.getRoot().builder();
    builder.child("node-2");
    merge(ns2, builder);
    ns2.runBackgroundOperations();
    ns1.runBackgroundOperations();
    NodeState before = ns1.getRoot();
    builder = before.builder();
    builder.child("node-1").child("foo").child("bar");
    NodeState after = merge(ns1, builder);
    numQueries.set(0);
    JsopDiff.diffToJsop(before, after);
    assertEquals(0, numQueries.get());
    before = after;
    builder = ns1.getRoot().builder();
    builder.child("node-1").child("foo").child("bar").setProperty("p", 1);
    after = merge(ns1, builder);
    numQueries.set(0);
    JsopDiff.diffToJsop(before, after);
    assertEquals(0, numQueries.get());
    before = after;
    builder = ns1.getRoot().builder();
    builder.child("node-1").child("foo").child("bar").remove();
    after = merge(ns1, builder);
    numQueries.set(0);
    JsopDiff.diffToJsop(before, after);
    assertEquals(0, numQueries.get());
}
