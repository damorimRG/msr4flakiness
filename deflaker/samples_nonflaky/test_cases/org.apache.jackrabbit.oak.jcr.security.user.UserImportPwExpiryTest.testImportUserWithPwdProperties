/**
 * @since Oak 1.1
 */
@Test
public void testImportUserWithPwdProperties() throws Exception {
    // import user
    String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<sv:node sv:name=\"y\" xmlns:mix=\"http://www.jcp.org/jcr/mix/1.0\" xmlns:nt=\"http://www.jcp.org/jcr/nt/1.0\" xmlns:fn_old=\"http://www.w3.org/2004/10/xpath-functions\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:sv=\"http://www.jcp.org/jcr/sv/1.0\" xmlns:rep=\"internal\" xmlns:jcr=\"http://www.jcp.org/jcr/1.0\">" + "   <sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\">" + "      <sv:value>rep:User</sv:value>" + "   </sv:property>" + "   <sv:property sv:name=\"jcr:uuid\" sv:type=\"String\">" + "      <sv:value>41529076-9594-360e-ae48-5922904f345d</sv:value>" + "   </sv:property>" + "   <sv:property sv:name=\"rep:password\" sv:type=\"String\">" + "      <sv:value>pw</sv:value>" + "   </sv:property>" + "   <sv:property sv:name=\"rep:principalName\" sv:type=\"String\">" + "      <sv:value>yPrincipal</sv:value>" + "   </sv:property>" + "   <sv:node sv:name=\"" + UserConstants.REP_PWD + "\">" + "      <sv:property sv:name=\"jcr:primaryType\" sv:type=\"Name\">" + "         <sv:value>" + UserConstants.NT_REP_PASSWORD + "</sv:value>" + "      </sv:property>" + "      <sv:property sv:name=\"" + UserConstants.REP_PASSWORD_LAST_MODIFIED + "\" sv:type=\"Long\">" + "         <sv:value>1404036716000</sv:value>" + "      </sv:property>" + "      <sv:property sv:name=\"customProp\" sv:type=\"String\">" + "         <sv:value>abc</sv:value>" + "      </sv:property>" + "   </sv:node>" + "</sv:node>";
    doImport(USERPATH, xml);
    Authorizable authorizable = getUserManager().getAuthorizable("y");
    Node userNode = getImportSession().getNode(authorizable.getPath());
    assertTrue(userNode.hasNode(UserConstants.REP_PWD));
    Node pwdNode = userNode.getNode(UserConstants.REP_PWD);
    assertTrue(pwdNode.hasProperty(UserConstants.REP_PASSWORD_LAST_MODIFIED));
    assertEquals(1404036716000L, pwdNode.getProperty(UserConstants.REP_PASSWORD_LAST_MODIFIED).getLong());
    assertTrue(pwdNode.hasProperty("customProp"));
    Property custom = pwdNode.getProperty("customProp");
    assertTrue(custom.getDefinition().isProtected());
    assertEquals("abc", custom.getString());
}
