@Test
public void cpCleanupWErrors() throws Exception {
    MemoryNodeStore store = new MemoryNodeStore();
    FaultyIndexEditorProvder provider = new FaultyIndexEditorProvder();
    NodeBuilder builder = store.getRoot().builder();
    createIndexDefinition(builder.child(INDEX_DEFINITIONS_NAME), "rootIndex", true, false, ImmutableSet.of("foo"), null).setProperty(ASYNC_PROPERTY_NAME, "async");
    builder.child("testRoot").setProperty("foo", "abc");
    store.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);
    assertTrue("Expecting no checkpoints", store.listCheckpoints().size() == 0);
    AsyncIndexUpdate async = new AsyncIndexUpdate("async", store, provider);
    async.run();
    assertTrue("Error should have been triggered by the commit", provider.isFailed());
    assertTrue("Expecting no checkpoints", store.listCheckpoints().size() == 0);
    // OAK-3054 failure reports
    AsyncIndexStats stats = async.getIndexStats();
    String since = stats.getFailingSince();
    assertTrue(stats.isFailing());
    assertEquals(1, stats.getConsecutiveFailedExecutions());
    assertEquals(since, stats.getLatestErrorTime());
    TimeUnit.MILLISECONDS.sleep(100);
    async.run();
    assertTrue(stats.isFailing());
    assertEquals(2, stats.getConsecutiveFailedExecutions());
    assertEquals(since, stats.getFailingSince());
    assertNotEquals(since, stats.getLatestErrorTime());
    stats.fixed();
    assertFalse(stats.isFailing());
    assertEquals(0, stats.getConsecutiveFailedExecutions());
    assertEquals("", stats.getFailingSince());
}
