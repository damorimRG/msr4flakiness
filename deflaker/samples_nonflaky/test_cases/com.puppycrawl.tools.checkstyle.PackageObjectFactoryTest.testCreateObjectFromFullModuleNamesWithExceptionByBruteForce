@Test
public void testCreateObjectFromFullModuleNamesWithExceptionByBruteForce() {
    final String package1 = BASE_PACKAGE + ".wrong1";
    final String package2 = BASE_PACKAGE + ".wrong2";
    final ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
    final PackageObjectFactory objectFactory = new PackageObjectFactory(new LinkedHashSet<>(Arrays.asList(package1, package2)), classLoader, TRY_IN_ALL_REGISTERED_PACKAGES);
    final String name = "FooCheck";
    final String checkName = name + CHECK_SUFFIX;
    try {
        objectFactory.createModule(name);
        fail("Exception is expected");
    } catch (CheckstyleException ex) {
        final String attemptedNames = package1 + PACKAGE_SEPARATOR + name + STRING_SEPARATOR + package2 + PACKAGE_SEPARATOR + name + STRING_SEPARATOR + checkName + STRING_SEPARATOR + package1 + PACKAGE_SEPARATOR + checkName + STRING_SEPARATOR + package2 + PACKAGE_SEPARATOR + checkName;
        final LocalizedMessage exceptionMessage = new LocalizedMessage(1, Definitions.CHECKSTYLE_BUNDLE, UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE, new String[] { name, attemptedNames }, null, getClass(), null);
        assertEquals(exceptionMessage.getMessage(), ex.getMessage(), "Invalid exception message");
    }
}
