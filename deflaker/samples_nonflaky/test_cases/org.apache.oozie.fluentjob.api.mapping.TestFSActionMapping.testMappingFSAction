@Test
public void testMappingFSAction() {
    final String nameNode = "${nameNode}";
    final ImmutableList<String> jobXmls = new ImmutableList.Builder<String>().add("jobXml1").add("jobXml2").build();
    final Delete delete = new Delete("path", true);
    final Mkdir mkdir = new Mkdir("path");
    final Move move = new Move("from", "to");
    final Chmod chmod = new ChmodBuilder().withPermissions("511").build();
    final Touchz touchz = new Touchz("path");
    final Chgrp chgrp = new ChgrpBuilder().withGroup("user:group:").build();
    final FSActionBuilder builder = FSActionBuilder.create().withNameNode(nameNode);
    for (final String jobXml : jobXmls) {
        builder.withJobXml(jobXml);
    }
    builder.withDelete(delete).withMkdir(mkdir).withMove(move).withChmod(chmod).withTouchz(touchz).withChgrp(chgrp);
    final FSAction action = builder.build();
    final FS fsAction = DozerBeanMapperSingleton.instance().map(action, FS.class);
    assertEquals(nameNode, fsAction.getNameNode());
    assertEquals(jobXmls, fsAction.getJobXml());
    final List<Object> expectedList = Arrays.asList(delete, mkdir, move, chmod, touchz, chgrp);
    assertEquals(expectedList.size(), fsAction.getDeleteOrMkdirOrMove().size());
}
