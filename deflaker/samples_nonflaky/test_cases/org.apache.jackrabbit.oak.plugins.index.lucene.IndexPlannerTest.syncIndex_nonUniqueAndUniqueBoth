/**
 * If both non unique and unique indexes are found then unique should be picked
 */
@Test
public void syncIndex_nonUniqueAndUniqueBoth() throws Exception {
    IndexDefinitionBuilder defnb = new IndexDefinitionBuilder();
    defnb.indexRule("nt:base").property("foo").propertyIndex().unique();
    defnb.indexRule("nt:base").property("bar").propertyIndex().sync();
    LuceneIndexDefinition defn = new LuceneIndexDefinition(root, defnb.build(), "/foo");
    LuceneIndexNode node = createIndexNode(defn, 100);
    FilterImpl filter = createFilter("nt:base");
    filter.restrictProperty("foo", Operator.EQUAL, PropertyValues.newString("bar"));
    filter.restrictProperty("bar", Operator.EQUAL, PropertyValues.newString("foo"));
    FulltextIndexPlanner planner = new FulltextIndexPlanner(node, "/foo", filter, Collections.<OrderEntry>emptyList());
    QueryIndex.IndexPlan plan = planner.getPlan();
    assertNotNull(plan);
    assertEquals(1, plan.getEstimatedEntryCount());
    PropertyIndexResult hr = pr(plan).getPropertyIndexResult();
    assertNotNull(hr);
    assertEquals("foo", hr.propertyName);
    assertEquals("foo", hr.pr.propertyName);
}
