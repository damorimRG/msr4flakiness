@Test
public void testMembershipChange() throws Exception {
    PrincipalProvider pp = createPrincipalProvider(systemRoot);
    // set of principals that read from user + membership-provider.
    Set<? extends Principal> principals = pp.getPrincipals(userId);
    // change group membership with a different root
    UserManager uMgr = getUserManager(root);
    Group gr = uMgr.getAuthorizable(groupId, Group.class);
    assertTrue(gr.removeMember(uMgr.getAuthorizable(userId)));
    root.commit();
    systemRoot.refresh();
    // system-principal provider must still see the principals from the cache (not the changed onces)
    Set<? extends Principal> principalsAgain = pp.getPrincipals(userId);
    assertEquals(principals, principalsAgain);
    // disable the cache again
    changeUserConfiguration(ConfigurationParameters.EMPTY);
    pp = createPrincipalProvider(systemRoot);
    // now group principals must no longer be retrieved from the cache
    assertPrincipals(pp.getPrincipals(userId), EveryonePrincipal.getInstance(), getTestUser().getPrincipal());
}
