@Test
public void testExpiry() throws Exception {
    final PoolEntry<String, HttpConnection> entry1 = new PoolEntry<>("route1", TimeValue.ZERO_MILLISECONDS, currentTimeSupplier);
    entry1.assignConnection(Mockito.mock(HttpConnection.class));
    Assert.assertEquals(Deadline.MAX_VALUE, entry1.getExpiryDeadline());
    entry1.updateExpiry(TimeValue.of(50L, TimeUnit.MILLISECONDS));
    Assert.assertEquals(entry1.getUpdated() + 50L, entry1.getExpiryDeadline().getValue());
    entry1.updateExpiry(TimeValue.ZERO_MILLISECONDS);
    Assert.assertEquals(Deadline.MAX_VALUE, entry1.getExpiryDeadline());
    final PoolEntry<String, HttpConnection> entry2 = new PoolEntry<>("route1", TimeValue.of(100L, TimeUnit.MILLISECONDS), currentTimeSupplier);
    entry2.assignConnection(Mockito.mock(HttpConnection.class));
    final Deadline validityDeadline = entry2.getValidityDeadline();
    Assert.assertEquals(entry2.getUpdated() + 100L, entry2.getExpiryDeadline().getValue());
    entry2.updateExpiry(TimeValue.of(50L, TimeUnit.MILLISECONDS));
    Assert.assertEquals(entry2.getUpdated() + 50L, entry2.getExpiryDeadline().getValue());
    entry2.updateExpiry(TimeValue.of(150L, TimeUnit.MILLISECONDS));
    Assert.assertEquals(validityDeadline, entry2.getExpiryDeadline());
}
