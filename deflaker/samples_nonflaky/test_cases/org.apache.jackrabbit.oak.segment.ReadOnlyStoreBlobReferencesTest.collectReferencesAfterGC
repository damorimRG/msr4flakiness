@Test
public void collectReferencesAfterGC() throws IOException, InvalidFileStoreVersionException, CommitFailedException {
    File fileStoreDir = new File(getFileStoreFolder(), "segmentstore");
    File dataStoreDir = new File(getFileStoreFolder(), "blobstore");
    String blobId = createLoad(fileStoreDir, dataStoreDir).getContentIdentity();
    try (FileStore fileStore = fileStoreBuilder(fileStoreDir).withBlobStore(newBlobStore(dataStoreDir)).withGCOptions(defaultGCOptions().setGcSizeDeltaEstimation(1).setRetainedGenerations(1)).build()) {
        SegmentNodeStore nodeStore = SegmentNodeStoreBuilders.builder(fileStore).build();
        NodeBuilder builder = nodeStore.getRoot().builder();
        builder.removeProperty("bin");
        nodeStore.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);
        fileStore.flush();
        Set<String> actualReferences = newHashSet();
        fileStore.collectBlobReferences(actualReferences::add);
        assertEquals("Binary should be visible before gc cycle", 1, actualReferences.size());
        assertEquals("Binary reference returned should be same", blobId, actualReferences.toArray(new String[0])[0]);
        actualReferences = newHashSet();
        fileStore.fullGC();
        fileStore.collectBlobReferences(actualReferences::add);
        assertEquals("Binary should be deleted after gc cycle", 0, actualReferences.size());
    }
    assertReferences(fileStoreDir, dataStoreDir, 0, null);
}
