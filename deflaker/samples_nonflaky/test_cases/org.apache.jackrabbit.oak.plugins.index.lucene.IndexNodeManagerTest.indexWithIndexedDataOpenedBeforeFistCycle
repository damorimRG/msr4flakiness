@Test
public void indexWithIndexedDataOpenedBeforeFistCycle() throws Exception {
    NodeState nrtIndex = createNRTIndex();
    {
        NodeBuilder indexBuilder = nrtIndex.builder();
        LuceneIndexDefinition indexDefinition = new LuceneIndexDefinition(root, indexBuilder.getNodeState(), "/foo");
        IndexWriterConfig config = IndexWriterUtils.getIndexWriterConfig(indexDefinition, false);
        OakDirectory directory = new OakDirectory(indexBuilder, indexDefinition, false);
        IndexWriter writer = new IndexWriter(directory, config);
        writer.addDocument(newDoc("/content/en").getFields());
        writer.close();
        directory.close();
        nrtIndex = indexBuilder.getNodeState();
    }
    NodeState asyncIndex = nrtIndex.builder().setProperty("async", ImmutableList.of("async"), STRINGS).getNodeState();
    NodeState nonAsyncIndex;
    {
        NodeBuilder builder = nrtIndex.builder();
        builder.removeProperty("async");
        nonAsyncIndex = builder.getNodeState();
    }
    // absent or empty /:async doesn't make sense with already indexed data available.
    // So, we're considering only this case.
    // Fake async indexing cycle done with no data
    builder.child(":async").setProperty("async", "some-random-id");
    root = builder.getNodeState();
    assertNotNull("nrtIndex; fake async cycle run", LuceneIndexNodeManager.open("/foo", root, nrtIndex, readerFactory, nrtFactory));
    assertNotNull("asyncIndex; fake async cycle run", LuceneIndexNodeManager.open("/foo", root, asyncIndex, readerFactory, nrtFactory));
    assertNotNull("nonAsyncIndex; fake async cycle run", LuceneIndexNodeManager.open("/foo", root, nonAsyncIndex, readerFactory, nrtFactory));
}
