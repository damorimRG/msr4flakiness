@Test
void getAccessLevelWhenTokenIsNotValidShouldThrowException() throws Exception {
    prepareResponse((response) -> response.setResponseCode(401));
    StepVerifier.create(this.securityService.getAccessLevel("my-access-token", "my-app-id")).consumeErrorWith((throwable) -> {
        assertThat(throwable).isInstanceOf(CloudFoundryAuthorizationException.class);
        assertThat(((CloudFoundryAuthorizationException) throwable).getReason()).isEqualTo(Reason.INVALID_TOKEN);
    }).verify();
    expectRequest((request) -> {
        assertThat(request.getHeader(HttpHeaders.AUTHORIZATION)).isEqualTo("bearer my-access-token");
        assertThat(request.getPath()).isEqualTo(CLOUD_CONTROLLER_PERMISSIONS);
    });
}
