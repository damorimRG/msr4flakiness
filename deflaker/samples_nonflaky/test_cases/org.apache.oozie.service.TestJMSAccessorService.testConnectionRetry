@Test
public void testConnectionRetry() throws Exception {
    services.destroy();
    services = super.setupServicesForHCatalog();
    int randomPort = 30000 + random.nextInt(10000);
    String brokerURl = "tcp://localhost:" + randomPort;
    Configuration servicesConf = services.getConf();
    servicesConf.set(JMSAccessorService.CONF_RETRY_INITIAL_DELAY, "1");
    servicesConf.set(JMSAccessorService.CONF_RETRY_MAX_ATTEMPTS, "3");
    servicesConf.set(HCatAccessorService.JMS_CONNECTIONS_PROPERTIES, "default=java.naming.factory.initial#" + ActiveMQConnFactory + ";" + "java.naming.provider.url#" + brokerURl + ";" + "connectionFactoryNames#" + "ConnectionFactory");
    services.init();
    HCatAccessorService hcatService = Services.get().get(HCatAccessorService.class);
    JMSAccessorService jmsService = Services.get().get(JMSAccessorService.class);
    String publisherAuthority = "hcat.server.com:5080";
    String topic = "topic.topic1";
    JMSConnectionInfo connInfo = hcatService.getJMSConnectionInfo(new URI("hcat://hcat.server.com:8020"));
    jmsService.registerForNotification(connInfo, topic, new HCatMessageHandler(publisherAuthority));
    assertFalse(jmsService.isListeningToTopic(connInfo, topic));
    assertTrue(jmsService.isConnectionInRetryList(connInfo));
    assertTrue(jmsService.isTopicInRetryList(connInfo, topic));
    // Start the broker and check if listening to topic now
    BrokerService broker = new BrokerService();
    try {
        broker.addConnector(brokerURl);
        broker.setDataDirectory(getTestCaseDir());
        broker.setUseJmx(false);
        broker.start();
        waitFor(JMS_TIMEOUT_MS, new Predicate() {

            @Override
            public boolean evaluate() throws Exception {
                return jmsService.isListeningToTopic(connInfo, topic) && !jmsService.isConnectionInRetryList(connInfo) && !jmsService.isTopicInRetryList(connInfo, topic);
            }
        });
        assertTrue(jmsService.isListeningToTopic(connInfo, topic));
        assertFalse(jmsService.isConnectionInRetryList(connInfo));
        assertFalse(jmsService.isTopicInRetryList(connInfo, topic));
    } finally {
        broker.stop();
    }
}
