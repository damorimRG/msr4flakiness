@Test
public void testFastSize() {
    Iterable<Integer> s;
    PrefetchIterator<Integer> it;
    s = seq(0, 21);
    it = new PrefetchIterator<Integer>(s.iterator(), new PrefetchOptions() {

        {
            size = -1;
            fastSize = true;
            fastSizeCallback = new Result() {

                @Override
                public String[] getColumnNames() {
                    return null;
                }

                @Override
                public String[] getColumnSelectorNames() {
                    return null;
                }

                @Override
                public Iterable<? extends ResultRow> getRows() {
                    return null;
                }

                @Override
                public String[] getSelectorNames() {
                    return null;
                }

                @Override
                public long getSize() {
                    return 100;
                }

                @Override
                public long getSize(SizePrecision precision, long max) {
                    return 100;
                }
            };
        }
    });
    assertEquals(21, it.size());
}
