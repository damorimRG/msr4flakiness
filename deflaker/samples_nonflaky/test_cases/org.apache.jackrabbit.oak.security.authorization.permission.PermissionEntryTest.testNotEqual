@Test
public void testNotEqual() {
    // path different
    assertNotEquals(entry, new PermissionEntry("/", entry.isAllow, index, entry.privilegeBits, entry.restriction));
    assertNotEquals(entry, new PermissionEntry("/path2", entry.isAllow, index, entry.privilegeBits, entry.restriction));
    // isAllow different
    assertNotEquals(entry, new PermissionEntry(path, !entry.isAllow, index, entry.privilegeBits, entry.restriction));
    // index different
    assertNotEquals(entry, new PermissionEntry(path, entry.isAllow, 2, entry.privilegeBits, entry.restriction));
    // privbits different
    assertNotEquals(entry, new PermissionEntry(path, entry.isAllow, index, PrivilegeBits.BUILT_IN.get(PrivilegeConstants.JCR_READ), entry.restriction));
    // restrictions different
    assertNotEquals(entry, new PermissionEntry(path, entry.isAllow, index, entry.privilegeBits, mock(RestrictionPattern.class)));
    assertFalse(entry.equals(null));
}
