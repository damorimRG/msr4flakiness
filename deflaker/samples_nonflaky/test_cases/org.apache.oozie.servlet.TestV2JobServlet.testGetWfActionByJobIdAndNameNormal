// test normal request
public void testGetWfActionByJobIdAndNameNormal() throws Exception {
    runTest("/v2/job/*", V2JobServlet.class, IS_SECURITY_ENABLED, new Callable<Void>() {

        @Override
        public Void call() throws Exception {
            MockCoordinatorEngineService.reset();
            Map<String, String> params = new HashMap<String, String>();
            params = new HashMap<String, String>();
            params.put(RestConstants.JOB_SHOW_PARAM, RestConstants.JOB_SHOW_WF_ACTIONS_IN_COORD);
            params.put(RestConstants.OFFSET_PARAM, "2");
            params.put(RestConstants.LEN_PARAM, "2");
            params.put(RestConstants.ACTION_NAME_PARAM, "actionTest");
            URL url = createURL(MockCoordinatorEngineService.JOB_ID + 1, params);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode());
            assertTrue(conn.getHeaderField("content-type").startsWith(RestConstants.JSON_CONTENT_TYPE));
            JSONObject obj = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8));
            assertEquals(MockCoordinatorEngineService.JOB_ID + 1, obj.get(JsonTags.COORDINATOR_JOB_ID));
            assertEquals(RestConstants.JOB_SHOW_WF_ACTIONS_IN_COORD, MockCoordinatorEngineService.did);
            assertEquals(MockCoordinatorEngineService.offset.intValue(), 2);
            assertEquals(MockCoordinatorEngineService.length.intValue(), 2);
            JSONArray coordWfActions = (JSONArray) obj.get(JsonTags.COORDINATOR_WF_ACTIONS);
            assertEquals(coordWfActions.size(), 3);
            for (int i = 0; i < coordWfActions.size(); i++) {
                JSONObject coordWfAction = (JSONObject) coordWfActions.get(i);
                JSONObject wfAction = (JSONObject) coordWfAction.get(JsonTags.COORDINATOR_WF_ACTION);
                if (i == (coordWfActions.size() - 1)) {
                    assertEquals(null, wfAction);
                    String nullReason = CoordinatorWfAction.NullReason.ACTION_NULL.getNullReason("actionTest2", "wf1");
                    assertEquals(nullReason, coordWfAction.get(JsonTags.COORDINATOR_WF_ACTION_NULL_REASON));
                } else {
                    assertEquals("actionTest", wfAction.get(JsonTags.WORKFLOW_ACTION_NAME));
                }
            }
            return null;
        }
    });
}
