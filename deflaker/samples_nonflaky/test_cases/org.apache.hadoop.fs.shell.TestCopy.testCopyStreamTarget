@Test
public void testCopyStreamTarget() throws Exception {
    FSDataOutputStream out = mock(FSDataOutputStream.class);
    whenFsCreate().thenReturn(out);
    when(mockFs.getFileStatus(eq(tmpPath))).thenReturn(fileStat);
    when(mockFs.rename(eq(tmpPath), eq(path))).thenReturn(true);
    FSInputStream in = mock(FSInputStream.class);
    when(in.read(any(byte[].class), anyInt(), anyInt())).thenReturn(-1);
    tryCopyStream(in, true);
    verify(in).close();
    verify(out, times(2)).close();
    // no data was written.
    verify(out, never()).write(any(byte[].class), anyInt(), anyInt());
    verify(mockFs, never()).delete(eq(path), anyBoolean());
    verify(mockFs).rename(eq(tmpPath), eq(path));
    verify(mockFs, never()).delete(eq(tmpPath), anyBoolean());
    verify(mockFs, never()).close();
    // temp path never had is existence checked. This is critical for S3 as it
    // avoids the successful path accidentally getting a 404 into the S3 load
    // balancer cache
    verify(mockFs, never()).exists(eq(tmpPath));
    verify(mockFs, never()).exists(eq(path));
}
