@Test
void testParseMinimalConfiguration() throws Exception {
    HttpConnectorFactory http = new YamlConfigurationFactory<>(HttpConnectorFactory.class, validator, objectMapper, "dw").build(new File(Resources.getResource("yaml/http-connector-minimal.yml").toURI()));
    assertThat(http.getPort()).isEqualTo(8080);
    assertThat(http.getBindHost()).isNull();
    assertThat(http.isInheritChannel()).isEqualTo(false);
    assertThat(http.getHeaderCacheSize()).isEqualTo(DataSize.bytes(512));
    assertThat(http.getOutputBufferSize()).isEqualTo(DataSize.kibibytes(32));
    assertThat(http.getMaxRequestHeaderSize()).isEqualTo(DataSize.kibibytes(8));
    assertThat(http.getMaxResponseHeaderSize()).isEqualTo(DataSize.kibibytes(8));
    assertThat(http.getInputBufferSize()).isEqualTo(DataSize.kibibytes(8));
    assertThat(http.getIdleTimeout()).isEqualTo(Duration.seconds(30));
    assertThat(http.getMinBufferPoolSize()).isEqualTo(DataSize.bytes(64));
    assertThat(http.getBufferPoolIncrement()).isEqualTo(DataSize.bytes(1024));
    assertThat(http.getMaxBufferPoolSize()).isEqualTo(DataSize.kibibytes(64));
    assertThat(http.getMinRequestDataPerSecond()).isEqualTo(DataSize.bytes(0));
    assertThat(http.getMinResponseDataPerSecond()).isEqualTo(DataSize.bytes(0));
    assertThat(http.getAcceptorThreads()).isEmpty();
    assertThat(http.getSelectorThreads()).isEmpty();
    assertThat(http.getAcceptQueueSize()).isNull();
    assertThat(http.isReuseAddress()).isTrue();
    assertThat(http.isUseServerHeader()).isFalse();
    assertThat(http.isUseDateHeader()).isTrue();
    assertThat(http.isUseForwardedHeaders()).isFalse();
    assertThat(http.getHttpCompliance()).isEqualTo(HttpCompliance.RFC7230);
    assertThat(http.getRequestCookieCompliance()).isEqualTo(CookieCompliance.RFC6265);
    assertThat(http.getResponseCookieCompliance()).isEqualTo(CookieCompliance.RFC6265);
}
