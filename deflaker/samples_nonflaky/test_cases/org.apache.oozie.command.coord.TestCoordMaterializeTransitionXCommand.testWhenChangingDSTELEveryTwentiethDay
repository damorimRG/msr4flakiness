public void testWhenChangingDSTELEveryTwentiethDay() throws Exception {
    Date startTime = DateUtils.parseDateOozieTZ("2016-02-01T13:10Z");
    Date endTime = DateUtils.parseDateOozieTZ("2016-12-03T00:00Z");
    Date[] nominalTimesWithTwoDstChange = new Date[] { DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-02-01T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-02-21T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-03-12T05:10")), // DST started
    DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-04-01T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-04-21T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-05-11T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-05-31T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-06-20T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-07-10T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-07-30T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-08-19T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-09-08T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-09-28T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-10-18T05:10")), // DST ended
    DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-11-07T05:10")), DateUtils.parseDateOozieTZ(convertLATimeToUTC("2016-11-27T05:10")) };
    testELNominalTimes(startTime, endTime, nominalTimesWithTwoDstChange, "20", Timeunit.DAY);
}
