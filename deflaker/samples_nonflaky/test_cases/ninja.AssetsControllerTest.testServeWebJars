@Test
public void testServeWebJars() throws Exception {
    AssetsControllerHelper assetsControllerHelper = Mockito.mock(AssetsControllerHelper.class, Mockito.CALLS_REAL_METHODS);
    assetsController = new AssetsController(assetsControllerHelper, httpCacheToolkit, mimeTypes, ninjaProperties);
    Result result = Results.ok();
    when(contextRenderable.getRequestPath()).thenReturn("/webjar_asset.txt");
    when(contextRenderable.finalizeHeadersWithoutFlashAndSessionCookie(Mockito.eq(result))).thenReturn(responseStreams);
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    when(responseStreams.getOutputStream()).thenReturn(byteArrayOutputStream);
    Result result2 = assetsController.serveWebJars();
    Renderable renderable = (Renderable) result2.getRenderable();
    renderable.render(contextRenderable, result);
    verify(contextRenderable).finalizeHeadersWithoutFlashAndSessionCookie(resultCaptor.capture());
    // make sure we get the correct result...
    assertEquals(Result.SC_200_OK, resultCaptor.getValue().getStatusCode());
    assertEquals("webjar_asset", byteArrayOutputStream.toString());
    verify(assetsControllerHelper).normalizePathWithoutLeadingSlash("/webjar_asset.txt", true);
}
