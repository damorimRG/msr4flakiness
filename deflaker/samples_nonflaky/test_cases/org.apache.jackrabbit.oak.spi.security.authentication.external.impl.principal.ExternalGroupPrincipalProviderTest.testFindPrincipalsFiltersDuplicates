@Test
public void testFindPrincipalsFiltersDuplicates() throws Exception {
    ExternalGroup gr = idp.getGroup("a");
    ExternalUser otherUser = new TestUser("anotherUser", ImmutableSet.of(gr.getExternalId()));
    sync(otherUser);
    Set<Principal> expected = new HashSet<>();
    expected.add(new PrincipalImpl(gr.getPrincipalName()));
    long depth = syncConfig.user().getMembershipNestingDepth();
    if (depth > 1) {
        collectExpectedPrincipals(expected, gr.getDeclaredGroups(), --depth);
    }
    Iterator<? extends Principal> res = principalProvider.findPrincipals("a", PrincipalManager.SEARCH_TYPE_ALL);
    assertTrue(res.hasNext());
    assertEquals(expected, ImmutableSet.copyOf(res));
    Iterator<? extends Principal> res2 = principalProvider.findPrincipals("a", false, PrincipalManager.SEARCH_TYPE_ALL, 0, -1);
    assertTrue(res2.hasNext());
    assertEquals(expected, ImmutableSet.copyOf(res2));
}
