@Test
public void invalidExample() throws Exception {
    assertThat(ConstraintViolations.format(validator.validate(new InvalidExample()))).isEmpty();
    assertThat(TestLoggerFactory.getAllLoggingEvents()).containsExactlyInAnyOrder(new LoggingEvent(Level.ERROR, "The method {} is annotated with @SelfValidation but does not have a single parameter of type {}", InvalidExample.class.getMethod("validateFailAdditionalParameters", ViolationCollector.class, int.class), ViolationCollector.class), new LoggingEvent(Level.ERROR, "The method {} is annotated with @SelfValidation but does not return void. It is ignored", InvalidExample.class.getMethod("validateFailReturn", ViolationCollector.class)), new LoggingEvent(Level.ERROR, "The method {} is annotated with @SelfValidation but is not public", InvalidExample.class.getDeclaredMethod("validateFailPrivate", ViolationCollector.class)));
}
