@Test
public void testBasics() throws Exception {
    final ExpandableBuffer buffer = new ExpandableBuffer(16);
    Assert.assertThat(buffer.mode(), CoreMatchers.equalTo(ExpandableBuffer.Mode.INPUT));
    Assert.assertThat(buffer.hasData(), CoreMatchers.equalTo(false));
    buffer.setInputMode();
    buffer.buffer().put(new byte[] { 0, 1, 2, 3, 4, 5 });
    Assert.assertThat(buffer.hasData(), CoreMatchers.equalTo(true));
    Assert.assertThat(buffer.length(), CoreMatchers.equalTo(6));
    Assert.assertThat(buffer.buffer().capacity(), CoreMatchers.equalTo(16));
    Assert.assertThat(buffer.mode(), CoreMatchers.equalTo(ExpandableBuffer.Mode.OUTPUT));
    buffer.setInputMode();
    buffer.buffer().put(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 });
    Assert.assertThat(buffer.length(), CoreMatchers.equalTo(16));
    Assert.assertThat(buffer.buffer().capacity(), CoreMatchers.equalTo(16));
    Assert.assertThat(buffer.mode(), CoreMatchers.equalTo(ExpandableBuffer.Mode.OUTPUT));
    buffer.setInputMode();
    buffer.ensureCapacity(22);
    buffer.buffer().put(new byte[] { 0, 1, 2, 3, 4, 5 });
    Assert.assertThat(buffer.length(), CoreMatchers.equalTo(22));
    Assert.assertThat(buffer.buffer().capacity(), CoreMatchers.equalTo(22));
    Assert.assertThat(buffer.mode(), CoreMatchers.equalTo(ExpandableBuffer.Mode.OUTPUT));
    buffer.clear();
    Assert.assertThat(buffer.mode(), CoreMatchers.equalTo(ExpandableBuffer.Mode.INPUT));
    Assert.assertThat(buffer.hasData(), CoreMatchers.equalTo(false));
    Assert.assertThat(buffer.capacity(), CoreMatchers.equalTo(22));
}
