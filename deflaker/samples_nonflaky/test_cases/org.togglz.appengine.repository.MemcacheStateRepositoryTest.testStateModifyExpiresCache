@Test
public void testStateModifyExpiresCache() throws InterruptedException {
    MemcacheStateRepository repository = new MemcacheStateRepository(delegate);
    // do some lookups
    for (int i = 0; i < 5; i++) {
        assertTrue(repository.getFeatureState(TestFeature.F1).isEnabled());
        Thread.sleep(10);
    }
    assertTrue(ms.contains(repository.key(TestFeature.F1.name())));
    // now modify the feature state
    repository.setFeatureState(new FeatureState(TestFeature.F1, true));
    assertFalse(ms.contains(repository.key(TestFeature.F1.name())));
    // do some lookups
    for (int i = 0; i < 5; i++) {
        assertTrue(repository.getFeatureState(TestFeature.F1).isEnabled());
        Thread.sleep(10);
    }
    assertTrue(ms.contains(repository.key(TestFeature.F1.name())));
    // Check for the correct number of invocations
    Mockito.verify(delegate, Mockito.times(2)).getFeatureState(TestFeature.F1);
    Mockito.verify(delegate).setFeatureState(Mockito.any(FeatureState.class));
    Mockito.verifyNoMoreInteractions(delegate);
}
