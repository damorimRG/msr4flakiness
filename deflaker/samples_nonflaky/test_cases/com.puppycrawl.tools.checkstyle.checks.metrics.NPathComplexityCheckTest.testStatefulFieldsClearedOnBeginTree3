@Test
public void testStatefulFieldsClearedOnBeginTree3() throws Exception {
    final NPathComplexityCheck check = new NPathComplexityCheck();
    final Optional<DetailAST> question = TestUtil.findTokenInAstByPredicate(JavaParser.parseFile(new File(getPath("InputNPathComplexity.java")), JavaParser.Options.WITHOUT_COMMENTS), ast -> ast.getType() == TokenTypes.QUESTION);
    assertTrue(question.isPresent(), "Ast should contain QUESTION");
    assertTrue(TestUtil.isStatefulFieldClearedDuringBeginTree(check, question.get(), "processingTokenEnd", processingTokenEnd -> {
        try {
            return (Integer) TestUtil.getClassDeclaredField(processingTokenEnd.getClass(), "endLineNo").get(processingTokenEnd) == 0 && (Integer) TestUtil.getClassDeclaredField(processingTokenEnd.getClass(), "endColumnNo").get(processingTokenEnd) == 0;
        } catch (IllegalAccessException | NoSuchFieldException ex) {
            throw new IllegalStateException(ex);
        }
    }), "State is not cleared on beginTree");
}
