public void testGetCoordinatorParent() throws Exception {
    JPAService jpaService = Services.get().get(JPAService.class);
    assertNotNull(jpaService);
    HashMap<String, WorkflowJobBean> wflist = new HashMap<String, WorkflowJobBean>();
    CoordinatorJobBean coordJobA = addRecordToCoordJobTable(CoordinatorJob.Status.SUCCEEDED, false, false);
    CoordinatorJobBean coordJobB = addRecordToCoordJobTable(CoordinatorJob.Status.SUCCEEDED, false, false);
    WorkflowJobBean wfJobA1 = addRecordToWfJobTable(WorkflowJob.Status.SUCCEEDED, WorkflowInstance.Status.SUCCEEDED, coordJobA.getId() + "@1");
    WorkflowJobBean wfJobA2 = addRecordToWfJobTable(WorkflowJob.Status.SUCCEEDED, WorkflowInstance.Status.SUCCEEDED, coordJobA.getId() + "@2");
    WorkflowJobBean wfJobB = addRecordToWfJobTable(WorkflowJob.Status.SUCCEEDED, WorkflowInstance.Status.SUCCEEDED, coordJobB.getId() + "@1");
    List<WorkflowJobBean> children = new ArrayList<WorkflowJobBean>();
    children.addAll(jpaService.execute(new WorkflowJobsBasicInfoFromCoordParentIdJPAExecutor(coordJobA.getId(), 10)));
    wflist.put(wfJobA1.getId(), wfJobA1);
    wflist.put(wfJobA2.getId(), wfJobA2);
    checkChildren(children, wflist);
    children = new ArrayList<WorkflowJobBean>();
    children.addAll(jpaService.execute(new WorkflowJobsBasicInfoFromCoordParentIdJPAExecutor(coordJobB.getId(), 10)));
    wflist.clear();
    wflist.put(wfJobB.getId(), wfJobB);
    checkChildren(children, wflist);
}
