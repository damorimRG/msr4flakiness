/**
 * Verifies that a missing mount will result in the node store not being registered
 */
@Test
public void bootstrap_missingMount() {
    MemoryNodeStore mount = new MemoryNodeStore();
    MemoryNodeStore global = new MemoryNodeStore();
    MountInfoProvider mip = Mounts.newBuilder().readOnlyMount("libs", "/libs", "/apps").readOnlyMount("missing", "/missing").build();
    ctx.registerService(MountInfoProvider.class, mip);
    ctx.registerService(StatisticsProvider.class, StatisticsProvider.NOOP);
    ctx.registerService(NodeStoreProvider.class, new SimpleNodeStoreProvider(global), ImmutableMap.of("role", "composite-global", "registerDescriptors", Boolean.TRUE));
    ctx.registerService(NodeStoreProvider.class, new SimpleNodeStoreProvider(mount), ImmutableMap.of("role", "composite-mount-libs"));
    ctx.registerInjectActivateService(new NodeStoreChecksService());
    ctx.registerInjectActivateService(new CompositeNodeStoreService());
    assertThat("NodeStore registered, but it should not have been", ctx.getService(NodeStore.class), nullValue());
}
