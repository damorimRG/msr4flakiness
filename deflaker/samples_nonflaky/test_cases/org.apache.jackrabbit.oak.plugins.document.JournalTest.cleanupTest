@Test
public void cleanupTest() throws Exception {
    DocumentMK mk1 = createMK(0, /* clusterId: 0 => uses clusterNodes collection */
    0);
    DocumentNodeStore ns1 = mk1.getNodeStore();
    // make sure we're visible and marked as active
    ns1.renewClusterIdLease();
    // first clean up
    // OAK-2979 : wait 100ms before doing the cleanup
    Thread.sleep(100);
    jGC(ns1, 1, TimeUnit.MILLISECONDS);
    // sleep just quickly
    Thread.sleep(100);
    assertEquals(0, jGC(ns1, 1, TimeUnit.DAYS));
    assertEquals(0, jGC(ns1, 6, TimeUnit.HOURS));
    assertEquals(0, jGC(ns1, 1, TimeUnit.HOURS));
    assertEquals(0, jGC(ns1, 10, TimeUnit.MINUTES));
    assertEquals(0, jGC(ns1, 1, TimeUnit.MINUTES));
    assertEquals(0, jGC(ns1, 1, TimeUnit.SECONDS));
    assertEquals(0, jGC(ns1, 1, TimeUnit.MILLISECONDS));
    // create some entries that can be deleted thereupon
    mk1.commit("/", "+\"regular1\": {}", null, null);
    mk1.commit("/", "+\"regular2\": {}", null, null);
    mk1.commit("/", "+\"regular3\": {}", null, null);
    mk1.commit("/regular2", "+\"regular4\": {}", null, null);
    // sleep 100millis
    Thread.sleep(100);
    assertEquals(0, jGC(ns1, 5, TimeUnit.SECONDS));
    assertEquals(0, jGC(ns1, 1, TimeUnit.MILLISECONDS));
    ns1.runBackgroundOperations();
    mk1.commit("/", "+\"regular5\": {}", null, null);
    ns1.runBackgroundOperations();
    mk1.commit("/", "+\"regular6\": {}", null, null);
    ns1.runBackgroundOperations();
    // sleep 100millis
    Thread.sleep(100);
    assertEquals(0, jGC(ns1, 5, TimeUnit.SECONDS));
    assertEquals(3, jGC(ns1, 1, TimeUnit.MILLISECONDS));
}
