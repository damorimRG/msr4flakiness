@Test
void validatorWithConfigurerTakesPrecedence() {
    this.contextRunner.withConfiguration(AutoConfigurations.of(ValidationAutoConfiguration.class)).withUserConfiguration(MvcValidator.class).run((context) -> {
        assertThat(context).hasSingleBean(ValidatorFactory.class);
        assertThat(context).hasSingleBean(javax.validation.Validator.class);
        assertThat(context).getBeanNames(Validator.class).containsOnly("defaultValidator", "mvcValidator");
        assertThat(context.getBean("mvcValidator")).isSameAs(context.getBean(MvcValidator.class).validator);
        // Primary Spring validator is the auto-configured one as the MVC one
        // has been customized via a WebMvcConfigurer
        assertThat(context.getBean(Validator.class)).isEqualTo(context.getBean("defaultValidator"));
    });
}
