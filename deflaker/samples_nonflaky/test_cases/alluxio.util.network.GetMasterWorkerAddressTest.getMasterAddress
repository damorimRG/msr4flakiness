/**
 * Tests the
 * {@link NetworkAddressUtils#getConnectAddress(ServiceType, alluxio.conf.AlluxioConfiguration)}
 * method for a master node.
 */
@Test
public void getMasterAddress() {
    InstancedConfiguration conf = ConfigurationTestUtils.defaults();
    // connect host and port
    conf.set(PropertyKey.MASTER_HOSTNAME, "RemoteMaster1");
    conf.set(PropertyKey.MASTER_RPC_PORT, "10000");
    int resolveTimeout = (int) conf.getMs(PropertyKey.NETWORK_HOST_RESOLUTION_TIMEOUT_MS);
    String defaultHostname = NetworkAddressUtils.getLocalHostName(resolveTimeout);
    int defaultPort = Integer.parseInt(PropertyKey.MASTER_RPC_PORT.getDefaultValue());
    InetSocketAddress masterAddress = NetworkAddressUtils.getConnectAddress(ServiceType.MASTER_RPC, conf);
    assertEquals(InetSocketAddress.createUnresolved("RemoteMaster1", 10000), masterAddress);
    conf = ConfigurationTestUtils.defaults();
    // port only
    conf.set(PropertyKey.MASTER_RPC_PORT, "20000");
    masterAddress = NetworkAddressUtils.getConnectAddress(ServiceType.MASTER_RPC, conf);
    assertEquals(InetSocketAddress.createUnresolved(defaultHostname, 20000), masterAddress);
    conf = ConfigurationTestUtils.defaults();
    // connect host only
    conf.set(PropertyKey.MASTER_HOSTNAME, "RemoteMaster3");
    masterAddress = NetworkAddressUtils.getConnectAddress(ServiceType.MASTER_RPC, conf);
    assertEquals(InetSocketAddress.createUnresolved("RemoteMaster3", defaultPort), masterAddress);
    conf = ConfigurationTestUtils.defaults();
    // all default
    masterAddress = NetworkAddressUtils.getConnectAddress(ServiceType.MASTER_RPC, conf);
    assertEquals(InetSocketAddress.createUnresolved(defaultHostname, defaultPort), masterAddress);
}
