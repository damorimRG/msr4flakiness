public void testDryrunInvalidXml() throws Exception {
    Configuration conf = new XConfiguration();
    String workflowUri = getTestCaseFileUri("workflow.xml");
    String appXml = IOUtils.getResourceAsString("wf-loop1-invalid.xml", -1);
    writeToFile(appXml, workflowUri);
    conf.set(OozieClient.APP_PATH, workflowUri);
    conf.set(OozieClient.USER_NAME, getTestUser());
    SubmitXCommand sc = new SubmitXCommand(true, conf);
    try {
        sc.call();
        fail("Should have gotten E0707 because the XML has a loop");
    } catch (CommandException ce) {
        assertEquals(ErrorCode.E0707, ce.getErrorCode());
        assertEquals("E0707: Loop detected at parsing, node [a], path [:start:->a->c->a]", ce.getMessage());
    }
    conf = new XConfiguration();
    appXml = IOUtils.getResourceAsString("wf-transition-invalid.xml", -1);
    writeToFile(appXml, workflowUri);
    conf.set(OozieClient.APP_PATH, workflowUri);
    conf.set(OozieClient.USER_NAME, getTestUser());
    sc = new SubmitXCommand(true, conf);
    try {
        sc.call();
        fail("Should have gotten E0708 because the XML has an invalid transition");
    } catch (CommandException ce) {
        assertEquals(ErrorCode.E0708, ce.getErrorCode());
        assertEquals("E0708: Invalid transition, node [c] transition [f]", ce.getMessage());
    }
    conf = new XConfiguration();
    appXml = IOUtils.getResourceAsString("wf-schema-invalid.xml", -1);
    writeToFile(appXml, workflowUri);
    conf.set(OozieClient.APP_PATH, workflowUri);
    conf.set(OozieClient.USER_NAME, getTestUser());
    sc = new SubmitXCommand(true, conf);
    try {
        sc.call();
        fail("Should have gotten E0701 because the XML has an invalid element");
    } catch (CommandException ce) {
        assertEquals(ErrorCode.E0701, ce.getErrorCode());
        assertTrue(ce.getMessage().contains("XML schema error"));
        assertTrue(ce.getMessage().contains("starting with element 'xstart'"));
        assertTrue(ce.getMessage().contains("'{\"uri:oozie:workflow:0.1\":start}' is expected"));
    }
}
