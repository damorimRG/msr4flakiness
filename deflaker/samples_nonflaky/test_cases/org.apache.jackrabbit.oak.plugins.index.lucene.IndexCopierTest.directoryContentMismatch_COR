@Test
public void directoryContentMismatch_COR() throws Exception {
    Directory baseDir = new CloseSafeDir();
    LuceneIndexDefinition defn = new LuceneIndexDefinition(root, builder.getNodeState(), "/foo");
    IndexCopier copier = new RAMIndexCopier(baseDir, sameThreadExecutor(), getWorkDir(), true);
    Directory remote = new RAMDirectory();
    byte[] t1 = writeFile(remote, "t1");
    byte[] t2 = writeFile(remote, "t2");
    // State of remote directory should set before wrapping as later
    // additions would not be picked up given COW assume remote directory
    // to be read only
    Directory local = copier.wrapForRead("/foo", defn, remote, INDEX_DATA_CHILD_NAME);
    readAndAssert(local, "t1", t1);
    readAndAssert(local, "t2", t2);
    copier.close();
    // 2. Modify the same file in remote directory simulating rollback scenario
    Directory remoteModified = new RAMDirectory();
    t1 = writeFile(remoteModified, "t1");
    // 3. Reopen the copier
    copier = new RAMIndexCopier(baseDir, sameThreadExecutor(), getWorkDir(), true);
    // 4. Post opening local the content should be in sync with remote
    // So t1 should be recreated matching remote
    // t2 should be removed
    local = copier.wrapForRead("/foo", defn, remoteModified, INDEX_DATA_CHILD_NAME);
    readAndAssert(baseDir, "t1", t1);
    assertFalse(baseDir.fileExists("t2"));
}
