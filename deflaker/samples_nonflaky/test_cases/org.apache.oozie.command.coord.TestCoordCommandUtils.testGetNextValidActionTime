public void testGetNextValidActionTime() throws Exception {
    Date startTime = DateUtils.parseDateOozieTZ("2013-07-18T00:00Z");
    Date endTime = DateUtils.parseDateOozieTZ("2013-07-18T01:00Z");
    CoordinatorJobBean job = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, startTime, endTime, "10,20 * * * *");
    Date actionTime = DateUtils.parseDateOozieTZ("2013-07-18T00:15Z");
    Date expectedDate = DateUtils.parseDateOozieTZ("2013-07-18T00:20Z");
    Date retDate = CoordCommandUtils.getNextValidActionTimeForCronFrequency(actionTime, job);
    assertEquals(expectedDate, retDate);
    job = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, startTime, endTime, "10/20 * * 5-7 4,5");
    actionTime = DateUtils.parseDateOozieTZ("2013-07-18T00:15Z");
    expectedDate = DateUtils.parseDateOozieTZ("2013-07-18T00:30Z");
    retDate = CoordCommandUtils.getNextValidActionTimeForCronFrequency(actionTime, job);
    assertEquals(expectedDate, retDate);
    job = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, startTime, endTime, "20-30 * 20 5-7 4,5");
    actionTime = DateUtils.parseDateOozieTZ("2013-07-18T00:20Z");
    expectedDate = DateUtils.parseDateOozieTZ("2013-07-18T00:21Z");
    retDate = CoordCommandUtils.getNextValidActionTimeForCronFrequency(actionTime, job);
    assertEquals(expectedDate, retDate);
    job = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, startTime, endTime, "30 * 20 5-7 ?");
    actionTime = DateUtils.parseDateOozieTZ("2013-07-18T00:20Z");
    expectedDate = DateUtils.parseDateOozieTZ("2013-07-20T00:30Z");
    retDate = CoordCommandUtils.getNextValidActionTimeForCronFrequency(actionTime, job);
    assertEquals(expectedDate, retDate);
    job = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, startTime, endTime, "0 9-16 * * 2-6");
    actionTime = DateUtils.parseDateOozieTZ("2013-07-20T00:20Z");
    expectedDate = DateUtils.parseDateOozieTZ("2013-07-22T09:00Z");
    retDate = CoordCommandUtils.getNextValidActionTimeForCronFrequency(actionTime, job);
    assertEquals(expectedDate, retDate);
    retDate = CoordCommandUtils.getNextValidActionTimeForCronFrequency(retDate, job);
    expectedDate = DateUtils.parseDateOozieTZ("2013-07-22T10:00Z");
    assertEquals(expectedDate, retDate);
    job = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, startTime, endTime, "20-30 * * 1 *");
    actionTime = DateUtils.parseDateOozieTZ("2013-07-18T00:20Z");
    expectedDate = DateUtils.parseDateOozieTZ("2014-01-01T00:20Z");
    retDate = CoordCommandUtils.getNextValidActionTimeForCronFrequency(actionTime, job);
    assertEquals(expectedDate, retDate);
    job = addRecordToCoordJobTable(CoordinatorJob.Status.RUNNING, startTime, endTime, "20-30 10 * * MON,WED");
    actionTime = DateUtils.parseDateOozieTZ("2013-07-18T00:20Z");
    expectedDate = DateUtils.parseDateOozieTZ("2013-07-22T10:20Z");
    retDate = CoordCommandUtils.getNextValidActionTimeForCronFrequency(actionTime, job);
    assertEquals(expectedDate, retDate);
}
