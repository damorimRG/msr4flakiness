@Test
public void journalAttachDb() throws Exception {
    mClusterResource.start();
    LocalAlluxioCluster mCluster = mClusterResource.get();
    TableMaster tableMaster = mCluster.getLocalAlluxioMaster().getMasterProcess().getMaster(TableMaster.class);
    try {
        tableMaster.getDatabase(DB_NAME);
        fail();
    } catch (IOException e) {
        assertEquals("Database " + DB_NAME + " does not exist", e.getMessage());
    }
    tableMaster.attachDatabase(TestUdbFactory.TYPE, "connect", DB_NAME, DB_NAME, Collections.emptyMap());
    assertEquals(DB_NAME, tableMaster.getDatabase(DB_NAME).getDbName());
    List<String> oldTableNames = tableMaster.getAllTables(DB_NAME);
    Table tableOld = tableMaster.getTable(DB_NAME, oldTableNames.get(0));
    mCluster.stopMasters();
    // Update Udb, the table should stay the same, until we detach / reattach
    TestDatabase.genTable(2, 2);
    mCluster.startMasters();
    TableMaster tableMasterRestart = mCluster.getLocalAlluxioMaster().getMasterProcess().getMaster(TableMaster.class);
    List<String> newTableNames = tableMaster.getAllTables(DB_NAME);
    assertEquals(oldTableNames, newTableNames);
    Table tableNew = tableMasterRestart.getTable(DB_NAME, newTableNames.get(0));
    assertEquals(tableOld.getName(), tableNew.getName());
}
