/**
 * Trigger upgrade cache on start.
 * @throws Exception
 */
@Test
public void upgrade() throws Exception {
    LOG.info("Started upgrade");
    afterExecuteLatch.await();
    File f = createFile(0, loader, cache, folder);
    assertCache(0, cache, f);
    cache.close();
    copyToFile(randomStream(1, 4 * 1024), getFile(ID_PREFIX + 1, root));
    CountDownLatch beforeLatch = new CountDownLatch(1);
    CountDownLatch afterLatch = new CountDownLatch(1);
    afterExecuteLatch = new CountDownLatch(1);
    TestExecutor executor = new TestExecutor(1, beforeLatch, afterLatch, afterExecuteLatch);
    beforeLatch.countDown();
    afterLatch.countDown();
    cache = FileCache.build(4 * 1024, /* bytes */
    root, loader, executor);
    closer.register(cache);
    afterExecuteLatch.await();
    Futures.successfulAsList((Iterable<? extends ListenableFuture<?>>) executor.futures).get();
    LOG.info("Cache rebuilt");
    assertCacheIfPresent(0, cache, f);
    assertCacheIfPresent(1, cache, copyToFile(randomStream(1, 4 * 1024), folder.newFile()));
    assertFalse(getFile(ID_PREFIX + 1, root).exists());
    assertCacheStats(cache, 2, 8 * 1024, 0, 0);
    LOG.info("Finished upgrade");
}
