@Test
void fromMapWithAdapterReturnsCompositeReactiveHealthContributorMapAdapter() {
    Map<String, ReactiveHealthContributor> map = new LinkedHashMap<>();
    ReactiveHealthIndicator downIndicator = () -> Mono.just(Health.down().build());
    ReactiveHealthIndicator upIndicator = () -> Mono.just(Health.up().build());
    map.put("test", downIndicator);
    CompositeReactiveHealthContributor composite = CompositeReactiveHealthContributor.fromMap(map, (value) -> upIndicator);
    assertThat(composite).isInstanceOf(CompositeReactiveHealthContributorMapAdapter.class);
    NamedContributor<ReactiveHealthContributor> namedContributor = composite.iterator().next();
    assertThat(namedContributor.getName()).isEqualTo("test");
    assertThat(namedContributor.getContributor()).isSameAs(upIndicator);
}
