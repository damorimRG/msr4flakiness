@Test
public void deleteCorruptedFile() throws Exception {
    Directory baseDir = new RAMDirectory();
    LuceneIndexDefinition defn = new LuceneIndexDefinition(root, builder.getNodeState(), "/foo");
    RAMIndexCopier c1 = new RAMIndexCopier(baseDir, sameThreadExecutor(), getWorkDir());
    Directory remote = new RAMDirectory() {

        @Override
        public IndexInput openInput(String name, IOContext context) throws IOException {
            throw new IllegalStateException("boom");
        }
    };
    String fileName = "failed.txt";
    Directory wrapped = c1.wrapForRead("/foo", defn, remote, INDEX_DATA_CHILD_NAME);
    byte[] t1 = writeFile(remote, fileName);
    try {
        readAndAssert(wrapped, fileName, t1);
        fail("Read of file should have failed");
    } catch (IllegalStateException ignore) {
    }
    assertFalse(c1.baseDir.fileExists(fileName));
}
