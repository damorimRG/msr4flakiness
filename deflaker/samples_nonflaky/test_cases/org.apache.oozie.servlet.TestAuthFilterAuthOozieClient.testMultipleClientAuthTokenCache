// the authToken will be stored in the different files when the oozieUrl is different.
// the authTokenCache filename is definded by the oozieUrl.
// this will work when the oozieClient connects to the different cluster.
public void testMultipleClientAuthTokenCache() throws Exception {
    Configuration conf = getAuthenticationConf();
    setSystemProperty("oozie.auth.token.cache", "true");
    File cacheFile_1 = serverRunTest(conf, "oozie_1");
    // with the same oozie host and the same contextPath
    File cacheFile_2 = serverRunTest(conf, "oozie_1");
    String currentCache_1 = IOUtils.getReaderAsString(new InputStreamReader(new FileInputStream(cacheFile_1), StandardCharsets.UTF_8), -1);
    String currentCache_2 = IOUtils.getReaderAsString(new InputStreamReader(new FileInputStream(cacheFile_2), StandardCharsets.UTF_8), -1);
    assertEquals("AuthTokenCache with the same oozieUrl should be same but was not", currentCache_1, currentCache_2);
    assertTrue("The cacheFile_2 file should exist but was not", cacheFile_2.exists());
    assertTrue("The cacheFile_1 file should exist but was not", cacheFile_1.exists());
    // with the same oozie host and with the different contextPath
    File cacheFile_3 = serverRunTest(conf, "oozie_3");
    // verify that the cacheFile will not be deleted
    assertTrue("The cacheFile_3 file should exist but was not", cacheFile_3.exists());
    assertTrue("The cacheFile_1 file should exist but was not", cacheFile_1.exists());
    String currentCache_3 = IOUtils.getReaderAsString(new InputStreamReader(new FileInputStream(cacheFile_3), StandardCharsets.UTF_8), -1);
    assertNotSame("AuthTokenCache with different oozieUrls should be different but was not", currentCache_1, currentCache_3);
    // with the different oozie host and the different contextPath, this request will fail
    File cacheFile_4 = runTest(new Callable<Void>() {

        public Void call() throws Exception {
            String oozieUrl = getContextURL();
            String[] args = new String[] { "admin", "-status", "-oozie", oozieUrl + "/test" };
            assertNotSame("The request with the no existing url will fail but was not", 0, new OozieCLI().run(args));
            return null;
        }
    }, conf, "oozie_4");
    assertFalse("The cache can't exist when the request with the not existing url", cacheFile_4.exists());
    // remove the cache files
    cacheFile_2.delete();
    assertFalse("CacheFile_2 should not exist but was not", cacheFile_2.exists());
    assertFalse("CacheFile_1 should not exist but was not", cacheFile_1.exists());
    cacheFile_3.delete();
    assertFalse("CacheFile_3 should not exist but was not", cacheFile_3.exists());
}
