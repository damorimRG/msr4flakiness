@Test
public void testHistoryWithSinglePasswordChange() throws Exception {
    // the user must be able to change the password
    User user = getTestUser();
    String oldPassword = TreeUtil.getString(root.getTree(user.getPath()), REP_PASSWORD);
    user.changePassword("newPwd");
    root.commit();
    // after changing the password, 1 password history entry should be present and the
    // recorded password should be equal to the user's initial password
    // however, the user's current password must not match the old password.
    assertTrue(root.getTree(user.getPath()).hasChild(REP_PWD));
    Tree pwTree = root.getTree(user.getPath()).getChild(REP_PWD);
    assertTrue(pwTree.hasProperty(REP_PWD_HISTORY));
    List<String> history = getHistory(user);
    assertEquals(1, history.size());
    assertEquals(oldPassword, history.iterator().next());
    String currentPw = TreeUtil.getString(root.getTree(user.getPath()), REP_PASSWORD);
    assertNotSame(currentPw, oldPassword);
}
