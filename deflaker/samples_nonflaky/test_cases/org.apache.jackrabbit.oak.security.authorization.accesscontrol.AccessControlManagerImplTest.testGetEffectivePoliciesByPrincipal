@Test
public void testGetEffectivePoliciesByPrincipal() throws Exception {
    // no ACLs containing entries for the specified principals
    // -> no effective policies expected
    Set<Set<Principal>> principalSets = new HashSet<>();
    principalSets.add(Collections.singleton(testPrincipal));
    principalSets.add(Collections.singleton(EveryonePrincipal.getInstance()));
    principalSets.add(ImmutableSet.of(testPrincipal, EveryonePrincipal.getInstance()));
    for (Set<Principal> principals : principalSets) {
        AccessControlPolicy[] policies = acMgr.getEffectivePolicies(principals);
        assertPolicies(policies, 0);
    }
    setupPolicy(testPath);
    // changes not yet persisted -> no effecitve policies found for testprincipal
    for (Set<Principal> principals : principalSets) {
        AccessControlPolicy[] policies = acMgr.getEffectivePolicies(principals);
        assertPolicies(policies, 0);
    }
    root.commit();
    // after persisting changes -> the policy must be found
    for (Set<Principal> principals : principalSets) {
        AccessControlPolicy[] policies = acMgr.getEffectivePolicies(principals);
        if (principals.contains(testPrincipal)) {
            assertPolicies(policies, 1);
        } else {
            assertPolicies(policies, 0);
        }
    }
    Tree child = TreeUtil.addChild(root.getTree(testPath), "child", JcrConstants.NT_UNSTRUCTURED);
    String childPath = child.getPath();
    setupPolicy(childPath);
    // changes not yet persisted -> no effecitve policies found for testprincipal
    for (Set<Principal> principals : principalSets) {
        AccessControlPolicy[] policies = acMgr.getEffectivePolicies(principals);
        if (principals.contains(testPrincipal)) {
            assertPolicies(policies, 1);
        } else {
            assertPolicies(policies, 0);
        }
    }
    root.commit();
    // after persisting changes -> the policy must be found
    for (Set<Principal> principals : principalSets) {
        AccessControlPolicy[] policies = acMgr.getEffectivePolicies(principals);
        if (principals.contains(testPrincipal)) {
            assertPolicies(policies, 2);
        } else {
            assertPolicies(policies, 0);
        }
    }
}
