@Test
public void testGetPrincipalProvider4() {
    PrincipalConfigurationImpl pc3 = new PrincipalConfigurationImpl();
    final SecurityProvider sp = new SecurityProvider() {

        @NotNull
        @Override
        public ConfigurationParameters getParameters(@Nullable String name) {
            return ConfigurationParameters.EMPTY;
        }

        @NotNull
        @Override
        public Iterable<? extends SecurityConfiguration> getConfigurations() {
            return ImmutableList.of();
        }

        @NotNull
        @Override
        public <T> T getConfiguration(@NotNull Class<T> configClass) {
            if (configClass.equals(UserConfiguration.class)) {
                return (T) new UserConfigurationImpl(this) {

                    @Nullable
                    @Override
                    public PrincipalProvider getUserPrincipalProvider(@NotNull Root root, @NotNull NamePathMapper namePathMapper) {
                        return null;
                    }
                };
            } else {
                throw new IllegalArgumentException();
            }
        }
    };
    pc3.setSecurityProvider(sp);
    PrincipalProvider pp = pc3.getPrincipalProvider(root, NamePathMapper.DEFAULT);
    assertTrue(pp instanceof PrincipalProviderImpl);
}
