public void testGetUpdateQuery() throws Exception {
    EntityManager em = jpaService.getEntityManager();
    SLARegistrationBean bean = addRecordToSLARegistrationTable("test-application", SLAStatus.MET);
    // UPDATE_SLA_REG_ALL
    Query query = SLARegistrationQueryExecutor.getInstance().getUpdateQuery(SLARegQuery.UPDATE_SLA_REG_ALL, bean, em);
    assertEquals(query.getParameterValue("jobId"), bean.getId());
    assertEquals(query.getParameterValue("nominalTime"), bean.getNominalTimestamp());
    assertEquals(query.getParameterValue("expectedStartTime"), bean.getExpectedStartTimestamp());
    assertEquals(query.getParameterValue("expectedEndTime"), bean.getExpectedEndTimestamp());
    assertEquals(query.getParameterValue("expectedDuration"), bean.getExpectedDuration());
    assertEquals(query.getParameterValue("slaConfig"), bean.getSlaConfig());
    assertEquals(query.getParameterValue("notificationMsg"), bean.getNotificationMsg());
    assertEquals(query.getParameterValue("upstreamApps"), bean.getUpstreamApps());
    assertEquals(query.getParameterValue("appType"), bean.getAppType().toString());
    assertEquals(query.getParameterValue("appName"), bean.getAppName());
    assertEquals(query.getParameterValue("user"), bean.getUser());
    assertEquals(query.getParameterValue("parentId"), bean.getParentId());
    assertEquals(query.getParameterValue("jobData"), bean.getJobData());
    em.close();
}
