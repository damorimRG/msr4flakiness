public void testResetSequence_withMultiThread() throws Exception {
    Services service = Services.get();
    service.setService(ZKLocksService.class);
    final AtomicInteger[] result = new AtomicInteger[5000];
    final ZKUUIDService uuid1 = new ZKUUIDService();
    final ZKUUIDService uuid2 = new ZKUUIDService();
    setSystemProperty(UUIDService.CONF_GENERATOR, "counter");
    uuid1.init(service);
    uuid2.init(service);
    ZKUUIDService.setMaxSequence(5000);
    for (int i = 0; i < 5000; i++) {
        result[i] = new AtomicInteger(0);
    }
    try {
        Thread t1 = new Thread() {

            public void run() {
                for (int i = 0; i < 5000; i++) {
                    String id = uuid1.generateId(ApplicationType.WORKFLOW);
                    int index = Integer.parseInt(id.substring(0, 7));
                    result[index].incrementAndGet();
                }
            }
        };
        Thread t2 = new Thread() {

            public void run() {
                for (int i = 0; i < 5000; i++) {
                    String id = uuid2.generateId(ApplicationType.WORKFLOW);
                    int index = Integer.parseInt(id.substring(0, 7));
                    result[index].incrementAndGet();
                }
            }
        };
        t1.start();
        t2.start();
        t1.join();
        t2.join();
        for (int i = 0; i < 5000; i++) {
            assertEquals(result[i].get(), 2);
        }
    } finally {
        uuid1.destroy();
        uuid2.destroy();
    }
}
