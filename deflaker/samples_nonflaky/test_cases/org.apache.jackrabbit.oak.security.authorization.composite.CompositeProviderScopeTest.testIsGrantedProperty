@Test
public void testIsGrantedProperty() throws Exception {
    for (String p : defPermissions.keySet()) {
        long defaultPerms = defPermissions.get(p);
        Tree tree = readOnlyRoot.getTree(p);
        if (testProvider.isSupported(p)) {
            long expected = Permissions.diff(defaultPerms, Permissions.ADD_NODE | Permissions.ADD_PROPERTY);
            assertTrue(cppTestUser.isGranted(tree, PROPERTY_STATE, expected));
            assertFalse(cppTestUser.isGranted(tree, PROPERTY_STATE, Permissions.ADD_PROPERTY));
            assertFalse(cppTestUser.isGranted(tree, PROPERTY_STATE, Permissions.SET_PROPERTY));
            assertFalse(cppTestUser.isGranted(tree, PROPERTY_STATE, Permissions.WRITE));
        } else {
            assertTrue(cppTestUser.isGranted(tree, PROPERTY_STATE, defaultPerms));
        }
    }
}
