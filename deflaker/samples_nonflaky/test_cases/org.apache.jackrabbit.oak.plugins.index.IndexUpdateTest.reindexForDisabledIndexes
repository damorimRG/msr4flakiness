@Test
public void reindexForDisabledIndexes() throws Exception {
    EditorHook hook = new EditorHook(new IndexUpdateProvider(new CompositeIndexEditorProvider(new PropertyIndexEditorProvider(), new ReferenceEditorProvider())));
    NodeState before = builder.getNodeState();
    createIndexDefinition(builder.child(INDEX_DEFINITIONS_NAME), "fooIndex", true, false, ImmutableSet.of("foo"), null);
    builder.child("testRoot").setProperty("foo", "abc");
    NodeState after = builder.getNodeState();
    NodeState indexed = hook.processCommit(before, after, CommitInfo.EMPTY);
    before = indexed;
    builder = before.builder();
    builder.getChildNode("oak:index").getChildNode("fooIndex").setProperty(TYPE_PROPERTY_NAME, TYPE_DISABLED);
    builder.getChildNode("oak:index").getChildNode("fooIndex").setProperty(REINDEX_PROPERTY_NAME, true);
    after = builder.getNodeState();
    LogCustomizer customLogs = LogCustomizer.forLogger(IndexUpdate.class.getName()).filter(Level.INFO).create();
    customLogs.starting();
    before = after;
    builder = before.builder();
    builder.child("testRoot2").setProperty("foo", "abc");
    after = builder.getNodeState();
    indexed = hook.processCommit(before, after, CommitInfo.EMPTY);
    assertTrue(customLogs.getLogs().isEmpty());
    customLogs.finished();
}
