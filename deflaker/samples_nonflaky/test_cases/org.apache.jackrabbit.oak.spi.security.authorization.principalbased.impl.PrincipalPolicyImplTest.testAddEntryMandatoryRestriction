@Test
public void testAddEntryMandatoryRestriction() throws Exception {
    RestrictionDefinition def = new RestrictionDefinitionImpl("mandatory", Type.LONG, true);
    Restriction r = mock(Restriction.class);
    RestrictionProvider restrictionProvider = mock(RestrictionProvider.class);
    when(restrictionProvider.getSupportedRestrictions(anyString())).thenReturn(ImmutableSet.of(def));
    when(restrictionProvider.createRestriction(anyString(), anyString(), any(Value.class))).thenReturn(r);
    MgrProvider mp = when(mock(MgrProvider.class).getRestrictionProvider()).thenReturn(restrictionProvider).getMock();
    when(mp.getNamePathMapper()).thenReturn(getNamePathMapper());
    when(mp.getPrivilegeManager()).thenReturn(getPrivilegeManager(root));
    when(mp.getPrivilegeBitsProvider()).thenReturn(new PrivilegeBitsProvider(root));
    PrincipalPolicyImpl plc = new PrincipalPolicyImpl(principal, POLICY_OAK_PATH, mp);
    Map<String, Value> svRestrictions = ImmutableMap.of("mandatory", getValueFactory(root).createValue(1));
    plc.addEntry(testJcrPath, privilegesFromNames(PrivilegeConstants.JCR_VERSION_MANAGEMENT), svRestrictions, ImmutableMap.of());
    assertTrue(plc.getEntries().get(0).getRestrictions().contains(r));
}
