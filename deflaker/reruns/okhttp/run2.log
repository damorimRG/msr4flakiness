> Task :okhttp:copyJavaTemplates UP-TO-DATE
> Task :okhttp:compileKotlin UP-TO-DATE
> Task :okhttp:compileJava NO-SOURCE
> Task :mockwebserver:compileKotlin UP-TO-DATE
> Task :mockwebserver:compileJava NO-SOURCE
> Task :mockwebserver:processResources NO-SOURCE
> Task :mockwebserver:classes UP-TO-DATE
> Task :okhttp-testing-support:compileKotlin UP-TO-DATE
> Task :okhttp-testing-support:compileJava UP-TO-DATE
> Task :okhttp-tls:compileKotlin UP-TO-DATE
> Task :okhttp-tls:compileJava NO-SOURCE
> Task :mockwebserver:compileTestKotlin UP-TO-DATE
> Task :mockwebserver:compileTestJava UP-TO-DATE
> Task :mockwebserver:processTestResources NO-SOURCE
> Task :mockwebserver:testClasses UP-TO-DATE
> Task :okhttp:processResources UP-TO-DATE
> Task :okhttp:classes UP-TO-DATE
> Task :okhttp:inspectClassesForKotlinIC UP-TO-DATE
> Task :okhttp:jar UP-TO-DATE
> Task :okhttp-testing-support:processResources NO-SOURCE
> Task :okhttp-testing-support:classes UP-TO-DATE
> Task :okhttp-testing-support:inspectClassesForKotlinIC UP-TO-DATE
> Task :okhttp-testing-support:jar UP-TO-DATE
> Task :okhttp-tls:processResources NO-SOURCE
> Task :okhttp-tls:classes UP-TO-DATE
> Task :okhttp-tls:inspectClassesForKotlinIC UP-TO-DATE
> Task :okhttp-tls:jar UP-TO-DATE
> Task :mockwebserver:test UP-TO-DATE
> Task :okhttp-logging-interceptor:compileKotlin UP-TO-DATE
> Task :okhttp-logging-interceptor:compileJava NO-SOURCE
> Task :okcurl:compileKotlin UP-TO-DATE
> Task :okcurl:copyResourcesTemplates UP-TO-DATE
> Task :okcurl:compileJava NO-SOURCE
> Task :okcurl:processResources UP-TO-DATE
> Task :okcurl:classes UP-TO-DATE
> Task :okcurl:compileTestKotlin UP-TO-DATE
> Task :okcurl:compileTestJava UP-TO-DATE
> Task :okcurl:processTestResources NO-SOURCE
> Task :okcurl:testClasses UP-TO-DATE
> Task :okhttp-logging-interceptor:processResources NO-SOURCE
> Task :okhttp-logging-interceptor:classes UP-TO-DATE
> Task :okhttp-logging-interceptor:inspectClassesForKotlinIC UP-TO-DATE
> Task :okhttp-logging-interceptor:jar UP-TO-DATE
> Task :okcurl:test UP-TO-DATE
> Task :mockwebserver:inspectClassesForKotlinIC UP-TO-DATE
> Task :mockwebserver:jar UP-TO-DATE
> Task :okhttp-urlconnection:compileKotlin UP-TO-DATE
> Task :okhttp-urlconnection:compileJava NO-SOURCE
> Task :okhttp:compileTestKotlin UP-TO-DATE
> Task :okhttp:compileTestJava UP-TO-DATE
> Task :okhttp:processTestResources UP-TO-DATE
> Task :okhttp:testClasses UP-TO-DATE
> Task :okhttp-urlconnection:processResources NO-SOURCE
> Task :okhttp-urlconnection:classes UP-TO-DATE
> Task :okhttp-urlconnection:inspectClassesForKotlinIC UP-TO-DATE
> Task :okhttp-urlconnection:jar UP-TO-DATE

> Task :okhttp:test
Running test: Test testUnsupportedCharset[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testCharsetIsOneOfManyParameters[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testDoubleQuotesAreSpecial[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testSingleQuotesAreNotSpecial[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testParse[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testDuplicatedCharsets[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testValidParse[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testCharsetNameIsDoubleQuotedSingleQuote[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testCharsetNameIsDoubleQuotedAndSingleQuoted[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testParseWithSpecialCharacters[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testDefaultCharset[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testInvalidParse[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testMultipleCharsets[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testCharsetAndQuoting[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testParseDanglingSemicolon[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testIllegalCharsetName[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testCharsetNameIsSingleQuoted[Use get = true](okhttp3.MediaTypeTest)
Running test: Test testUnsupportedCharset[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testCharsetIsOneOfManyParameters[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testDoubleQuotesAreSpecial[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testSingleQuotesAreNotSpecial[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testParse[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testDuplicatedCharsets[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testValidParse[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testCharsetNameIsDoubleQuotedSingleQuote[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testCharsetNameIsDoubleQuotedAndSingleQuoted[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testParseWithSpecialCharacters[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testDefaultCharset[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testInvalidParse[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testMultipleCharsets[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testCharsetAndQuoting[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testParseDanglingSemicolon[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testIllegalCharsetName[Use get = false](okhttp3.MediaTypeTest)
Running test: Test testCharsetNameIsSingleQuoted[Use get = false](okhttp3.MediaTypeTest)
Running test: Test contentTypeHeaderIsForbidden(okhttp3.MultipartBodyTest)
Running test: Test fieldAndTwoFiles(okhttp3.MultipartBodyTest)
Running test: Test contentLengthHeaderIsForbidden(okhttp3.MultipartBodyTest)
Running test: Test streamingPartHasNoLength(okhttp3.MultipartBodyTest)
Running test: Test threeParts(okhttp3.MultipartBodyTest)
Running test: Test stringEscapingIsWeird(okhttp3.MultipartBodyTest)
Running test: Test onePartRequired(okhttp3.MultipartBodyTest)
Running test: Test singlePart(okhttp3.MultipartBodyTest)
Running test: Test partAccessors(okhttp3.MultipartBodyTest)
Running test: Test nonAsciiFilename(okhttp3.MultipartBodyTest)
Running test: Test timeoutWritingRequest(okhttp3.WholeOperationTimeoutTest)
Running test: Test timeoutWritingRequestWithEnqueue(okhttp3.WholeOperationTimeoutTest)
Running test: Test tls_defaultCiphers_withFallbackIndicator(okhttp3.ConnectionSpecTest)
Running test: Test defaultConfigIsNoTimeout(okhttp3.WholeOperationTimeoutTest)
Running test: Test timeoutReadingResponseWithEnqueue(okhttp3.WholeOperationTimeoutTest)
Running test: Test tls_defaultCiphers_noFallbackIndicator(okhttp3.ConnectionSpecTest)
Running test: Test tlsBuilder_explicitCiphers(okhttp3.ConnectionSpecTest)
Running test: Test noCipherSuites(okhttp3.ConnectionSpecTest)
Running test: Test tlsBuilder_defaultCiphers(okhttp3.ConnectionSpecTest)
Running test: Test equalsAndHashCode(okhttp3.ConnectionSpecTest)
Running test: Test simpleToString(okhttp3.ConnectionSpecTest)
Running test: Test noTlsVersions(okhttp3.ConnectionSpecTest)
Running test: Test cleartextBuilder(okhttp3.ConnectionSpecTest)
Running test: Test tls_missingRequiredCipher(okhttp3.ConnectionSpecTest)
Running test: Test allEnabledToString(okhttp3.ConnectionSpecTest)
Running test: Test tls_explicitCiphers(okhttp3.ConnectionSpecTest)
Running test: Test tls_stringCiphersAndVersions(okhttp3.ConnectionSpecTest)
Running test: Test allEnabledTlsVersions(okhttp3.ConnectionSpecTest)
Running test: Test allEnabledCipherSuites(okhttp3.ConnectionSpecTest)
Running test: Test tls_missingTlsVersion(okhttp3.ConnectionSpecTest)
Running test: Test noTimeout(okhttp3.WholeOperationTimeoutTest)
Running test: Test removePathSegmentDoesntRemovePath[Use get = true](okhttp3.HttpUrlTest)
Running test: Test malformedPercentEncoding[Use get = true](okhttp3.HttpUrlTest)
Running test: Test ampersandQueryIsTwoNameValuePairsWithEmptyKeys[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test skipsWhenDnsDontMatch(okhttp3.ConnectionCoalescingTest)
Running test: Test composeWithAddSegment[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentRejectsDotDot[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fragmentPercentEncodedNonAscii[Use get = true](okhttp3.HttpUrlTest)
Running test: Test removeAllDoesNotRemoveQueryIfNoParametersWereRemoved[Use get = true](okhttp3.HttpUrlTest)
Running test: Test passwordWithEmptyUsername[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeFromUnencodedComponents[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentRejectsDot[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriPasswordSpecialCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentRejectsDotAndIgnoredCharacter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryParametersWithRepeatedName[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addEncodedPathSegments[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentWithSlash[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fragmentCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test parsedQueryDoesntIncludeFragment[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeQuerySetQueryParameter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv4CanonicalForm[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentsOntoTrailingSlash[Use get = true](okhttp3.HttpUrlTest)
Running test: Test resolveNoScheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriWithUsernameNoPassword[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6ScopedAddress[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTooManyLeadingZeros[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentOutOfBounds[Use get = true](okhttp3.HttpUrlTest)
Running test: Test incompleteBuilderToString[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTrailingCompression[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryValueCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test configureClientDefault(okhttp3.WholeOperationTimeoutTest)
Running test: Test timeoutProcessingWithEnqueue(okhttp3.WholeOperationTimeoutTest)
Running test: Test minimalUrlComposition[Use get = true](okhttp3.HttpUrlTest)
Running test: Test authorityWithMultipleColons[Use get = true](okhttp3.HttpUrlTest)
Running test: Test percentDecode[Use get = true](okhttp3.HttpUrlTest)
Running test: Test decodeUsername[Use get = true](okhttp3.HttpUrlTest)
Running test: Test removePathSegmentOutOfBounds[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeQueryWithComponents[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTooMuchCompression[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriPathSpecialCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeQueryRemoveQueryParameter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test emptyQueryIsSingleNameValuePairWithEmptyKey[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeEncodesWhitespace[Use get = true](okhttp3.HttpUrlTest)
Running test: Test relativePathWithSameScheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeWithEncodedPath[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriQueryValueSpecialCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentOutOfBounds[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressMisplacedColons[Use get = true](okhttp3.HttpUrlTest)
Running test: Test scheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithIpv4SuffixWithOctalPrefix[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fragmentPercentEncodedPartialCodePoint[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentDotAndIgnoredCharacter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriWithTruncatedPercentEscape[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6Malformed[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeFromEncodedComponents[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeQuerySetEncodedQueryParameter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressLeadingCompression[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriQueryParameterNameSpecialCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test clearEncodedFragment[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentRejectsDot[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fragmentNonAsciiThatOffendsJavaNetUri[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fromUri[Use get = true](okhttp3.HttpUrlTest)
Running test: Test builderToString[Use get = true](okhttp3.HttpUrlTest)
Running test: Test parseDoesNotTrimOtherWhitespaceCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test relativePathWithTrailingSlash[Use get = true](okhttp3.HttpUrlTest)
Running test: Test resolveAuthoritySlashCountMattersWithSameScheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentWithSlash[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fromUriPartial[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostContainsIllegalCharacter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fullUrlComposition[Use get = true](okhttp3.HttpUrlTest)
Running test: Test parseHostAsciiNonPrintable[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentEncodes[Use get = true](okhttp3.HttpUrlTest)
Running test: Test parseTrimsAsciiWhitespace[Use get = true](okhttp3.HttpUrlTest)
Running test: Test pathCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTooManyDigitsInGroup[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithIpv4Suffix[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6[Use get = true](okhttp3.HttpUrlTest)
Running test: Test pathWithBackslash[Use get = true](okhttp3.HttpUrlTest)
Running test: Test username[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentEncodes[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fragmentNonAscii[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostnameMappingLastMappedCodePoint[Use get = true](okhttp3.HttpUrlTest)
Running test: Test parseNoScheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentsWithBackslash[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostnameMappingLastIgnoredCodePoint[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryCharactersNotReencodedWhenParsed[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriUsernameSpecialCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test relativePath[Use get = true](okhttp3.HttpUrlTest)
Running test: Test decodeSlashCharacterInDecodedPathSegment[Use get = true](okhttp3.HttpUrlTest)
Running test: Test port[Use get = true](okhttp3.HttpUrlTest)
Running test: Test passwordCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test timeoutReadingResponse(okhttp3.WholeOperationTimeoutTest)
Running test: Test addPathSegmentsWithEmptyPaths[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostnameIgnoredCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fromUriUnsupportedScheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUri[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTooManyGroups[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriSpecialQueryCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentRejectsDotDot[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriQueryParameterValueSpecialCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeQueryWithEncodedComponents[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostWithTrailingDot[Use get = true](okhttp3.HttpUrlTest)
Running test: Test decodePassword[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6Builder[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addEncodedPathSegmentDotDotAndIgnoredCharacter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithIpv4SuffixWithHexadecimalPrefix[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentDotDotPopsDirectory[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryParametersWithoutValues[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriWithSpaceCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentAcceptsEmpty[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithIncompleteIpv4Suffix[Use get = true](okhttp3.HttpUrlTest)
Running test: Test rfc3886NormalExamples[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithMalformedIpv4Suffix[Use get = true](okhttp3.HttpUrlTest)
Running test: Test resolveSchemeLikePath[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostnameLowercaseCharactersMappedDirectly[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryParametersWithEmptyValues[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fromJavaNetUrl[Use get = true](okhttp3.HttpUrlTest)
Running test: Test rfc3886AbnormalExamples[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriFragmentSpecialCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test redactedUrl[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentDotDoesNothing[Use get = true](okhttp3.HttpUrlTest)
Running test: Test topPrivateDomain[Use get = true](okhttp3.HttpUrlTest)
Running test: Test resolveUnsupportedScheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addEncodedPathSegmentDotAndIgnoredCharacter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriWithNonHexPercentEscape[Use get = true](okhttp3.HttpUrlTest)
Running test: Test absentQueryIsZeroNameValuePairs[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryCharactersEncodedWhenComposed[Use get = true](okhttp3.HttpUrlTest)
Running test: Test usernameCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test pathSize[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentEncodes[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toJavaNetUrl[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryCharactersNotReencodedWhenComposedWithAddEncoded[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostnameMultipleCharacterMapping[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeMixingPathSegments[Use get = true](okhttp3.HttpUrlTest)
Running test: Test resolveAuthoritySlashCountDoesntMatterWithDifferentScheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test fromJavaNetUrlUnsupportedScheme[Use get = true](okhttp3.HttpUrlTest)
Running test: Test usernameAndPassword[Use get = true](okhttp3.HttpUrlTest)
Running test: Test changingSchemeChangesDefaultPort[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeQueryMultipleEncodedValuesForParameter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressDifferentFormats[Use get = true](okhttp3.HttpUrlTest)
Running test: Test toUriWithControlCharacters[Use get = true](okhttp3.HttpUrlTest)
Running test: Test rawEncodingRetained[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setPathSegment[Use get = true](okhttp3.HttpUrlTest)
Running test: Test malformedUtf8Encoding[Use get = true](okhttp3.HttpUrlTest)
Running test: Test queryParameterLookupWithNonCanonicalEncoding[Use get = true](okhttp3.HttpUrlTest)
Running test: Test incompleteUrlComposition[Use get = true](okhttp3.HttpUrlTest)
Running test: Test composeQueryRemoveEncodedQueryParameter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test removePathSegment[Use get = true](okhttp3.HttpUrlTest)
Running test: Test parseAuthoritySlashCountDoesntMatter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostnameUppercaseCharactersConvertedToLowercase[Use get = true](okhttp3.HttpUrlTest)
Running test: Test authorityWithMultipleAtSigns[Use get = true](okhttp3.HttpUrlTest)
Running test: Test decodeEmptyPathSegments[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostnameMappingLastDisallowedCodePoint[Use get = true](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentRejectsDotDotAndIgnoredCharacter[Use get = true](okhttp3.HttpUrlTest)
Running test: Test hostIpv6CanonicalForm[Use get = true](okhttp3.HttpUrlTest)
Running test: Test clearFragment[Use get = true](okhttp3.HttpUrlTest)
Running test: Test addPathSegments[Use get = true](okhttp3.HttpUrlTest)
Running test: Test newBuilderResolve[Use get = true](okhttp3.HttpUrlTest)
Running test: Test roundTripBuilder[Use get = true](okhttp3.HttpUrlTest)
Running test: Test unprintableCharactersArePercentEncoded[Use get = true](okhttp3.HttpUrlTest)
Running test: Test removePathSegmentDoesntRemovePath[Use get = false](okhttp3.HttpUrlTest)
Running test: Test malformedPercentEncoding[Use get = false](okhttp3.HttpUrlTest)
Running test: Test ampersandQueryIsTwoNameValuePairsWithEmptyKeys[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeWithAddSegment[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentRejectsDotDot[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fragmentPercentEncodedNonAscii[Use get = false](okhttp3.HttpUrlTest)
Running test: Test removeAllDoesNotRemoveQueryIfNoParametersWereRemoved[Use get = false](okhttp3.HttpUrlTest)
Running test: Test passwordWithEmptyUsername[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeFromUnencodedComponents[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentRejectsDot[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriPasswordSpecialCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentRejectsDotAndIgnoredCharacter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryParametersWithRepeatedName[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addEncodedPathSegments[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentWithSlash[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fragmentCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test parsedQueryDoesntIncludeFragment[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeQuerySetQueryParameter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv4CanonicalForm[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentsOntoTrailingSlash[Use get = false](okhttp3.HttpUrlTest)
Running test: Test resolveNoScheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriWithUsernameNoPassword[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6ScopedAddress[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTooManyLeadingZeros[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentOutOfBounds[Use get = false](okhttp3.HttpUrlTest)
Running test: Test incompleteBuilderToString[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTrailingCompression[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryValueCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test minimalUrlComposition[Use get = false](okhttp3.HttpUrlTest)
Running test: Test authorityWithMultipleColons[Use get = false](okhttp3.HttpUrlTest)
Running test: Test percentDecode[Use get = false](okhttp3.HttpUrlTest)
Running test: Test decodeUsername[Use get = false](okhttp3.HttpUrlTest)
Running test: Test removePathSegmentOutOfBounds[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeQueryWithComponents[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTooMuchCompression[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriPathSpecialCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeQueryRemoveQueryParameter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test emptyQueryIsSingleNameValuePairWithEmptyKey[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeEncodesWhitespace[Use get = false](okhttp3.HttpUrlTest)
Running test: Test relativePathWithSameScheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeWithEncodedPath[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriQueryValueSpecialCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentOutOfBounds[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressMisplacedColons[Use get = false](okhttp3.HttpUrlTest)
Running test: Test scheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithIpv4SuffixWithOctalPrefix[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fragmentPercentEncodedPartialCodePoint[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentDotAndIgnoredCharacter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriWithTruncatedPercentEscape[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6Malformed[Use get = false](okhttp3.HttpUrlTest)
Running test: Test timeoutFollowingRedirectOnNewConnection(okhttp3.WholeOperationTimeoutTest)
Running test: Test composeFromEncodedComponents[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeQuerySetEncodedQueryParameter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressLeadingCompression[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriQueryParameterNameSpecialCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test clearEncodedFragment[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentRejectsDot[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fragmentNonAsciiThatOffendsJavaNetUri[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fromUri[Use get = false](okhttp3.HttpUrlTest)
Running test: Test builderToString[Use get = false](okhttp3.HttpUrlTest)
Running test: Test parseDoesNotTrimOtherWhitespaceCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test relativePathWithTrailingSlash[Use get = false](okhttp3.HttpUrlTest)
Running test: Test resolveAuthoritySlashCountMattersWithSameScheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentWithSlash[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fromUriPartial[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostContainsIllegalCharacter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fullUrlComposition[Use get = false](okhttp3.HttpUrlTest)
Running test: Test parseHostAsciiNonPrintable[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentEncodes[Use get = false](okhttp3.HttpUrlTest)
Running test: Test parseTrimsAsciiWhitespace[Use get = false](okhttp3.HttpUrlTest)
Running test: Test pathCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTooManyDigitsInGroup[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithIpv4Suffix[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6[Use get = false](okhttp3.HttpUrlTest)
Running test: Test pathWithBackslash[Use get = false](okhttp3.HttpUrlTest)
Running test: Test username[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentEncodes[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fragmentNonAscii[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostnameMappingLastMappedCodePoint[Use get = false](okhttp3.HttpUrlTest)
Running test: Test parseNoScheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentsWithBackslash[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostnameMappingLastIgnoredCodePoint[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryCharactersNotReencodedWhenParsed[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriUsernameSpecialCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test relativePath[Use get = false](okhttp3.HttpUrlTest)
Running test: Test decodeSlashCharacterInDecodedPathSegment[Use get = false](okhttp3.HttpUrlTest)
Running test: Test port[Use get = false](okhttp3.HttpUrlTest)
Running test: Test passwordCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentsWithEmptyPaths[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostnameIgnoredCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fromUriUnsupportedScheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUri[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressTooManyGroups[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriSpecialQueryCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentRejectsDotDot[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriQueryParameterValueSpecialCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeQueryWithEncodedComponents[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostWithTrailingDot[Use get = false](okhttp3.HttpUrlTest)
Running test: Test decodePassword[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6Builder[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addEncodedPathSegmentDotDotAndIgnoredCharacter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithIpv4SuffixWithHexadecimalPrefix[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentDotDotPopsDirectory[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryParametersWithoutValues[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriWithSpaceCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setPathSegmentAcceptsEmpty[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithIncompleteIpv4Suffix[Use get = false](okhttp3.HttpUrlTest)
Running test: Test rfc3886NormalExamples[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6WithMalformedIpv4Suffix[Use get = false](okhttp3.HttpUrlTest)
Running test: Test resolveSchemeLikePath[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostnameLowercaseCharactersMappedDirectly[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryParametersWithEmptyValues[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fromJavaNetUrl[Use get = false](okhttp3.HttpUrlTest)
Running test: Test rfc3886AbnormalExamples[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriFragmentSpecialCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test redactedUrl[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentDotDoesNothing[Use get = false](okhttp3.HttpUrlTest)
Running test: Test topPrivateDomain[Use get = false](okhttp3.HttpUrlTest)
Running test: Test resolveUnsupportedScheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addEncodedPathSegmentDotAndIgnoredCharacter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriWithNonHexPercentEscape[Use get = false](okhttp3.HttpUrlTest)
Running test: Test absentQueryIsZeroNameValuePairs[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryCharactersEncodedWhenComposed[Use get = false](okhttp3.HttpUrlTest)
Running test: Test usernameCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test pathSize[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addPathSegmentEncodes[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toJavaNetUrl[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryCharactersNotReencodedWhenComposedWithAddEncoded[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostnameMultipleCharacterMapping[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeMixingPathSegments[Use get = false](okhttp3.HttpUrlTest)
Running test: Test resolveAuthoritySlashCountDoesntMatterWithDifferentScheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test fromJavaNetUrlUnsupportedScheme[Use get = false](okhttp3.HttpUrlTest)
Running test: Test usernameAndPassword[Use get = false](okhttp3.HttpUrlTest)
Running test: Test changingSchemeChangesDefaultPort[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeQueryMultipleEncodedValuesForParameter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6AddressDifferentFormats[Use get = false](okhttp3.HttpUrlTest)
Running test: Test toUriWithControlCharacters[Use get = false](okhttp3.HttpUrlTest)
Running test: Test rawEncodingRetained[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setPathSegment[Use get = false](okhttp3.HttpUrlTest)
Running test: Test malformedUtf8Encoding[Use get = false](okhttp3.HttpUrlTest)
Running test: Test queryParameterLookupWithNonCanonicalEncoding[Use get = false](okhttp3.HttpUrlTest)
Running test: Test incompleteUrlComposition[Use get = false](okhttp3.HttpUrlTest)
Running test: Test composeQueryRemoveEncodedQueryParameter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test removePathSegment[Use get = false](okhttp3.HttpUrlTest)
Running test: Test parseAuthoritySlashCountDoesntMatter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostnameUppercaseCharactersConvertedToLowercase[Use get = false](okhttp3.HttpUrlTest)
Running test: Test authorityWithMultipleAtSigns[Use get = false](okhttp3.HttpUrlTest)
Running test: Test decodeEmptyPathSegments[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostnameMappingLastDisallowedCodePoint[Use get = false](okhttp3.HttpUrlTest)
Running test: Test setEncodedPathSegmentRejectsDotDotAndIgnoredCharacter[Use get = false](okhttp3.HttpUrlTest)
Running test: Test hostIpv6CanonicalForm[Use get = false](okhttp3.HttpUrlTest)
Running test: Test clearFragment[Use get = false](okhttp3.HttpUrlTest)
Running test: Test addPathSegments[Use get = false](okhttp3.HttpUrlTest)
Running test: Test newBuilderResolve[Use get = false](okhttp3.HttpUrlTest)
Running test: Test roundTripBuilder[Use get = false](okhttp3.HttpUrlTest)
Running test: Test unprintableCharactersArePercentEncoded[Use get = false](okhttp3.HttpUrlTest)
Running test: Test equalsFromTrustManager(okhttp3.CertificateChainCleanerTest)
Running test: Test chainTooLong(okhttp3.CertificateChainCleanerTest)
Running test: Test singleTimeoutForAllFollowUpRequests(okhttp3.WholeOperationTimeoutTest)
Running test: Test timeoutProcessing(okhttp3.WholeOperationTimeoutTest)
Running test: Test asyncCallEngineInitialized(okhttp3.CallTest)
Running test: Test proxyAuthenticateOnConnect(okhttp3.CallTest)
Running test: Test unrelatedCertificatesAreOmitted(okhttp3.CertificateChainCleanerTest)
Running test: Test commonThenWildcard(okhttp3.ConnectionCoalescingTest)
Running test: Test requestHeaderNameWithSpaceForbidden(okhttp3.CallTest)
Running test: Test equalsFromCertificate(okhttp3.CertificateChainCleanerTest)
Running test: Test headResponseContentEncodingIsIgnored(okhttp3.CallTest)
Running test: Test unorderedChainOfCertificatesWithRoot(okhttp3.CertificateChainCleanerTest)
Running test: Test unorderedChainOfCertificatesWithoutRoot(okhttp3.CertificateChainCleanerTest)
Running test: Test connectTimeoutsAttemptsAlternateRoute(okhttp3.CallTest)
Running test: Test trustedRootNotSelfSigned(okhttp3.CertificateChainCleanerTest)
Running test: Test recoverFromTlsHandshakeFailure_Async(okhttp3.CallTest)
Running test: Test chainGoesAllTheWayToSelfSignedRoot(okhttp3.CertificateChainCleanerTest)
Running test: Test normalizeSingleSelfSignedCertificate(okhttp3.CertificateChainCleanerTest)
Running test: Test normalizeUnknownSelfSignedCertificate(okhttp3.CertificateChainCleanerTest)
Running test: Test noPreemptiveProxyAuthorization(okhttp3.CallTest)
Running test: Test orderedChainOfCertificatesWithoutRoot(okhttp3.CertificateChainCleanerTest)
Running test: Test chainMaxLength(okhttp3.CertificateChainCleanerTest)
Running test: Test coalescedConnectionDestroyedAfterAcquire(okhttp3.ConnectionCoalescingTest)
Running test: Test canceledBeforeExecute(okhttp3.CallTest)
Running test: Test repeatedHeaderNames(okhttp3.CallTest)
Running test: Test orderedChainOfCertificatesWithRoot(okhttp3.CertificateChainCleanerTest)
Running test: Test illegalToExecuteTwice_Async(okhttp3.CallTest)
Running test: Test cancelInFlightBeforeResponseReadThrowsIOE(okhttp3.CallTest)
Running test: Test idleCallbackInvokedWhenIdle(okhttp3.DispatcherTest)
Running test: Test leakedResponseBodyLogsStackTrace(okhttp3.CallTest)
Running test: Test increasingMaxRequestsPromotesJobsImmediately(okhttp3.DispatcherTest)
Running test: Test increasingMaxPerHostPromotesJobsImmediately(okhttp3.DispatcherTest)
Running test: Test executionRejectedImmediately(okhttp3.DispatcherTest)
Running test: Test executionRejectedAfterMaxRequestsChange(okhttp3.DispatcherTest)
Running test: Test oldJobFinishesNewJobWithSameHostStarts(okhttp3.DispatcherTest)
Running test: Test maxRequestsEnforced(okhttp3.DispatcherTest)
Running test: Test enqueuedCallsStillRespectMaxCallsPerHost(okhttp3.DispatcherTest)
Running test: Test maxPerHostNotEnforcedForWebSockets(okhttp3.DispatcherTest)
Running test: Test oldJobFinishesNewJobCanRunDifferentHost(okhttp3.DispatcherTest)
Running test: Test oldJobFinishesNewJobCantRunDueToHostLimit(okhttp3.DispatcherTest)
Running test: Test maxRequestsZero(okhttp3.DispatcherTest)
Running test: Test maxPerHostZero(okhttp3.DispatcherTest)
Running test: Test synchronousCallAccessors(okhttp3.DispatcherTest)
Running test: Test executionRejectedAfterMaxRequestsPerHostChange(okhttp3.DispatcherTest)
Running test: Test cancelingRunningJobTakesNoEffectUntilJobFinishes(okhttp3.DispatcherTest)
Running test: Test enqueuedJobsRunImmediately(okhttp3.DispatcherTest)
Running test: Test executionRejectedAfterPrecedingCallFinishes(okhttp3.DispatcherTest)
Running test: Test asyncCallAccessors(okhttp3.DispatcherTest)
Running test: Test maxPerHostEnforced(okhttp3.DispatcherTest)
Running test: Test stringBomUtf16Be(okhttp3.ResponseBodyTest)
Running test: Test stringBomUtf16Le(okhttp3.ResponseBodyTest)
Running test: Test stringBomUtf32Be(okhttp3.ResponseBodyTest)
Running test: Test stringBomUtf32Le(okhttp3.ResponseBodyTest)
Running test: Test bytesThrowsWhenLengthsDisagree(okhttp3.ResponseBodyTest)
Running test: Test stringEmpty(okhttp3.ResponseBodyTest)
Running test: Test readerExplicitCharset(okhttp3.ResponseBodyTest)
Running test: Test byteStreamClosesUnderlyingSource(okhttp3.ResponseBodyTest)
Running test: Test readerClosedBeforeBomClosesUnderlyingSource(okhttp3.ResponseBodyTest)
Running test: Test byteStringClosesUnderlyingSource(okhttp3.ResponseBodyTest)
Running test: Test readerBomUtf16Be(okhttp3.ResponseBodyTest)
Running test: Test readerBomUtf16Le(okhttp3.ResponseBodyTest)
Running test: Test readerBomUtf32Be(okhttp3.ResponseBodyTest)
Running test: Test readerBomUtf32Le(okhttp3.ResponseBodyTest)
Running test: Test stringExplicitCharset(okhttp3.ResponseBodyTest)
Running test: Test byteStringThrowsWhenLengthsDisagree(okhttp3.ResponseBodyTest)
Running test: Test sourceEmpty(okhttp3.ResponseBodyTest)
Running test: Test byteStringSeesBom(okhttp3.ResponseBodyTest)
Running test: Test bytesSeesBom(okhttp3.ResponseBodyTest)
Running test: Test bytesThrowsMoreThanIntMaxValue(okhttp3.ResponseBodyTest)
Running test: Test byteStreamEmpty(okhttp3.ResponseBodyTest)
Running test: Test stringBomUtf8(okhttp3.ResponseBodyTest)
Running test: Test byteStreamSeesBom(okhttp3.ResponseBodyTest)
Running test: Test readerEmpty(okhttp3.ResponseBodyTest)
Running test: Test expect100ContinueNonEmptyRequestBody(okhttp3.CallTest)
Running test: Test stringBomOverridesExplicitCharset(okhttp3.ResponseBodyTest)
Running test: Test stringDefaultsToUtf8(okhttp3.ResponseBodyTest)
Running test: Test throwingUnderlyingSourceClosesQuietly(okhttp3.ResponseBodyTest)
Running test: Test readerBomUtf8(okhttp3.ResponseBodyTest)
Running test: Test stringLooksLikeBomButTooShort(okhttp3.ResponseBodyTest)
Running test: Test byteStringEmpty(okhttp3.ResponseBodyTest)
Running test: Test readerClosedAfterBomClosesUnderlyingSource(okhttp3.ResponseBodyTest)
Running test: Test stringClosesUnderlyingSource(okhttp3.ResponseBodyTest)
Running test: Test byteStringThrowsMoreThanIntMaxValue(okhttp3.ResponseBodyTest)
Running test: Test bytesEmpty(okhttp3.ResponseBodyTest)
Running test: Test readerLooksLikeBomButTooShort(okhttp3.ResponseBodyTest)
Running test: Test bytesClosesUnderlyingSource(okhttp3.ResponseBodyTest)
Running test: Test sourceClosesUnderlyingSource(okhttp3.ResponseBodyTest)
Running test: Test sourceSeesBom(okhttp3.ResponseBodyTest)
Running test: Test readerDefaultsToUtf8(okhttp3.ResponseBodyTest)
Running test: Test punycodeDomainMatches(okhttp3.CookieTest)
Running test: Test reusedSourcesGetIndependentTimeoutInstances(okhttp3.CallTest)
Running test: Test simpleCookie(okhttp3.CookieTest)
Running test: Test defaultPathIsUsedIfPathDoesntHaveLeadingSlash(okhttp3.CookieTest)
Running test: Test builderDomainValidation(okhttp3.CookieTest)
Running test: Test pathAttributeDoesntNeedToMatch(okhttp3.CookieTest)
Running test: Test domainMatchesNoDomain(okhttp3.CookieTest)
Running test: Test builderIpv6(okhttp3.CookieTest)
Running test: Test builderPath(okhttp3.CookieTest)
Running test: Test emptyName(okhttp3.CookieTest)
Running test: Test lastExpiresAtWins(okhttp3.CookieTest)
Running test: Test builderClampsMaxDate(okhttp3.CookieTest)
Running test: Test invalidMinute(okhttp3.CookieTest)
Running test: Test invalidCharacters(okhttp3.CookieTest)
Running test: Test domainMatchesIpv6Address(okhttp3.CookieTest)
Running test: Test invalidSecond(okhttp3.CookieTest)
Running test: Test builderClampsMinDate(okhttp3.CookieTest)
Running test: Test builderExpiresAt(okhttp3.CookieTest)
Running test: Test maxAge(okhttp3.CookieTest)
Running test: Test emptyValue(okhttp3.CookieTest)
Running test: Test awkwardDates(okhttp3.CookieTest)
Running test: Test domainIsPublicSuffix(okhttp3.CookieTest)
Running test: Test invalidHour(okhttp3.CookieTest)
Running test: Test invalidYear(okhttp3.CookieTest)
Running test: Test domainMatchesIpAddress(okhttp3.CookieTest)
Running test: Test secure(okhttp3.CookieTest)
Running test: Test domainMatchesIpv6AddressWithCompression(okhttp3.CookieTest)
Running test: Test maxAgeOrExpiresMakesCookiePersistent(okhttp3.CookieTest)
Running test: Test equalsAndHashCode(okhttp3.CookieTest)
Running test: Test builderPathValidation(okhttp3.CookieTest)
Running test: Test builderDomain(okhttp3.CookieTest)
Running test: Test defaultPath(okhttp3.CookieTest)
Running test: Test hostOnly(okhttp3.CookieTest)
Running test: Test httpOnly(okhttp3.CookieTest)
Running test: Test expiresDate(okhttp3.CookieTest)
Running test: Test canceledBeforeResponseReadSignalsOnFailure_HTTPS(okhttp3.CallTest)
Running test: Test builderSecure(okhttp3.CookieTest)
Running test: Test builder(okhttp3.CookieTest)
Running test: Test ipv6AddressMalformed(okhttp3.CookieTest)
Running test: Test lastMaxAgeWins(okhttp3.CookieTest)
Running test: Test domainAndPath(okhttp3.CookieTest)
Running test: Test invalidMonth(okhttp3.CookieTest)
Running test: Test secureAndHttpOnly(okhttp3.CookieTest)
Running test: Test invalidDayOfMonth(okhttp3.CookieTest)
Running test: Test builderNameValidation(okhttp3.CookieTest)
Running test: Test builderValueValidation(okhttp3.CookieTest)
Running test: Test ipv6AddressDoesntMatch(okhttp3.CookieTest)
Running test: Test builderHttpOnly(okhttp3.CookieTest)
Running test: Test trimLeadingAndTrailingWhitespaceFromName(okhttp3.CookieTest)
Running test: Test parseAll(okhttp3.CookieTest)
Running test: Test maxAgeTakesPrecedenceOverExpires(okhttp3.CookieTest)
Running test: Test trimLeadingAndTrailingWhitespaceFromValue(okhttp3.CookieTest)
Running test: Test spaceInValue(okhttp3.CookieTest)
Running test: Test idnDomainMatches(okhttp3.CookieTest)
Running test: Test noEqualsSign(okhttp3.CookieTest)
Running test: Test maxAgeNonPositive(okhttp3.CookieTest)
Running test: Test domainMatchesIgnoresLeadingDot(okhttp3.CookieTest)
Running test: Test domainMatchesIpv6AddressWithIpv4Suffix(okhttp3.CookieTest)
Running test: Test domainIgnoredWithTrailingDot(okhttp3.CookieTest)
Running test: Test spaceInName(okhttp3.CookieTest)
Running test: Test domainMatches(okhttp3.CookieTest)
Running test: Test prefersExistingCompatible(okhttp3.ConnectionCoalescingTest)
Running test: Test canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce_HTTPS(okhttp3.CallTest)
Running test: Test interceptorGetsHttp2(okhttp3.CallTest)
Running test: Test clientReadsHeadersDataTrailers(okhttp3.DuplexTest)
Running test: Test skipsWhenCertificatePinningFails(okhttp3.ConnectionCoalescingTest)
Running test: Test emptyResponseBodyConnectionClose(okhttp3.EventListenerTest)
Running test: Test connectionPooling(okhttp3.CallTest)
Running test: Test failedSecureConnect(okhttp3.EventListenerTest)
Running test: Test http205WithBodyDisallowed(okhttp3.CallTest)
Running test: Test successfulCallEventSequence(okhttp3.EventListenerTest)
Running test: Test emptyResponseBody(okhttp3.EventListenerTest)
Running test: Test doesNotAttemptAuthorization21Times(okhttp3.CallTest)
Running test: Test duplexWithRedirect(okhttp3.DuplexTest)
Running test: Test reusedSinksGetIndependentTimeoutInstances(okhttp3.CallTest)
Running test: Test emptyResponseBody(okhttp3.CallTest)
Running test: Test requestHeaderNameWithTabForbidden(okhttp3.CallTest)
Running test: Test worksWithNetworkInterceptors(okhttp3.ConnectionCoalescingTest)
Running test: Test tlsTimeoutsNotRetried(okhttp3.CallTest)
Running test: Test duplexWith100Continue(okhttp3.DuplexTest)
Running test: Test exceptionThrownByOnResponseIsRedactedAndLogged(okhttp3.CallTest)
Running test: Test cleartextCallsFailWhenCleartextIsDisabled(okhttp3.CallTest)
Running test: Test connectionPoolingWithFreshClientSamePool(okhttp3.CallTest)
Running test: Test staleCoalescedConnection(okhttp3.ConnectionCoalescingTest)
Running test: Test http1DoesntSupportDuplex(okhttp3.DuplexTest)
Running test: Test retryOnUnavailableWith0RetryAfter(okhttp3.CallTest)
Running test: Test fullCallTimeoutDoesNotApplyOnceConnected(okhttp3.DuplexTest)
Running test: Test connectionReuseWhenResponseBodyConsumed_Async(okhttp3.CallTest)
Running test: Test uploadBodySmallChunkedEncoding(okhttp3.CallTest)
Running test: Test successfulChunkedH2CallEventSequence(okhttp3.EventListenerTest)
Running test: Test unspecifiedRequestBodyContentTypeDoesNotGetDefault(okhttp3.CallTest)
Running test: Test delete(okhttp3.CallTest)
Running test: Test legalToExecuteTwiceCloning_Async(okhttp3.CallTest)
Running test: Test canceledBeforeIOSignalsOnFailure_HTTPS(okhttp3.CallTest)
Running test: Test delete_HTTP_2(okhttp3.CallTest)
Running test: Test alternativeThenCommon(okhttp3.ConnectionCoalescingTest)
Running test: Test networkDropsOnConditionalGet(okhttp3.CallTest)
Running test: Test redirectsDoNotIncludeTooManyCookies(okhttp3.CallTest)
Running test: Test responseHeaderNameWithTabPermitted(okhttp3.CallTest)
Running test: Test clientReadsHeadersDataTrailersHttp1ChunkedTransferEncoding(okhttp3.CallTest)
Running test: Test invalidScheme(okhttp3.CallTest)
Running test: Test postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2(okhttp3.CallTest)
Running test: Test requestBodyEndsAfterResponseBody(okhttp3.DuplexTest)
Running test: Test successfulCallEventSequenceForEnqueue(okhttp3.EventListenerTest)
Running test: Test successfulHttpProxyConnect(okhttp3.EventListenerTest)
Running test: Test coalescesWhenCertificatePinsMatch(okhttp3.ConnectionCoalescingTest)
Running test: Test redirectUsingSameConnectionEventSequence(okhttp3.EventListenerTest)
Running test: Test applicationInterceptorProceedsMultipleTimes(okhttp3.EventListenerTest)
Running test: Test secondCallEventSequence(okhttp3.EventListenerTest)
Running test: Test headResponseContentLengthIsIgnored(okhttp3.CallTest)
Running test: Test duplexWithAuthChallenge(okhttp3.DuplexTest)
Running test: Test requestBodyRetransmittedOnClientRequestTimeout(okhttp3.CallTest)
Running test: Test successfulExpectContinuePermitsConnectionReuseWithHttp2(okhttp3.CallTest)
Running test: Test multipleDnsLookupsForSingleCall(okhttp3.EventListenerTest)
Running test: Test responseBodyFailHttp2OverHttps(okhttp3.EventListenerTest)
Running test: Test skipsWhenNotSubjectAltName(okhttp3.ConnectionCoalescingTest)
Running test: Test duplexWithRewriteInterceptors(okhttp3.DuplexTest)
Running test: Test fullCallTimeoutAppliesToSetup(okhttp3.DuplexTest)
Running test: Test failedConnect(okhttp3.EventListenerTest)
Running test: Test responseBodyFailHttp1OverHttps(okhttp3.EventListenerTest)
Running test: Test skipsWhenHostnameVerifierUsed(okhttp3.ConnectionCoalescingTest)
Running test: Test trueDuplexServerWritesFirst(okhttp3.DuplexTest)
Running test: Test noDnsLookupOnPooledConnection(okhttp3.EventListenerTest)
Running test: Test successfulEmptyH2CallEventSequence(okhttp3.EventListenerTest)
Running test: Test serverReadsHeadersData(okhttp3.DuplexTest)
Running test: Test requestBodySuccessHttp2OverHttps(okhttp3.EventListenerTest)
Running test: Test trueDuplexClientWritesFirst(okhttp3.DuplexTest)
Running test: Test requestBodySuccessStreaming(okhttp3.EventListenerTest)
Running test: Test successfulSocksProxyConnect(okhttp3.EventListenerTest)
Running test: Test commonThenAlternative(okhttp3.ConnectionCoalescingTest)
Running test: Test multipleConnectsForSingleCall(okhttp3.EventListenerTest)
Running test: Test readSettingsFrameTooShortFrameLength(okhttp3.internal.http2.Http2Test)
Running test: Test unknownFrameTypeSkipped(okhttp3.internal.http2.Http2Test)
Running test: Test readRstStreamFrame(okhttp3.internal.http2.Http2Test)
Running test: Test headersFrameThenContinuation(okhttp3.internal.http2.Http2Test)
Running test: Test goAwayWithDebugDataRoundTrip(okhttp3.internal.http2.Http2Test)
Running test: Test readSettingsFrameUnknownSettingId(okhttp3.internal.http2.Http2Test)
Running test: Test readPaddedHeadersFrameZeroPadding(okhttp3.internal.http2.Http2Test)
Running test: Test tooLargeDataFrame(okhttp3.internal.http2.Http2Test)
Running test: Test requestBodySuccessHttp1OverHttps(okhttp3.EventListenerTest)
Running test: Test compressedDataFrameWhenSettingDisabled(okhttp3.internal.http2.Http2Test)
Running test: Test readSettingsFrameTooLongFrameLength(okhttp3.internal.http2.Http2Test)
Running test: Test windowUpdateRoundTrip(okhttp3.internal.http2.Http2Test)
Running test: Test goAwayWithoutDebugDataRoundTrip(okhttp3.internal.http2.Http2Test)
Running test: Test pushPromise(okhttp3.internal.http2.Http2Test)
Running test: Test badWindowSizeIncrement(okhttp3.internal.http2.Http2Test)
Running test: Test readSettingsFrameNegativeWindowSize(okhttp3.internal.http2.Http2Test)
Running test: Test streamIdHasReservedBit(okhttp3.internal.http2.Http2Test)
Running test: Test readSettingsFrameNegativeFrameLength(okhttp3.internal.http2.Http2Test)
Running test: Test readSettingsFrameExperimentalId(okhttp3.internal.http2.Http2Test)
Running test: Test readPaddedHeadersFrame(okhttp3.internal.http2.Http2Test)
Running test: Test readPaddedDataFrame(okhttp3.internal.http2.Http2Test)
Running test: Test readSettingsFrame(okhttp3.internal.http2.Http2Test)
Running test: Test pingRoundTrip(okhttp3.internal.http2.Http2Test)
Running test: Test ackSettingsAppliesMaxFrameSize(okhttp3.internal.http2.Http2Test)
Running test: Test readPaddedDataFrameZeroPadding(okhttp3.internal.http2.Http2Test)
Running test: Test headersWithPriority(okhttp3.internal.http2.Http2Test)
Running test: Test pushPromiseThenContinuation(okhttp3.internal.http2.Http2Test)
Running test: Test readSettingsFrameInvalidPushValue(okhttp3.internal.http2.Http2Test)
Running test: Test maxLengthDataFrame(okhttp3.internal.http2.Http2Test)
Running test: Test onlyOneLiteralHeadersFrame(okhttp3.internal.http2.Http2Test)
Running test: Test readPaddedHeadersFrameThenContinuation(okhttp3.internal.http2.Http2Test)
Running test: Test frameSizeError(okhttp3.internal.http2.Http2Test)
Running test: Test dataFrameNotAssociateWithStream(okhttp3.internal.http2.Http2Test)
Running test: Test multipleCertificatesForOneHostname(okhttp3.CertificatePinnerTest)
Running test: Test unsuccessfulCheckForWildcardHostname(okhttp3.CertificatePinnerTest)
Running test: Test sameKeypairSamePin(okhttp3.CertificatePinnerTest)
Running test: Test unsuccessfulCheck(okhttp3.CertificatePinnerTest)
Running test: Test successfulMatchAcceptsAnyMatchingCertificate(okhttp3.CertificatePinnerTest)
Running test: Test malformedBase64(okhttp3.CertificatePinnerTest)
Running test: Test checkForHostnameWithDoubleAsterisk(okhttp3.CertificatePinnerTest)
Running test: Test successfulMatchAcceptsAnyMatchingCertificateForWildcardHostname(okhttp3.CertificatePinnerTest)
Running test: Test malformedPin(okhttp3.CertificatePinnerTest)
Running test: Test successfulCheck(okhttp3.CertificatePinnerTest)
Running test: Test multipleHostnamesForOneCertificate(okhttp3.CertificatePinnerTest)
Running test: Test absentHostnameMatches(okhttp3.CertificatePinnerTest)
Running test: Test multipleCertificatesForOneWildcardHostname(okhttp3.CertificatePinnerTest)
Running test: Test successfulCheckForOneHostnameWithWildcardAndDirectCertificate(okhttp3.CertificatePinnerTest)
Running test: Test unsuccessfulCheckForOneHostnameWithWildcardAndDirectCertificate(okhttp3.CertificatePinnerTest)
Running test: Test successfulCheckForWildcardHostname(okhttp3.CertificatePinnerTest)
Running test: Test nullCipherName(okhttp3.CipherSuiteTest)
Running test: Test applyIntersectionAddsTlsScsvForFallback(okhttp3.CipherSuiteTest)
Running test: Test javaName_equalsToString(okhttp3.CipherSuiteTest)
Running test: Test equals(okhttp3.CipherSuiteTest)
Running test: Test javaName_examples(okhttp3.CipherSuiteTest)
Running test: Test applyIntersectionAddsSslScsvForFallback(okhttp3.CipherSuiteTest)
Running test: Test forJavaName_fromLegacyEnumName(okhttp3.CipherSuiteTest)
Running test: Test applyIntersectionRetainsTlsPrefixes(okhttp3.CipherSuiteTest)
Running test: Test applyIntersectionRetainsSslPrefixes(okhttp3.CipherSuiteTest)
Running test: Test forJavaName_acceptsArbitraryStrings(okhttp3.CipherSuiteTest)
Running test: Test applyIntersectionToProtocolVersion(okhttp3.CipherSuiteTest)
Running test: Test hashCode_usesIdentityHashCode_regularCase(okhttp3.CipherSuiteTest)
Running test: Test hashCode_usesIdentityHashCode_legacyCase(okhttp3.CipherSuiteTest)
Running test: Test multipleSecureConnectsForSingleCall(okhttp3.EventListenerTest)
Running test: Test streamTimeoutDegradesConnectionAfterNoPong[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test instancesAreInterned_survivesGarbageCollection(okhttp3.CipherSuiteTest)
Running test: Test instancesAreInterned(okhttp3.CipherSuiteTest)
Running test: Test testProxyDefaults(okhttp3.OkHttpClientTest)
Running test: Test nullInterceptor(okhttp3.OkHttpClientTest)
Running test: Test nullDefaultProxySelector(okhttp3.OkHttpClientTest)
Running test: Test testH2PriorKnowledgeOkHttpClientConstructionDuplicates(okhttp3.OkHttpClientTest)
Running test: Test sslSocketFactorySetAsSocketFactory(okhttp3.OkHttpClientTest)
Running test: Test nullInterceptorInList(okhttp3.OkHttpClientTest)
Running test: Test clonedInterceptorsListsAreIndependent(okhttp3.OkHttpClientTest)
Running test: Test certificatePinnerEquality(okhttp3.OkHttpClientTest)
Running test: Test testH2PriorKnowledgeOkHttpClientConstructionFallback(okhttp3.OkHttpClientTest)
Running test: Test cloneSharesStatefulInstances(okhttp3.OkHttpClientTest)
Running test: Test nullNetworkInterceptor(okhttp3.OkHttpClientTest)
Running test: Test nullNetworkInterceptorInList(okhttp3.OkHttpClientTest)
Running test: Test nullProtocolInList(okhttp3.OkHttpClientTest)
Running test: Test testH2PriorKnowledgeOkHttpClientConstructionSuccess(okhttp3.OkHttpClientTest)
Running test: Test nullHostileProtocolList(okhttp3.OkHttpClientTest)
Running test: Test timeoutValidRange(okhttp3.OkHttpClientTest)
Running test: Test spdy3IsRemovedFromProtocols(okhttp3.OkHttpClientTest)
Running test: Test successfulChunkedHttpsCallEventSequence(okhttp3.EventListenerTest)
Running test: Test noSslSocketFactoryConfigured(okhttp3.OkHttpClientTest)
Running test: Test setProtocolsRejectsHttp10(okhttp3.OkHttpClientTest)
Running test: Test durationDefaults(okhttp3.OkHttpClientTest)
Running test: Test httpUrl[Parsing: <http://example	.
org> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://user:pass@foo:21/bar;par?b#c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:foo.com> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <	   :foo.com   
> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test pooledConnectionFound(okhttp3.EventListenerTest)
Running test: Test httpUrl[Parsing: < foo.com  > against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <a:	 foo.com> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:21/ b ? d # e > against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:0/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:00000000000000/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:00000000000000000000080/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:b/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f: /c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:
/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:fifty-two/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f:999999/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://f: 21 / b ? d # e > against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <  	> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <:foo.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <:foo.com\> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <:> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <:a> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <:/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <:\> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <:#> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <#> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <#/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <#\> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <#;?> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <?> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <:23> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </:23> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <::> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <::23> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <foo://> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://a:b@c:29/d> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http::@c:29> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://&a:foo(b]c@d:2/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://::@c@d:2> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo.com:b@d/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo.com/\@> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:\\foo.com\> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:\\a\b:c\d@foo.com\> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <foo:/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <foo:/bar.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <foo://///////> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <foo://///////bar.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <foo:////://///> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <c:/foo> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <//foo/bar> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo/path;a??e#f#g> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo/abcd?efgh?ijkl> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo/abcd#foo?bar> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test failedDnsLookup(okhttp3.EventListenerTest)
Running test: Test httpUrl[Parsing: <[61:24:74]:98> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:[61:27]/:foo> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://[1::2]:3:4> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://2001::1> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://2001::1]> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://2001::1]:80> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://[2001::1]> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://[2001::1]:80> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftp:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <https:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <madeupscheme:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftps:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <gopher:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ws:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <wss:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <data:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <javascript:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <mailto:/example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftp:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <https:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <madeupscheme:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftps:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <gopher:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ws:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <wss:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <data:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <javascript:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <mailto:example.com/> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </a/b/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </a/ /c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </a%2fc> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </a/%2f/c> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <#β> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file:c:\foo\bar.html> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <  File:c|////foo\bar.html> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <C|/foo/bar> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </C|\foo\bar> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <//C|/foo/bar> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <//server/file> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <\\server\file> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </\server/file> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file:///foo/bar.txt> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file:///home/me> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <//> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <///> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <///test> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file://test> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file://localhost> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file://localhost/> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file://localhost/test> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <test> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file:test> against <file:///tmp/mock/path>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/././foo> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/./.foo> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/.> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/./> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/bar/..> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/bar/../> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/..bar> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/bar/../ton> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/bar/../ton/../../a> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/../../..> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/../../../ton> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/%2e> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/%2e%2> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/%2e./%2e%2e/.%2e/%2e.bar> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com////../..> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/bar//../..> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo/bar//..> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test canceledCallEventSequence(okhttp3.EventListenerTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/%20foo> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo%> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo%2> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo%2zbar> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo%2Â©zbar> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo%41%7a> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo	%91> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo%00%51> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/(%28:%3A%29)> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/%3A%3a%3C%3c> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/foo	bar> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com\\foo\\bar> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/%7Ffp3%3Eju%3Dduvgw%3Dd> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/@asdf%40> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/你好你好> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/‥/foo> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/﻿/foo> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example.com/‮/foo/‭/bar> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://www.google.com/foo?bar=baz#> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://www.google.com/foo?bar=baz# »> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <data:test# »> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://[www.google.com]/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://www.google.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://192.0x00A80001> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://www/foo%2Ehtml> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test successfulConnectionFound(okhttp3.EventListenerTest)
Running test: Test httpUrl[Parsing: <http://www/foo/%2E/html> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://user:pass@/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%25DOMAIN:foobar@foodomain.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:\\www.google.com\foo> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo:80/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo:81/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <httpa://foo:80/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo:-80/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <https://foo:443/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <https://foo:80/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftp://foo:21/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftp://foo:80/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <gopher://foo:70/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <gopher://foo:443/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ws://foo:80/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ws://foo:81/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ws://foo:443/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ws://foo:815/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <wss://foo:80/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <wss://foo:81/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <wss://foo:443/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <wss://foo:815/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftp:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <https:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <madeupscheme:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <file:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftps:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <gopher:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ws:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <wss:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <data:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <javascript:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <mailto:/example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftp:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <https:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <madeupscheme:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ftps:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <gopher:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <ws:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <wss:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <data:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <javascript:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <mailto:example.com/> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:a:b@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/a:b@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://a:b@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://@pple.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http::b@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/:b@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://:b@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/:@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://user@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <https:@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:a:b@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/a:b@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test expectContinueStartsResponseHeadersEarly(okhttp3.EventListenerTest)
Running test: Test httpUrl[Parsing: <http://a:b@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http::@/www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:a:@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/a:@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://a:@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://www.@pple.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:@:www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http:/@:www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://@:www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://:@www.example.com> against <about:blank>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: </test.txt> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <.> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <..> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <test.txt> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <./test.txt> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <../test.txt> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <../aaa/test.txt> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <../../test.txt> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <中/test.txt> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://www.example2.com> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <//www.example2.com> against <http://www.example.com/test>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://ExAmPlE.CoM> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://example example.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://Goo%20 goo%7C|.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://GOO 　goo.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test failedDribbledCallEventSequence(okhttp3.EventListenerTest)
Running test: Test httpUrl[Parsing: <http://GOO​⁠﻿goo.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://www.foo。bar.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://﷐zyx.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://Ｇｏ.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://％４１.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://％００.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%ef%bc%85%ef%bc%90%ef%bc%90.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://你好你好> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%zz%66%a.com> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%25> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://hello%00> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%30%78%63%30%2e%30%32%35%30.01> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%30%78%63%30%2e%30%32%35%30.01%2e> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://192.168.0.257> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://%3g%78%63%30%2e%30%32%35%30%2E.01> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://192.168.0.1 hello> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://０Ｘｃ０．０２５０．０１> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://[google.com]> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <http://foo:💩@example.com/bar> against <http://other.com/>](okhttp3.WebPlatformUrlTest)
Running test: Test httpUrl[Parsing: <x> against <test:test>](okhttp3.WebPlatformUrlTest)
Running test: Test roundTripForRequestAndResponse(okhttp3.internal.http2.HuffmanTest)
Running test: Test dynamicTableSizeHasAnUpperBound(okhttp3.internal.http2.HpackTest)
Running test: Test literalHeaderFieldNeverIndexedNewName(okhttp3.internal.http2.HpackTest)
Running test: Test writeMultibyteInt(okhttp3.internal.http2.HpackTest)
Running test: Test mixedCaseHeaderNameIsMalformed(okhttp3.internal.http2.HpackTest)
Running test: Test max31BitValue(okhttp3.internal.http2.HpackTest)
Running test: Test readIndexedHeaderFieldFromStaticTableWithoutBuffering(okhttp3.internal.http2.HpackTest)
Running test: Test readFailingRequestExample(okhttp3.internal.http2.HpackTest)
Running test: Test emitsDynamicTableSizeUpdate(okhttp3.internal.http2.HpackTest)
Running test: Test staticTableIndexedHeaders(okhttp3.internal.http2.HpackTest)
Running test: Test prefixMask(okhttp3.internal.http2.HpackTest)
Running test: Test manyDynamicTableSizeChanges(okhttp3.internal.http2.HpackTest)
Running test: Test readLiteralHeaderFieldWithIndexing(okhttp3.internal.http2.HpackTest)
Running test: Test emptyHeaderName(okhttp3.internal.http2.HpackTest)
Running test: Test huffmanEncode(okhttp3.internal.http2.HpackTest)
Running test: Test noDynamicTableSizeUpdateWhenSizeIsEqual(okhttp3.internal.http2.HpackTest)
Running test: Test literalHeaderFieldNeverIndexedIndexedName(okhttp3.internal.http2.HpackTest)
Running test: Test doNotIndexPseudoHeaders(okhttp3.internal.http2.HpackTest)
Running test: Test readIndexedHeaderFieldIndex0(okhttp3.internal.http2.HpackTest)
Running test: Test literalHeaderFieldWithIncrementalIndexingIndexedName(okhttp3.internal.http2.HpackTest)
Running test: Test shrinkDynamicTableSize(okhttp3.internal.http2.HpackTest)
Running test: Test literalHeaderFieldWithoutIndexingIndexedName(okhttp3.internal.http2.HpackTest)
Running test: Test readMultibyteInt(okhttp3.internal.http2.HpackTest)
Running test: Test readSingleByteInt(okhttp3.internal.http2.HpackTest)
Running test: Test incrementalIndexingWithAuthorityPseudoHeader(okhttp3.internal.http2.HpackTest)
Running test: Test zero(okhttp3.internal.http2.HpackTest)
Running test: Test readRequestExamplesWithHuffman(okhttp3.internal.http2.HpackTest)
Running test: Test cannotSetTableSizeLargerThanSettingsValue(okhttp3.internal.http2.HpackTest)
Running test: Test tooLargeToHPackIsStillEmitted(okhttp3.internal.http2.HpackTest)
Running test: Test literalHeaderFieldWithIncrementalIndexingNewName(okhttp3.internal.http2.HpackTest)
Running test: Test huffmanDecodingSupported(okhttp3.internal.http2.HpackTest)
Running test: Test readHeaderTableStateChangeInsidiousMaxHeaderByteCount(okhttp3.internal.http2.HpackTest)
Running test: Test incrementalIndexingWithDynamcTableIndexedName(okhttp3.internal.http2.HpackTest)
Running test: Test lowercaseHeaderNameBeforeEmit(okhttp3.internal.http2.HpackTest)
Running test: Test growDynamicTableSize(okhttp3.internal.http2.HpackTest)
Running test: Test literalHeaderFieldWithoutIndexingNewName(okhttp3.internal.http2.HpackTest)
Running test: Test incrementalIndexingWithStaticTableIndexedName(okhttp3.internal.http2.HpackTest)
Running test: Test staticHeaderIsNotCopiedIntoTheIndexedTable(okhttp3.internal.http2.HpackTest)
Running test: Test readRequestExamplesWithoutHuffman(okhttp3.internal.http2.HpackTest)
Running test: Test readLiteralHeaderWithIncrementalIndexingDynamicName(okhttp3.internal.http2.HpackTest)
Running test: Test readIndexedHeaderFieldInsidiousIndex(okhttp3.internal.http2.HpackTest)
Running test: Test readerEviction(okhttp3.internal.http2.HpackTest)
Running test: Test dynamicTableEvictionWhenSizeLowered(okhttp3.internal.http2.HpackTest)
Running test: Test dynamicallyGrowsBeyond64Entries(okhttp3.internal.http2.HpackTest)
Running test: Test prefixMaskMinusOne(okhttp3.internal.http2.HpackTest)
Running test: Test writerEviction(okhttp3.internal.http2.HpackTest)
Running test: Test writeSingleByteInt(okhttp3.internal.http2.HpackTest)
Running test: Test readLiteralHeaderWithIncrementalIndexingStaticName(okhttp3.internal.http2.HpackTest)
Running test: Test theSameHeaderAfterOneIncrementalIndexed(okhttp3.internal.http2.HpackTest)
Running test: Test dynamicTableIndexedHeader(okhttp3.internal.http2.HpackTest)
Running test: Test largeHeaderValue(okhttp3.internal.http2.HpackTest)
Running test: Test noEvictionOnDynamicTableSizeIncrease(okhttp3.internal.http2.HpackTest)
Running test: Test minMaxHeaderTableSize(okhttp3.internal.http2.HpackTest)
Running test: Test readIndexedHeaderFieldTooLargeIndex(okhttp3.internal.http2.HpackTest)
Running test: Test alwaysBuilds(okhttp3.internal.platform.PlatformTest)
Running test: Test defaultPrefix(okhttp3.internal.platform.PlatformTest)
Running test: Test testToStringIsClassname(okhttp3.internal.platform.PlatformTest)
Running test: Test requestBodyFailHttp(okhttp3.EventListenerTest)
Running test: Test proxyDnsFailureContinuesToNextProxy(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test failedRouteWithMultipleProxies(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test singleRoute(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test failedRouteWithSingleProxy(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test getHostString(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test proxySelectorReturnsMultipleProxies(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test proxySelectorReturnsNoProxies(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test singleRouteReturnsFailedRoute(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test explicitProxyTriesThatProxysAddressesOnly(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test multipleProxiesMultipleInetAddressesMultipleConfigurations(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test proxySelectorDirectConnectionsAreSkipped(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test proxySelectorReturnsNull(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test explicitDirectProxy(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test routeToString(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test queryForAllSelectedRoutes(okhttp3.internal.connection.RouteSelectorTest)
Running test: Test shoutcast(okhttp3.internal.http.StatusLineTest)
Running test: Test wrongMessageDelimiter(okhttp3.internal.http.StatusLineTest)
Running test: Test nonThreeDigitCode(okhttp3.internal.http.StatusLineTest)
Running test: Test protocolVersions(okhttp3.internal.http.StatusLineTest)
Running test: Test emptyMessageAndNoLeadingSpace(okhttp3.internal.http.StatusLineTest)
Running test: Test missingProtocol(okhttp3.internal.http.StatusLineTest)
Running test: Test parse(okhttp3.internal.http.StatusLineTest)
Running test: Test emptyMessage(okhttp3.internal.http.StatusLineTest)
Running test: Test truncated(okhttp3.internal.http.StatusLineTest)
Running test: Test pinIntermediatePresentInChain(okhttp3.internal.tls.CertificatePinnerChainValidationTest)
Running test: Test pinRootNotPresentInChain(okhttp3.internal.tls.CertificatePinnerChainValidationTest)
Running test: Test applicationInterceptorShortCircuit(okhttp3.EventListenerTest)
Running test: Test responseBodyFailHttp(okhttp3.EventListenerTest)
Running test: Test requestBodySuccessHttp(okhttp3.EventListenerTest)
Running test: Test redirectUsingNewConnectionEventSequence(okhttp3.EventListenerTest)
Running test: Test failedCallEventSequence(okhttp3.EventListenerTest)
Running test: Test recoverFromConnectionNoNewStreamsOnFollowUp[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test noRecoveryFromRefusedStreamWithRetryDisabled[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test unrelatedPinnedLeafCertificateInChain(okhttp3.internal.tls.CertificatePinnerChainValidationTest)
Running test: Test readTimeoutOnSlowConnection[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test unrelatedPinnedIntermediateCertificateInChain(okhttp3.internal.tls.CertificatePinnerChainValidationTest)
Running test: Test throwingOnFailLogs(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test non101RetainsBody(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test throwingOnMessageClosesImmediatelyAndFails(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test nullByteStringThrows(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test webSocketConnectionIsReleased(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test wsScheme(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test readTimeoutAppliesToHttpRequest(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test webSocketAndApplicationInterceptors(okhttp3.internal.ws.WebSocketHttpTest)

okhttp3.internal.ws.WebSocketHttpTest > webSocketAndApplicationInterceptors FAILED
    org.junit.ComparisonFailure: expected:<[0]> but was:<[1]>
Running test: Test missingConnectionHeader(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test binaryMessage(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test receiveResponseCookies[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test clientPingsServerOnInterval(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test serverSendsPushPromise_GET[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test settingsLimitsMaxConcurrentStreams[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test concurrentRequestWithEmptyFlowControlWindow[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test nonAsciiResponseHeader[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test responsesAreCached[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test noRecoveryFromInternalErrorWithRetryDisabled[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test successfulDnsLookup(okhttp3.EventListenerTest)
Running test: Test sendRequestCookies[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test successfulEmptyHttpsCallEventSequence(okhttp3.EventListenerTest)
Running test: Test connectionShutdownAfterHealthCheck[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test emptyDnsLookup(okhttp3.EventListenerTest)
Running test: Test noSecureConnectsOnPooledConnection(okhttp3.EventListenerTest)
Running test: Test redirect[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test recoverFromMultipleRefusedStreamsRequiresNewConnection[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test cancelWhileWritingRequestBodySendsCancelToServer[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test responseCachedWithoutConsumingFullBody[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test recoverFromCancelReusesConnection[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test requestBodyFailHttp2OverHttps(okhttp3.EventListenerTest)
Running test: Test closeReasonMaximumLength(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test readTimeoutDoesNotApplyAcrossFrames(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test webSocketsDontTriggerEventListener(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test clientCancelsIfCloseIsNotAcknowledged(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test readTimeoutAppliesWithinFrames(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test missingUpgradeHeader(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test wssScheme(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test wsUppercaseScheme(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test throwingOnClosingClosesImmediatelyAndFails(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test wrongMagicHeader(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test nullStringThrows(okhttp3.internal.ws.WebSocketHttpTest)

okhttp3.internal.ws.WebSocketHttpTest > nullStringThrows FAILED
    org.junit.ComparisonFailure: expected:<[0]> but was:<[1]>
Running test: Test closeReasonTooLong(okhttp3.internal.ws.WebSocketHttpTest)

okhttp3.internal.ws.WebSocketHttpTest > closeReasonTooLong FAILED
    org.junit.ComparisonFailure: expected:<[0]> but was:<[1]>
Running test: Test wrongUpgradeHeader(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test requestBodyFailHttp1OverHttps(okhttp3.EventListenerTest)
Running test: Test textMessage(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test wrongConnectionHeader(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test callTimeoutAppliesToSetup(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test unplannedCloseHandledWithoutFailure(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test unacknowledgedPingFailsConnection(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test interceptorCallsProceedWithoutClosingPriorResponse(okhttp3.CallTest)
Running test: Test anonCipherSuiteUnsupported(okhttp3.CallTest)
Running test: Test secureConnectWithTunnel(okhttp3.EventListenerTest)

okhttp3.CallTest > anonCipherSuiteUnsupported FAILED
    java.lang.AssertionError: Expected exception type among [class javax.net.ssl.SSLHandshakeException], got javax.net.ssl.SSLPeerUnverifiedException: Hostname localhost not verified (no certificates)
        at okhttp3.RecordedResponse.assertFailure(RecordedResponse.java:155)
        at okhttp3.CallTest.anonCipherSuiteUnsupported(CallTest.java:1403)
Running test: Test legalToExecuteTwiceCloning(okhttp3.CallTest)
Running test: Test authenticateWithNoConnection(okhttp3.CallTest)
Running test: Test postRedirectsToGet(okhttp3.CallTest)
Running test: Test successfulSecureConnect(okhttp3.EventListenerTest)
Running test: Test postBodyRetransmittedOnFailureRecovery(okhttp3.CallTest)
Running test: Test cancelWhileRequestHeadersAreSent_HTTP_2(okhttp3.CallTest)
Running test: Test head_HTTP_2(okhttp3.CallTest)
Running test: Test httpsScheme(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test authenticatingTunnelProxyConnect(okhttp3.EventListenerTest)
Running test: Test clientTimeoutClosesBody(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test unplannedCloseHandledByCloseWithoutFailure(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test missingMagicHeader(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test notFound(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test overflowOutgoingQueue(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test readTimeoutFails(okhttp3.CallTest)
Running test: Test responseBodyClosedClosedWithoutReadingAllData(okhttp3.EventListenerTest)
Running test: Test canceledBeforeResponseReadSignalsOnFailure_HTTP_2(okhttp3.CallTest)
Running test: Test postEmptyBodyRetransmittedAfterAuthorizationFail_HTTPS(okhttp3.CallTest)
Running test: Test concurrentHttp2ConnectionsDeduplicated[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test readResponseHeaderTimeout[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test clientDoesNotPingServerByDefault(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test expect100ContinueTimesOutWithoutContinue_HTTP2(okhttp3.CallTest)
Running test: Test successfulConnect(okhttp3.EventListenerTest)
Running test: Test noConnectionFoundOnFollowUp(okhttp3.EventListenerTest)
Running test: Test successfulCallEventSequenceWithListener(okhttp3.EventListenerTest)
Running test: Test requestBodyMultipleFailuresReportedOnlyOnce(okhttp3.EventListenerTest)
Running test: Test proxyDisconnectsAfterRequest(okhttp3.CallTest)
Running test: Test invalidHost(okhttp3.CallTest)
Running test: Test invalidPort(okhttp3.CallTest)
Running test: Test asyncLeakedResponseBodyLogsStackTrace(okhttp3.CallTest)
Running test: Test cancelWithStreamNotCompleted[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test callTimeoutDoesNotApplyOnceConnected(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test conditionalCache[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test domainFronting[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test requestBodySuccessEmpty(okhttp3.EventListenerTest)
Running test: Test onlyIfCachedReturns504WhenNotCached(okhttp3.CallTest)
Running test: Test multipleConnectionsFoundForSingleCall(okhttp3.EventListenerTest)
Running test: Test testGetKnown(okhttp3.ProtocolTest)
Running test: Test testToString(okhttp3.ProtocolTest)
Running test: Test testGetUnknown(okhttp3.ProtocolTest)
Running test: Test timeDurationTruncatedToMaxValue(okhttp3.CacheControlTest)
Running test: Test timePrecisionIsTruncatedToSeconds(okhttp3.CacheControlTest)
Running test: Test parseCacheControlAndPragmaAreCombined(okhttp3.CacheControlTest)
Running test: Test requestBodySurvivesRetries(okhttp3.CallTest)
Running test: Test parseCacheControlHeaderValueInvalidatedByPragma(okhttp3.CacheControlTest)
Running test: Test parseEmpty(okhttp3.CacheControlTest)
Running test: Test computedHeaderValueIsCached(okhttp3.CacheControlTest)
Running test: Test parseCacheControlHeaderValueIsRetained(okhttp3.CacheControlTest)
Running test: Test parseIgnoreCacheControlExtensions(okhttp3.CacheControlTest)
Running test: Test secondsMustBeNonNegative(okhttp3.CacheControlTest)
Running test: Test parseCacheControlHeaderValueInvalidatedByTwoValues(okhttp3.CacheControlTest)
Running test: Test parse(okhttp3.CacheControlTest)
Running test: Test emptyBuilderIsEmpty(okhttp3.CacheControlTest)
Running test: Test connectionWindowUpdateOnClose[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test parsePragmaHeaderValueIsNotRetained(okhttp3.CacheControlTest)
Running test: Test completeBuilder(okhttp3.CacheControlTest)
Running test: Test connectionsAreNotReusedWithUnknownLengthResponseBody(okhttp3.ConnectionReuseTest)
Running test: Test requestCookies(okhttp3.CallTest)
Running test: Test connectionsAreNotReusedIfNetworkInterceptorInterferes(okhttp3.ConnectionReuseTest)
Running test: Test connectionsAreReusedWithHttp2(okhttp3.ConnectionReuseTest)
Running test: Test recoverWhenRetryOnConnectionFailureIsTrue_HTTP2(okhttp3.CallTest)
Running test: Test throwingOnOpenFailsImmediately(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test webSocketAndNetworkInterceptors(okhttp3.internal.ws.WebSocketHttpTest)
Running test: Test serverMessage(okhttp3.internal.ws.WebSocketHttpTest)

okhttp3.internal.ws.WebSocketHttpTest > serverMessage FAILED
    org.junit.ComparisonFailure: expected:<[0]> but was:<[1]>
Running test: Test checkRemoteDNSResolve(okhttp3.SocksProxyTest)
Running test: Test proxy(okhttp3.SocksProxyTest)
Running test: Test connectionsReusedWithRedirectEvenIfPoolIsSizeZero(okhttp3.ConnectionReuseTest)
Running test: Test pingsTransmitted[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test http2ConnectionsAreSharedBeforeResponseIsConsumed(okhttp3.ConnectionReuseTest)
Running test: Test proxySelector(okhttp3.SocksProxyTest)
Running test: Test postBodyRetransmittedOnFailureRecovery_HTTP2(okhttp3.CallTest)
Running test: Test doubleWildcardHostnameShouldNotMatchSuffix(okhttp3.CertificatePinnerKotlinTest)
Running test: Test successfulCheckSha1Pin(okhttp3.CertificatePinnerKotlinTest)
Running test: Test successfulFindMatchingPinsIgnoresCase(okhttp3.CertificatePinnerKotlinTest)
Running test: Test checkSubstringMatch(okhttp3.CertificatePinnerKotlinTest)
Running test: Test successfulFindMatchingPinPunycode(okhttp3.CertificatePinnerKotlinTest)
Running test: Test successfulFindMatchingPinsForWildcardAndDirectCertificates(okhttp3.CertificatePinnerKotlinTest)
Running test: Test wildcardHostnameShouldNotMatchThroughDot(okhttp3.CertificatePinnerKotlinTest)
Running test: Test successfulFindMatchingPins(okhttp3.CertificatePinnerKotlinTest)
Running test: Test doubleWildcardHostnameShouldMatchThroughDot(okhttp3.CertificatePinnerKotlinTest)
Running test: Test connectionsAreNotReusedWithRequestConnectionClose(okhttp3.ConnectionReuseTest)
Running test: Test connectionsNotReusedWithRedirectIfDiscardingResponseIsSlow(okhttp3.ConnectionReuseTest)
Running test: Test testDoesntMatchSupportedCustomSocketFactory[okhttp3.internal.platform.android.ConscryptSocketAdapter@f4136cb](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testMatchesSupportedAndroidSocketFactory[okhttp3.internal.platform.android.ConscryptSocketAdapter@f4136cb](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testCustomSocket[okhttp3.internal.platform.android.ConscryptSocketAdapter@f4136cb](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testMatchesSupportedSocket[okhttp3.internal.platform.android.ConscryptSocketAdapter@f4136cb](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testDoesntMatchSupportedCustomSocketFactory[okhttp3.internal.platform.android.DeferredSocketAdapter@7d835646](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testMatchesSupportedAndroidSocketFactory[okhttp3.internal.platform.android.DeferredSocketAdapter@7d835646](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testCustomSocket[okhttp3.internal.platform.android.DeferredSocketAdapter@7d835646](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testMatchesSupportedSocket[okhttp3.internal.platform.android.DeferredSocketAdapter@7d835646](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testDoesntMatchSupportedCustomSocketFactory[okhttp3.internal.platform.android.AndroidSocketAdapter@1faaf137](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testMatchesSupportedAndroidSocketFactory[okhttp3.internal.platform.android.AndroidSocketAdapter@1faaf137](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testCustomSocket[okhttp3.internal.platform.android.AndroidSocketAdapter@1faaf137](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testMatchesSupportedSocket[okhttp3.internal.platform.android.AndroidSocketAdapter@1faaf137](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testDoesntMatchSupportedCustomSocketFactory[okhttp3.internal.platform.android.StandardAndroidSocketAdapter@6b254301](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testMatchesSupportedAndroidSocketFactory[okhttp3.internal.platform.android.StandardAndroidSocketAdapter@6b254301](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testCustomSocket[okhttp3.internal.platform.android.StandardAndroidSocketAdapter@6b254301](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test testMatchesSupportedSocket[okhttp3.internal.platform.android.StandardAndroidSocketAdapter@6b254301](okhttp3.internal.platform.android.AndroidSocketAdapterTest)
Running test: Test format(okhttp3.internal.http.HttpDateTest)
Running test: Test parseStandardFormats(okhttp3.internal.http.HttpDateTest)
Running test: Test parseNonStandardStrings(okhttp3.internal.http.HttpDateTest)
Running test: Test http204WithBodyDisallowed(okhttp3.CallTest)
Running test: Test redirect(okhttp3.CallTest)
Running test: Test get[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test conditionalCacheHit_Async(okhttp3.CallTest)
Running test: Test userSuppliedContentLengthHeader[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test cannotRetryOneShotRequestBody(okhttp3.CallTest)
Running test: Test recoverFromMultipleCancelReusesConnection[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test redirect_Async(okhttp3.CallTest)
Running test: Test put_HTTP_2(okhttp3.CallTest)
Running test: Test canRetryNormalRequestBody(okhttp3.CallTest)
Running test: Test responseHeaderNameWithSpacePermitted(okhttp3.CallTest)
Running test: Test disableClientRequestTimeoutRetry(okhttp3.CallTest)
Running test: Test serverSendsInvalidCodeNotANumber(okhttp3.CallTest)
Running test: Test userAgentIsIncludedByDefault(okhttp3.CallTest)
Running test: Test doesNotFollow21Redirects_Async(okhttp3.CallTest)
Running test: Test connectionsAreNotReusedWithResponseConnectionClose(okhttp3.ConnectionReuseTest)
Running test: Test connectionsAreNotReusedIfPoolIsSizeZero(okhttp3.ConnectionReuseTest)
Running test: Test connectionsAreNotReusedIfHostnameVerifierChanges(okhttp3.ConnectionReuseTest)
Running test: Test staleConnectionNotReusedForNonIdempotentRequest(okhttp3.ConnectionReuseTest)
Running test: Test connectionsAreReused(okhttp3.ConnectionReuseTest)
Running test: Test connectionsAreNotReusedIfSslSocketFactoryChanges(okhttp3.ConnectionReuseTest)
Running test: Test connectionsAreEvicted(okhttp3.ConnectionReuseTest)
Running test: Test post_HTTP_2(okhttp3.CallTest)
Running test: Test canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce_HTTP_2(okhttp3.CallTest)
Running test: Test silentRetryWhenIdempotentRequestFailsOnReusedConnection(okhttp3.ConnectionReuseTest)
Running test: Test manualCharset(okhttp3.FormBodyTest)
Running test: Test urlEncoding(okhttp3.FormBodyTest)
Running test: Test encodeMultiplePairs(okhttp3.FormBodyTest)
Running test: Test buildEmptyForm(okhttp3.FormBodyTest)
Running test: Test addEncoded(okhttp3.FormBodyTest)
Running test: Test characterEncoding(okhttp3.FormBodyTest)
Running test: Test encodedPair(okhttp3.FormBodyTest)
Running test: Test applicationInterceptorsCanShortCircuitResponses(okhttp3.InterceptorTest)
Running test: Test proxyAuthenticateOnConnectWithConnectionClose(okhttp3.CallTest)

okhttp3.InterceptorTest > applicationInterceptorsCanShortCircuitResponses FAILED
    java.util.concurrent.RejectedExecutionException: Task okhttp3.internal.concurrent.TaskRunner$runnable$1@34362c0f rejected from java.util.concurrent.ThreadPoolExecutor@568c1d96[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 1]
Running test: Test applicationInterceptorsRewriteRequestToServer(okhttp3.InterceptorTest)
Running test: Test applicationInterceptorsCanMakeMultipleRequestsToServer(okhttp3.InterceptorTest)
Running test: Test networkInterceptorThrowsRuntimeExceptionAsynchronous(okhttp3.InterceptorTest)
Running test: Test networkInterceptorsCannotChangeServerAddress(okhttp3.InterceptorTest)
Running test: Test networkInterceptorsHaveConnectionAccess(okhttp3.InterceptorTest)
Running test: Test multipleNetworkInterceptors(okhttp3.InterceptorTest)
Running test: Test applicationInterceptorReturnsNull(okhttp3.InterceptorTest)
Running test: Test networkInterceptorsCanChangeRequestMethodFromGetToPost(okhttp3.InterceptorTest)
Running test: Test networkInterceptorsObserveNetworkHeaders(okhttp3.InterceptorTest)
Running test: Test networkInterceptorReturnsConnectionOnEmptyBody(okhttp3.InterceptorTest)
Running test: Test follow20Redirects(okhttp3.CallTest)
Running test: Test chainWithReadTimeout(okhttp3.InterceptorTest)
Running test: Test setFollowRedirectsFalse(okhttp3.CallTest)
Running test: Test successfulExpectContinuePermitsConnectionReuse(okhttp3.CallTest)
Running test: Test recoverFromTlsHandshakeFailure_tlsFallbackScsvEnabled(okhttp3.CallTest)
Running test: Test delete_HTTPS(okhttp3.CallTest)
Running test: Test connectTimeout(okhttp3.InterceptorTest)
Running test: Test cacheHit(okhttp3.CallTest)
Running test: Test connectionPoolingWithClientBuiltOffProxy(okhttp3.CallTest)
Running test: Test conditionalCacheHit(okhttp3.CallTest)
Running test: Test doesNotFollow21Redirects(okhttp3.CallTest)
Running test: Test cancelInFlightBeforeResponseReadThrowsIOE_HTTP_2(okhttp3.CallTest)
Running test: Test serverRespondsWith100ContinueOnly(okhttp3.CallTest)
Running test: Test emptyDataFrameSentWithEmptyBody[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test shutdownAfterLateCoalescing[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test httpProxyAuthenticate(okhttp3.CallTest)
Running test: Test serverRespondsWithUnsolicited100Continue(okhttp3.CallTest)
Running test: Test postZerolength_HTTPS(okhttp3.CallTest)
Running test: Test clientReadsHeadersDataTrailersHttp2(okhttp3.CallTest)
Running test: Test httpsCallsFailWhenProtocolIsH2PriorKnowledge(okhttp3.CallTest)
Running test: Test recoverWhenRetryOnConnectionFailureIsTrue(okhttp3.CallTest)
Running test: Test put_HTTPS(okhttp3.CallTest)
Running test: Test repeatedHeaderNames_HTTP_2(okhttp3.CallTest)
Running test: Test asyncResponseCanBeConsumedLater(okhttp3.CallTest)
Running test: Test canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce(okhttp3.CallTest)
Running test: Test attemptAuthorization20Times(okhttp3.CallTest)
Running test: Test get_HTTP_2(okhttp3.CallTest)
Running test: Test serverSendsInvalidResponseHeaders(okhttp3.CallTest)
Running test: Test cancelBeforeBodyIsRead(okhttp3.CallTest)
Running test: Test cancelInFlightBeforeResponseReadThrowsIOE_HTTPS(okhttp3.CallTest)
Running test: Test get(okhttp3.CallTest)
Running test: Test put(okhttp3.CallTest)
Running test: Test tls(okhttp3.CallTest)
Running test: Test gzip(okhttp3.CallTest)
Running test: Test head(okhttp3.CallTest)
Running test: Test post(okhttp3.CallTest)
Running test: Test canceledBeforeResponseReadSignalsOnFailure(okhttp3.CallTest)
Running test: Test cancelWhileRequestHeadersAreSent(okhttp3.CallTest)
Running test: Test uploadBodyLargeChunkedEncoding(okhttp3.CallTest)
Running test: Test expect100ContinueEmptyRequestBody(okhttp3.CallTest)
Running test: Test patch(okhttp3.CallTest)
Running test: Test requestBodyThrowsUnrelatedToNetwork(okhttp3.CallTest)
Running test: Test noRecoverWhenRetryOnConnectionFailureIsFalse(okhttp3.CallTest)
Running test: Test preemptiveProxyAuthentication(okhttp3.CallTest)
Running test: Test preemptiveThenReactiveProxyAuthentication(okhttp3.CallTest)
Running test: Test recoverFromTlsHandshakeFailure(okhttp3.CallTest)
Running test: Test uploadBodyLargeFixedLength(okhttp3.CallTest)
Running test: Test dnsReturnsZeroIpAddresses(okhttp3.CallTest)
Running test: Test requestBodyThrowsUnrelatedToNetwork_HTTP2(okhttp3.CallTest)
Running test: Test connectionPooling_Async(okhttp3.CallTest)
Running test: Test tooManyProxyAuthFailuresWithConnectionClose(okhttp3.CallTest)
Running test: Test ipv6HostHasSquareBraces(okhttp3.CallTest)
Running test: Test serverSendsUnnecessaryWhitespace(okhttp3.CallTest)
Running test: Test cancelAll(okhttp3.CallTest)
Running test: Test postEmptyBodyRetransmittedAfterAuthorizationFail(okhttp3.CallTest)
Running test: Test conditionalCacheMiss_Async(okhttp3.CallTest)
Running test: Test serverRespondsWith100ContinueOnly_HTTP2(okhttp3.CallTest)

okhttp3.internal.http2.HttpOverHttp2Test > shutdownAfterLateCoalescing[h2_prior_knowledge] FAILED
    org.junit.ComparisonFailure: expected:<[0]> but was:<[1]>
Running test: Test gzippedResponseBody[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test connectionWindowUpdateAfterCanceling[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test customMethodWithBody(okhttp3.CallTest)
Running test: Test conditionalCacheMiss(okhttp3.CallTest)
Running test: Test expect100ContinueTimesOutWithoutContinue(okhttp3.CallTest)
Running test: Test recoverFromOneInternalErrorRequiresNewConnection[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test connectionReuse[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test noDataFramesSentWithNullRequestBody[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test emptyResponse[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test missingPongsFailsConnection[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test getClientRequestTimeout(okhttp3.CallTest)
Running test: Test postZerolength_HTTP_2(okhttp3.CallTest)
Running test: Test patch_HTTP_2(okhttp3.CallTest)
Running test: Test serverRespondsWithUnsolicited100Continue_HTTP2(okhttp3.CallTest)
Running test: Test noRecoveryFromTlsHandshakeFailureWhenTlsFallbackIsDisabled(okhttp3.CallTest)
Running test: Test getWithRequestBody(okhttp3.CallTest)
Running test: Test getClientRequestTimeoutWithBackPressure(okhttp3.CallTest)
Running test: Test httpsWithIpAddress(okhttp3.CallTest)
Running test: Test serverSendsPushPromise_HEAD[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test noDefaultContentLengthOnStreamingPost[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test connectionNotReusedAfterShutdown[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test recoverFromOneRefusedStreamReusesConnection[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test readAfterLastByte[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test synchronousRequest[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test responseHeadersAfterGoaway[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test failingCallsDoNotInterfereWithConnection(okhttp3.CallTest)
Running test: Test proxyConnectOmitsApplicationHeaders(okhttp3.CallTest)
Running test: Test cancelImmediatelyAfterEnqueue(okhttp3.CallTest)
Running test: Test httpWithExcessiveHeaders(okhttp3.CallTest)
Running test: Test timeoutsUpdatedOnReusedConnections(okhttp3.CallTest)
Running test: Test networkInterceptorThrowsRuntimeExceptionSynchronous(okhttp3.InterceptorTest)
Running test: Test applicationInterceptorsRewriteResponseFromServer(okhttp3.InterceptorTest)
Running test: Test interceptorMakesAnUnrelatedAsyncRequest(okhttp3.InterceptorTest)
Running test: Test authenticate[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test networkInterceptorResponseMustHaveBody(okhttp3.InterceptorTest)
Running test: Test networkInterceptorsCannotCallProceedMultipleTimes(okhttp3.InterceptorTest)
Running test: Test networkInterceptorModifiedRequestIsReturned(okhttp3.InterceptorTest)
Running test: Test interceptorMakesAnUnrelatedRequest(okhttp3.InterceptorTest)
Running test: Test applicationInterceptorResponseMustHaveBody(okhttp3.InterceptorTest)
Running test: Test asyncNetworkInterceptors(okhttp3.InterceptorTest)
Running test: Test connectionTimeout[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test networkInterceptorsCannotShortCircuitResponses(okhttp3.InterceptorTest)
Running test: Test applicationInterceptorThrowsRuntimeExceptionSynchronous(okhttp3.InterceptorTest)
Running test: Test applicationInterceptorThrowsRuntimeExceptionAsynchronous(okhttp3.InterceptorTest)
Running test: Test asyncApplicationInterceptors(okhttp3.InterceptorTest)
Running test: Test networkInterceptorReturnsNull(okhttp3.InterceptorTest)
Running test: Test chainWithWriteTimeout(okhttp3.InterceptorTest)
Running test: Test patch_HTTPS(okhttp3.CallTest)
Running test: Test gzipResponseAfterAuthenticationChallenge(okhttp3.CallTest)
Running test: Test deleteWithRequestBody(okhttp3.CallTest)
Running test: Test tlsHandshakeFailure_noFallbackByDefault(okhttp3.CallTest)
Running test: Test unsuccessfulExpectContinuePreventsConnectionReuse(okhttp3.CallTest)
Running test: Test oneStreamTimeoutDoesNotBreakConnection[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test readTimeoutMoreGranularThanBodySize[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test closeAfterFlush[h2_prior_knowledge](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test streamTimeoutDegradesConnectionAfterNoPong[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test recoverFromConnectionNoNewStreamsOnFollowUp[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test noRecoveryFromRefusedStreamWithRetryDisabled[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test readTimeoutOnSlowConnection[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test receiveResponseCookies[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test serverSendsPushPromise_GET[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test settingsLimitsMaxConcurrentStreams[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test postBodyRetransmittedAfterAuthorizationFail_HTTP_2(okhttp3.CallTest)
Running test: Test concurrentRequestWithEmptyFlowControlWindow[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test cancelWithInterceptor(okhttp3.CallTest)
Running test: Test postWithFileNotFound(okhttp3.CallTest)
Running test: Test recoverWhenRetryOnConnectionFailureIsFalse_HTTP2(okhttp3.CallTest)
Running test: Test getReturns500(okhttp3.CallTest)
Running test: Test networkInterceptorsRewriteResponseFromServer(okhttp3.InterceptorTest)
Running test: Test networkInterceptorsRewriteRequestToServer(okhttp3.InterceptorTest)
Running test: Test follow20Redirects_Async(okhttp3.CallTest)
Running test: Test chainCanCancelCall(okhttp3.InterceptorTest)
Running test: Test multipleApplicationInterceptors(okhttp3.InterceptorTest)
Running test: Test remoteDoubleSynReply(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test outgoingWritesAreBatched(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientDoesNotLimitFlowControl(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test noTrailersFrameYieldsEmptyTrailers(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientCreatesStreamAndServerRepliesWithFin(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test nonAsciiResponseHeader[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test peerHttp2ClientDisablesPush(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test readSendsWindowUpdate(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test responsesAreCached[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test bogusDataFrameDoesNotDisruptConnection(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test receiveGoAwayHttp2(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test pushPromiseStreamsAutomaticallyCancel(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientSendsEmptyDataServerDoesntSendWindowUpdate(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test writeTimesOutAwaitingConnectionWindow(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test noRecoveryFromInternalErrorWithRetryDisabled[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test expect100ContinueEmptyRequestBody_HTTP2(okhttp3.CallTest)
Running test: Test sendRequestCookies[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test failedAuthenticatorReleasesConnection(okhttp3.CallTest)
Running test: Test connectionShutdownAfterHealthCheck[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test get_Async(okhttp3.CallTest)
Running test: Test interceptorRecoversWhenRoutesExhausted(okhttp3.CallTest)
Running test: Test get_HTTPS(okhttp3.CallTest)
Running test: Test clientCannotReadTrailersWithoutExhaustingStream(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test doublePushPromise(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverWritesTrailersAndClientReadsTrailers(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientPingsServer(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test writeTimesOutAwaitingStreamWindow(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test cancelDuringHttpsConnect(okhttp3.CallTest)
Running test: Test redirect[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test propfindRedirectsToPropfindAndMaintainsRequestBody(okhttp3.CallTest)
Running test: Test postZeroLength(okhttp3.CallTest)
Running test: Test lateCancelCallsOnFailure(okhttp3.CallTest)
Running test: Test cancelDuringHttpConnect(okhttp3.CallTest)
Running test: Test recoverFromMultipleRefusedStreamsRequiresNewConnection[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test serverWritesTrailersWithData(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test unexpectedPongIsNotReturned(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test pushPromiseStream(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test peerSetsZeroFlowControl(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverClosesClientInputStream(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverPingsClientHttp2(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test close(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test sendGoAway(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test buildRequestUsingHttpUrl(okhttp3.CallTest)
Running test: Test maxUnavailableTimeoutRetries(okhttp3.CallTest)
Running test: Test uploadBodySmallFixedLength(okhttp3.CallTest)
Running test: Test cancelWhileWritingRequestBodySendsCancelToServer[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test illegalToExecuteTwice(okhttp3.CallTest)
Running test: Test testTruncatedDataFrame(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverSendsSettingsToClient(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test canceledBeforeIOSignalsOnFailure(okhttp3.CallTest)
Running test: Test blockedStreamDoesntStarveNewStream(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientCannotReadTrailersIfTheStreamFailed(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test unmatchingPinnedCertificate(okhttp3.CallTest)
Running test: Test readMultipleSetsOfResponseHeaders(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test discardedDataFramesAreCounted(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test responseCachedWithoutConsumingFullBody[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test redirectsDoNotIncludeTooManyAuthHeaders(okhttp3.CallTest)
Running test: Test serverFinishesStreamWithHeaders(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test matchingPinnedCertificate(okhttp3.CallTest)
Running test: Test readTimesOut(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test recoverFromCancelReusesConnection[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test responseHeaderParsingIsLenient(okhttp3.CallTest)
Running test: Test maxClientRequestTimeoutRetries(okhttp3.CallTest)
Running test: Test responseCookies(okhttp3.CallTest)
Running test: Test serverSendsInvalidCodeTooLarge(okhttp3.CallTest)
Running test: Test customDns(okhttp3.CallTest)
Running test: Test postBodyRetransmittedAfterAuthorizationFail(okhttp3.CallTest)
Running test: Test failedProxyAuthenticatorReleasesConnection(okhttp3.CallTest)
Running test: Test tlsHostnameVerificationFailure(okhttp3.CallTest)
Running test: Test head_HTTPS(okhttp3.CallTest)
Running test: Test tls_Async(okhttp3.CallTest)
Running test: Test unsuccessfulExpectContinuePermitsConnectionReuseWithHttp2(okhttp3.CallTest)
Running test: Test connectFails(okhttp3.CallTest)
Running test: Test post_Async(okhttp3.CallTest)
Running test: Test post_HTTPS(okhttp3.CallTest)
Running test: Test rangeHeaderPreventsAutomaticGzip(okhttp3.CallTest)
Running test: Test postBodyRetransmittedAfterAuthorizationFail_HTTPS(okhttp3.CallTest)
Running test: Test headers(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test remoteSendsRefusedStreamBeforeReplyHeaders(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clearSettingsBeforeMerge(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test readSendsWindowUpdateHttp2(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test setFollowSslRedirectsFalse(okhttp3.CallTest)
Running test: Test canceledBeforeIOSignalsOnFailure_HTTP_2(okhttp3.CallTest)
Running test: Test getResponseHeadersTimesOut(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test byteArray(okhttp3.RequestTest)
Running test: Test byteArrayRange(okhttp3.RequestTest)
Running test: Test objectTag(okhttp3.RequestTest)
Running test: Test stringWithNonDefaultCharsetSpecified(okhttp3.RequestTest)
Running test: Test cacheControl(okhttp3.RequestTest)
Running test: Test tagsAreImmutable(okhttp3.RequestTest)
Running test: Test string(okhttp3.RequestTest)
Running test: Test replaceOnlyTag(okhttp3.RequestTest)
Running test: Test newBuilderUrlResetsUrl(okhttp3.RequestTest)
Running test: Test nullRemovesTag(okhttp3.RequestTest)
Running test: Test typedTag(okhttp3.RequestTest)
Running test: Test removeAbsentTag(okhttp3.RequestTest)
Running test: Test emptyCacheControlClearsAllCacheControlHeaders(okhttp3.RequestTest)
Running test: Test stringWithDefaultCharsetAdded(okhttp3.RequestTest)
Running test: Test file(okhttp3.RequestTest)
Running test: Test noTag(okhttp3.RequestTest)
Running test: Test multipleTags(okhttp3.RequestTest)
Running test: Test byteString(okhttp3.RequestTest)
Running test: Test headerForbidsNullArguments(okhttp3.RequestTest)
Running test: Test defaultTag(okhttp3.RequestTest)
Running test: Test uninitializedURI(okhttp3.RequestTest)
Running test: Test emptyNameForbidden(okhttp3.RequestTest)
Running test: Test headerForbidsControlCharacters(okhttp3.RequestTest)
Running test: Test headerAllowsTabOnlyInValues(okhttp3.RequestTest)
Running test: Test headerAcceptsPermittedCharacters(okhttp3.RequestTest)
Running test: Test crudVerbs(okhttp3.RequestTest)
Running test: Test addThrowsOnMultiColon(okhttp3.HeadersTest)
Running test: Test byteCount(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithAdditionalSpaces(okhttp3.HeadersTest)
Running test: Test onlyCommaBetweenChallenges(okhttp3.HeadersTest)
Running test: Test builderRejectsUnicodeInHeaderName(okhttp3.HeadersTest)
Running test: Test basicChallengeWithCharset(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithCamelCasedNames2(okhttp3.HeadersTest)
Running test: Test headersNotEquals(okhttp3.HeadersTest)
Running test: Test escapedCharactersInQuotedString(okhttp3.HeadersTest)
Running test: Test ofMapRejectsNullCharInName(okhttp3.HeadersTest)
Running test: Test basicChallenge(okhttp3.HeadersTest)
Running test: Test ofTrims(okhttp3.HeadersTest)
Running test: Test ofThrowsOnNull(okhttp3.HeadersTest)
Running test: Test addInstantNull(okhttp3.HeadersTest)
Running test: Test nameIndexesAreStrict(okhttp3.HeadersTest)
Running test: Test valueIndexesAreStrict(okhttp3.HeadersTest)
Running test: Test multipleSeparatorsBetweenChallenges(okhttp3.HeadersTest)
Running test: Test headersToString(okhttp3.HeadersTest)
Running test: Test addDate(okhttp3.HeadersTest)
Running test: Test headersAddAll(okhttp3.HeadersTest)
Running test: Test multipleAuthenticateHeadersInDifferentOrder(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithCamelCasedNames(okhttp3.HeadersTest)
Running test: Test multipleChallengesWithSameSchemeButDifferentRealmInOneHeader(okhttp3.HeadersTest)
Running test: Test headersEquals(okhttp3.HeadersTest)
Running test: Test addUnsafeNonAsciiAcceptsUnicodeValue(okhttp3.HeadersTest)
Running test: Test http2HeadersListDontDropTeIfTrailersHttp2(okhttp3.HeadersTest)
Running test: Test repeatedAuthParamKey(okhttp3.HeadersTest)
Running test: Test toMultimapAllowsCaseInsensitiveGet(okhttp3.HeadersTest)
Running test: Test spacesAroundKeyValueSeparator(okhttp3.HeadersTest)
Running test: Test unescapedDoubleQuoteInQuotedStringWithEvenNumberOfBackslashesInFront(okhttp3.HeadersTest)
Running test: Test ofMapTrimsValue(okhttp3.HeadersTest)
Running test: Test setDateNull(okhttp3.HeadersTest)
Running test: Test addInstant(okhttp3.HeadersTest)
Running test: Test addUnsafeNonAsciiRejectsUnicodeName(okhttp3.HeadersTest)
Running test: Test ofThrowsOnEmptyName(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithDifferentlyOrderedAuthParams(okhttp3.HeadersTest)
Running test: Test separatorsBeforeFirstChallenge(okhttp3.HeadersTest)
Running test: Test varargFactoryRejectsUnicodeInHeaderValue(okhttp3.HeadersTest)
Running test: Test setInstantNull(okhttp3.HeadersTest)
Running test: Test separatorsBeforeFirstAuthParam(okhttp3.HeadersTest)
Running test: Test varargFactoryRejectsUnicodeInHeaderName(okhttp3.HeadersTest)
Running test: Test ofRejectsNullChar(okhttp3.HeadersTest)
Running test: Test ofAcceptsEmptyValue(okhttp3.HeadersTest)
Running test: Test multipleChallengesInOneHeader(okhttp3.HeadersTest)
Running test: Test builderRejectsUnicodeInHeaderValue(okhttp3.HeadersTest)
Running test: Test doubleQuoteInToken(okhttp3.HeadersTest)
Running test: Test multipleAuthenticateHeaders(okhttp3.HeadersTest)
Running test: Test ofMapTrimsKey(okhttp3.HeadersTest)
Running test: Test ofMapThrowsOnBlankName(okhttp3.HeadersTest)
Running test: Test addThrowsOnNoColon(okhttp3.HeadersTest)
Running test: Test mapFactoryRejectsUnicodeInHeaderValue(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithAdditionalSpacesBeforeFirstAuthParam(okhttp3.HeadersTest)
Running test: Test setInstant(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithDifferentlyOrderedAuthParams2(okhttp3.HeadersTest)
Running test: Test ofMapMakesDefensiveCopy(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithTokenFormOfAuthParam(okhttp3.HeadersTest)
Running test: Test addDateNull(okhttp3.HeadersTest)
Running test: Test basicChallengeWithUnexpectedCharset(okhttp3.HeadersTest)
Running test: Test commaInQuotedStringAndBeforeFirstChallenge(okhttp3.HeadersTest)
Running test: Test http2HeadersListDropsForbiddenHeadersHttp2(okhttp3.HeadersTest)
Running test: Test ofMakesDefensiveCopy(okhttp3.HeadersTest)
Running test: Test token68InsteadOfAuthParams(okhttp3.HeadersTest)
Running test: Test addParsing(okhttp3.HeadersTest)
Running test: Test ofMapRejectsNullCharInValue(okhttp3.HeadersTest)
Running test: Test unknownAuthParams(okhttp3.HeadersTest)
Running test: Test toMultimapGroupsHeaders(okhttp3.HeadersTest)
Running test: Test addThrowsOnEmptyName(okhttp3.HeadersTest)
Running test: Test token68AndAuthParams(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithMissingRealm(okhttp3.HeadersTest)
Running test: Test ofThrowsOddNumberOfHeaders(okhttp3.HeadersTest)
Running test: Test ofMapThrowsOnEmptyName(okhttp3.HeadersTest)
Running test: Test toMultimapUsesCanonicalCase(okhttp3.HeadersTest)
Running test: Test readNameValueBlockDropsForbiddenHeadersHttp2(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithoutAuthParams(okhttp3.HeadersTest)
Running test: Test multipleBasicAuthenticateHeaders(okhttp3.HeadersTest)
Running test: Test mapFactoryRejectsUnicodeInHeaderName(okhttp3.HeadersTest)
Running test: Test ofMapAcceptsEmptyValue(okhttp3.HeadersTest)
Running test: Test setDate(okhttp3.HeadersTest)
Running test: Test unescapedDoubleQuoteInQuotedString(okhttp3.HeadersTest)
Running test: Test testDigestChallengeWithStrictRfc2617Header(okhttp3.HeadersTest)
Running test: Test ofMapThrowsOnNull(okhttp3.HeadersTest)
Running test: Test hasBody(okhttp3.PublicInternalApiTest)
Running test: Test permitsRequestBody(okhttp3.PublicInternalApiTest)
Running test: Test requiresRequestBody(okhttp3.PublicInternalApiTest)
Running test: Test peekShorterThanResponse(okhttp3.ResponseTest)
Running test: Test peekAfterReadingResponse(okhttp3.ResponseTest)
Running test: Test zeroStatusCodeIsValid(okhttp3.ResponseTest)
Running test: Test peekLongerThanResponse(okhttp3.ResponseTest)
Running test: Test negativeStatusCodeThrowsIllegalStateException(okhttp3.ResponseTest)
Running test: Test eachPeakIsIndependent(okhttp3.ResponseTest)
Running test: Test addressToString(okhttp3.AddressTest)
Running test: Test addressWithProxyToString(okhttp3.AddressTest)
Running test: Test equalsAndHashcode(okhttp3.AddressTest)
Running test: Test differentProxySelectorsAreDifferent(okhttp3.AddressTest)
Running test: Test userAgentDefaultsToOkHttpVersion(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpProxyToHttpsUsingProxyArg(okhttp3.URLConnectionTest)
Running test: Test multipleSettingsFramesAreMerged(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test receiveGoAway(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test emptyRequestHeaderNameIsStrict(okhttp3.URLConnectionTest)
Running test: Test malformedUrlThrowsUnknownHostException(okhttp3.URLConnectionTest)
Running test: Test postFailsWithBufferedRequestForLargeRequest(okhttp3.URLConnectionTest)
Running test: Test remoteSendsDataAfterInFinished(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverSendsEmptyDataClientDoesntSendWindowUpdate(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverPingsClient(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverCannotEnqueueTrailersAfterFinishingTheStream(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test peerIncreasesMaxFrameSize(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test bogusReplySilentlyIgnored(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test socketExceptionWhileWritingHeaders(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test peerHttp2ServerLowersInitialWindowSize(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientCreatesStreamAndServerReplies(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverSendsEmptyDataClientDoesntSendWindowUpdateHttp2(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test remoteOmitsInitialSettings(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientClosesClientInputStreamIfOutputStreamIsClosed(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverClosesClientOutputStream(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientClosesClientInputStream(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test clientSendsEmptyDataServerDoesntSendWindowUpdateHttp2(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test maxFrameSizeHonored(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test peerHttp2ServerZerosCompressionTable(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test serverReadsHeadersDataHeaders(okhttp3.internal.http2.Http2ConnectionTest)
Running test: Test flagOverlapOn0x20(okhttp3.internal.http2.FrameLogTest)
Running test: Test exampleStream(okhttp3.internal.http2.FrameLogTest)
Running test: Test flagOverlapOn0x1(okhttp3.internal.http2.FrameLogTest)
Running test: Test flagOverlapOn0x4(okhttp3.internal.http2.FrameLogTest)
Running test: Test allFormattedFlagsWithValidBits(okhttp3.internal.http2.FrameLogTest)
Running test: Test noEffectiveTldPlusOne(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test boundarySearches(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test exceptionRule(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test threadIsInterruptedOnFirstRead(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test allPublicSuffixes(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test response308WithGet(okhttp3.URLConnectionTest)
Running test: Test proxyAuthenticateOnConnect(okhttp3.URLConnectionTest)
Running test: Test inputStreamAvailableWithChunkedEncoding(okhttp3.URLConnectionTest)
Running test: Test gzipAndConnectionReuseWithChunkedEncoding(okhttp3.URLConnectionTest)
Running test: Test publicSuffixExceptions(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test wildcardMatch(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test publicSuffixDotOrgTestCases(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test longestMatchWins(okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest)
Running test: Test oldestConnectionsEvictedIfIdleLimitExceeded(okhttp3.internal.connection.ConnectionPoolTest)
Running test: Test cleanupPrioritizesEarliestEviction(okhttp3.internal.connection.ConnectionPoolTest)
Running test: Test interruptStopsThread(okhttp3.internal.connection.ConnectionPoolTest)
Running test: Test connectViaProxyUsingHttpProxySystemProperty(okhttp3.URLConnectionTest)
Running test: Test http10SelectedProtocol(okhttp3.URLConnectionTest)
Running test: Test shoutcast(okhttp3.URLConnectionTest)
Running test: Test redirectToAnotherOriginServerWithHttps(okhttp3.URLConnectionTest)
Running test: Test inUseConnectionsNotEvicted(okhttp3.internal.connection.ConnectionPoolTest)
Running test: Test leakedAllocation(okhttp3.internal.connection.ConnectionPoolTest)
Running test: Test connectionsEvictedWhenIdleLongEnough(okhttp3.internal.connection.ConnectionPoolTest)
Running test: Test setValidRequestMethod(okhttp3.URLConnectionTest)
Running test: Test aggressiveClearingHandlesEdit(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cookiesAndTrailers(okhttp3.URLConnectionTest)
Running test: Test redirectedFromHttpToHttpsFollowingProtocolRedirects(okhttp3.URLConnectionTest)
Running test: Test aggressiveClearingHandlesRead(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test updateExistingEntryWithTooFewValuesReusesPreviousValues(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test revertedNewFileIsRemoveInJournal(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cleanupTrimFailurePreventsSnapshotWrites(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test openWithInvalidFileSizeClearsDirectory(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test removeHandlesMissingFile(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test readAndWriteEntryWithoutProperClose(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test journalFileIsPreferredOverBackupFile(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test noSizeCorruptionAfterEditorDetached(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test createNewEntryWithTooFewValuesFails(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test iteratorElementsUpdatedDuringIterationAreUpdated(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test editSnapshotAfterChangeAborted(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test evictOnInsert(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test editSinceEvictedAndRecreated(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test journalWithEditAndPublish(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test validateKey(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test openWithInvalidJournalLineClearsDirectory(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test evictAllWithPartialEditDoesNotStoreAValue(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cleanupTrimFailureWithPartialSnapshot(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test manualRemovalAfterCleanupTrimFailure(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test editSinceEvicted(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalFailureAllowsRemovals(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test endOfStreamResponseIsNotPooled(okhttp3.URLConnectionTest)
Running test: Test httpsWithCustomTrustManager(okhttp3.URLConnectionTest)
Running test: Test emptyCache(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test evictOnUpdate(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test unterminatedEditIsRevertedOnClose(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test openWithTooManyFileSizesClearsDirectory(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test constructorDoesNotAllowZeroValuesPerEntry(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test aggressiveClearingHandlesWrite(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test flushingAfterCleanupTrimFailure(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test evictAllWithPartialCreate(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test writeAndReadEntry(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test openWithInvalidBlankLineClearsDirectory(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test abortAfterDetach(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test growMaxSize(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test readingTheSameStreamMultipleTimes(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test iteratorElementsAddedDuringIterationAreOmitted(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test nullKeyThrows(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test iteratorRemoveOncePerCallToNext(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalFailureWithCacheTrim(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test connectViaHttpProxyToHttpsUsingHttpProxySystemProperty(okhttp3.URLConnectionTest)
Running test: Test noSizeCorruptionAfterCreatorDetached(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalFailureWithInFlightEditors(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test chunkedUpload_largeBuffers(okhttp3.URLConnectionTest)
Running test: Test getKeepAlive(okhttp3.URLConnectionTest)
Running test: Test urlWithSpaceInHostViaHttpProxy(okhttp3.URLConnectionTest)
Running test: Test redirectedFromHttpsToHttpFollowingProtocolRedirects(okhttp3.URLConnectionTest)
Running test: Test openWithInvalidValueCountClearsDirectory(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test iteratorRemoveBeforeNext(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalFailureAllowsEvictAll(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test sameConnectionRedirectAndReuse(okhttp3.URLConnectionTest)
Running test: Test requestHeaderValidationIsStrict(okhttp3.URLConnectionTest)
Running test: Test flushAfterStreamTransmittedWithNoLengthHeaders(okhttp3.URLConnectionTest)
Running test: Test getHeadersThrows(okhttp3.URLConnectionTest)
Running test: Test gzipEncodingEnabledByDefault(okhttp3.URLConnectionTest)
Running test: Test doesNotAttemptAuthorization21Times(okhttp3.URLConnectionTest)
Running test: Test fixedLengthUpload_byteByByte(okhttp3.URLConnectionTest)
Running test: Test nonStandardAuthenticationScheme(okhttp3.URLConnectionTest)
Running test: Test dontRemoveUnfinishedEntryWhenCreatingSnapshot(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test iteratorRemove(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test openWithTruncatedLineDiscardsThatLine(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test markAndResetWithNoLengthHeaders(okhttp3.URLConnectionTest)
Running test: Test editSnapshotAfterChangeCommitted(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test journalWriteFailsDuringEditorCommit(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test urlWithBadAsciiHost(okhttp3.URLConnectionTest)
Running test: Test removePreventsActiveEditFromStoringAValue(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test iteratorElementsRemovedDuringIterationAreOmitted(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test shrinkMaxSizeEvicts(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test openCreatesDirectoryIfNecessary(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test redirectedWithContentLengthHeader(okhttp3.URLConnectionTest)
Running test: Test evictAllAfterCleanupTrimFailure(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test journalWithEditAndPublishAndRead(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cleanupTrimFailureAllowsSnapshotReads(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalFailurePreventsEditors(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test setProtocolsWithNull(okhttp3.URLConnectionTest)
Running test: Test gzipAndConnectionReuseWithFixedLength(okhttp3.URLConnectionTest)
Running test: Test proxyWithConnectionClose(okhttp3.URLConnectionTest)
Running test: Test keyWithSpaceNotPermitted(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cacheSingleEntryOfSizeGreaterThanMaxSize(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test evictAll(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test evictAllDoesntInterruptPartialRead(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test evictionHonorsLruFromCurrentSession(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test fileDeletedExternally(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test openWithDirtyKeyDeletesAllFilesForThatKey(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalFailureWithEditorsInFlightThenClose(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test setsNegotiatedProtocolHeader_HTTP_2(okhttp3.URLConnectionTest)
Running test: Test concurrentHttp2ConnectionsDeduplicated[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test cannotOperateOnEditAfterRevert(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test readAndWriteOverlapsMaintainConsistency(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test journalWriteFailsDuringRemove(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test proxyWithConnectionReuse(okhttp3.URLConnectionTest)
Running test: Test journalDoesNotIncludeReadOfYetUnpublishedValue(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test editsDiscardedAfterEditorDetached(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test trimToSizeWithActiveEdit(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test noNewSourceAfterEditorDetached(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cacheClosedTruncatesIterator(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalOnRepeatedEdits(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test noTransparentGzipFor304NotModified(okhttp3.URLConnectionTest)
Running test: Test readResponseHeaderTimeout[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test postFailsWithFixedLengthRequestForLargeRequest(okhttp3.URLConnectionTest)
Running test: Test rebuildJournalOnRepeatedReads(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalOnRepeatedReadsWithOpenAndClose(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test response300MultipleChoiceWithPost(okhttp3.URLConnectionTest)
Running test: Test gzipAndConnectionReuseWithChunkedEncodingAndTls(okhttp3.URLConnectionTest)
Running test: Test digestAuthentication(okhttp3.URLConnectionTest)
Running test: Test flushAfterStreamTransmittedWithFixedLength(okhttp3.URLConnectionTest)
Running test: Test urlContainsQueryButNoPath(okhttp3.URLConnectionTest)
Running test: Test contentDisagreesWithChunkedHeaderBodyTooLong(okhttp3.URLConnectionTest)
Running test: Test postBodiesRetransmittedOnAuthProblems(okhttp3.URLConnectionTest)
Running test: Test testPooledConnectionsDetectHttp10(okhttp3.URLConnectionTest)
Running test: Test authenticateWithGet(okhttp3.URLConnectionTest)
Running test: Test keyWithCarriageReturnNotPermitted(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test recoverFromInitializationFailure(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test iterator(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test openWithInvalidAppVersionClearsDirectory(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test journalWriteFailsDuringEdit(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalFailureIsRetried(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test getContentTypeConnects(okhttp3.URLConnectionTest)
Running test: Test streamedBodyIsRetriedOnHttp2Shutdown(okhttp3.URLConnectionTest)
Running test: Test cancelWithStreamNotCompleted[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test keyWithNewlineNotPermitted(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test revertWithTooFewValues(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cannotOperateOnEditAfterPublish(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test evictionHonorsLruFromPreviousSession(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test readAndWriteEntryAcrossCacheOpenAndClose(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cleanupTrimFailurePreventsNewEditors(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test removeAbsentElement(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cleanupTrimFailureWithInFlightEditor(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test rebuildJournalOnRepeatedEditsWithOpenAndClose(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test conditionalCache[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test rebuildJournalFailureWithRemovalThenClose(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test domainFronting[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test openWithInvalidVersionClearsDirectory(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test editSameVersion(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test aggressiveClearingHandlesPartialEdit(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test editSnapshotAfterEvictAllReturnsNullDueToStaleValue(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test restoreBackupFile(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test isClosed_uninitializedCache(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cleanupTrimFailureRetriedOnEditors(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test journalWriteFailsDuringEditorAbort(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test explicitRemoveAppliedToDiskImmediately(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test cacheSingleValueOfSizeGreaterThanMaxSize(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test constructorDoesNotAllowZeroCacheSize(okhttp3.internal.cache.DiskLruCacheTest)
Running test: Test clientIncompleteControlFrameBodyThrows(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test serverSentFramesMustNotBeMasked(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientSentFramesMustBeMasked(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test closeReservedSetThrows(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test connectionWindowUpdateOnClose[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test serverIncompleteMessageBodyThrows(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test twoFrameNotContinuation(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientTwoFrameHelloWithPongs(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientSimpleBinary(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test emptyCloseCallsCallback(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test closeOutOfRangeThrows(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test serverIncompleteControlFrameBodyThrows(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientFramePayloadShort(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test serverHelloTwoChunks(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test emptyPingCallsCallback(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test serverSimpleHello(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientFramePayloadLong(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientIncompleteMessageBodyThrows(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientTwoFrameBinary(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test pingCallsCallback(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test controlFramesMustBeFinal(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test controlFramePayloadMax(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test closeCallsCallback(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientTwoFrameHello(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientFramePayloadTooLongThrows(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test clientSimpleHello(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test closeIncompleteCallsCallback(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test reservedFlagsAreUnsupported(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test closeLengthOfOneThrows(okhttp3.internal.ws.WebSocketReaderTest)
Running test: Test multipleOperatorsShareOneFile(okhttp3.internal.cache2.FileOperatorTest)
Running test: Test readBounds(okhttp3.internal.cache2.FileOperatorTest)
Running test: Test read(okhttp3.internal.cache2.FileOperatorTest)
Running test: Test write(okhttp3.internal.cache2.FileOperatorTest)
Running test: Test largeRead(okhttp3.internal.cache2.FileOperatorTest)
Running test: Test writeBounds(okhttp3.internal.cache2.FileOperatorTest)
Running test: Test readAndWrite(okhttp3.internal.cache2.FileOperatorTest)
Running test: Test postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2(okhttp3.URLConnectionTest)
Running test: Test largeWrite(okhttp3.internal.cache2.FileOperatorTest)
Running test: Test iteratorOperator(okhttp3.HeadersKotlinTest)
Running test: Test builderSetOperator(okhttp3.HeadersKotlinTest)
Running test: Test builderGetOperator(okhttp3.HeadersKotlinTest)
Running test: Test getOperator(okhttp3.HeadersKotlinTest)
Running test: Test testBuildIfSupported(okhttp3.ConscryptTest)
Running test: Test testTrustManager(okhttp3.ConscryptTest)
Running test: Test testVersion(okhttp3.ConscryptTest)
Running test: Test testMozilla(okhttp3.ConscryptTest)
Running test: Test testGoogle(okhttp3.ConscryptTest)
Running test: Test cancelReturnsTruePreventsNextExecution(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test executeRepeated(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test executeRepeatedEarlierReplacesScheduledLater(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test differentQueuesAreParallel(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test scheduledTasksDoesNotIncludeRunningTask(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test cancelWhileExecutingDoesNotStopUncancelableTask(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test scheduleThrowsWhenShutdown(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test cancelReturnsFalseDoesNotCancel(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test shutdownFailsToCancelsScheduledTasks(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test executeDelayed(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test scheduledTasks(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test cancelWhileExecutingDoesNothingIfTaskDoesNotRepeat(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test requestBodySurvivesRetriesWithFixedLength(okhttp3.URLConnectionTest)
Running test: Test singleQueueIsSerial(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test interruptingCoordinatorAttemptsToCancelsAndSucceeds(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test shutdownSuccessfullyCancelsScheduledTasks(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test executeScheduledEarlierReplacesRepeatedLater(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test clientSendsContentLength(okhttp3.URLConnectionTest)
Running test: Test interruptingCoordinatorAttemptsToCancelsAndFails(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test nullSSLSocketFactory_throws(okhttp3.URLConnectionTest)
Running test: Test taskNameIsUsedForThreadNameWhenRunning(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test activeQueuesContainsOnlyQueuesWithScheduledTasks(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test authenticateWithGetAndTransparentGzip(okhttp3.URLConnectionTest)
Running test: Test pingsTransmitted[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test scheduleDiscardsTaskWhenShutdown(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test cancelWhileExecutingPreventsRepeat(okhttp3.internal.concurrent.TaskRunnerTest)
Running test: Test createFromParts(okhttp3.HandshakeTest)
Running test: Test tlsWithNullNullNull(okhttp3.HandshakeTest)
Running test: Test sslWithNullNullNull(okhttp3.HandshakeTest)
Running test: Test nonStandardAuthenticationSchemeWithRealm(okhttp3.URLConnectionTest)
Running test: Test createFromSslSession(okhttp3.HandshakeTest)
Running test: Test zeroLengthPut_HTTP_2(okhttp3.URLConnectionTest)
Running test: Test flushAfterStreamTransmittedWithChunkedEncoding(okhttp3.URLConnectionTest)
Running test: Test postBodyRetransmittedOnFailureRecovery(okhttp3.URLConnectionTest)
Running test: Test requestHeaders(okhttp3.URLConnectionTest)
Running test: Test malformedChunkSize(okhttp3.URLConnectionTest)
Running test: Test authenticateWithPost(okhttp3.URLConnectionTest)
Running test: Test invalidHost(okhttp3.URLConnectionTest)
Running test: Test markAndResetWithChunkedEncoding(okhttp3.URLConnectionTest)
Running test: Test notRedirectedFromHttpToHttps(okhttp3.URLConnectionTest)
Running test: Test setChunkedEncodingAsRequestProperty(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpsReusingConnectionsAfterRebuildingClient(okhttp3.URLConnectionTest)
Running test: Test deflateCompression(okhttp3.URLConnectionTest)
Running test: Test earlyDisconnectDoesntHarmPoolingWithChunkedEncoding(okhttp3.URLConnectionTest)
Running test: Test disconnectDuringConnect_cookieJar(okhttp3.URLConnectionTest)
Running test: Test emptyRequestHeaderValueIsAllowed(okhttp3.URLConnectionTest)
Running test: Test connectHttpsViaSocketFactory(okhttp3.URLConnectionTest)
Running test: Test get[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test chunkedConnectionsArePooled(okhttp3.URLConnectionTest)
Running test: Test authenticateCallsTrackedAsRedirects(okhttp3.URLConnectionTest)
Running test: Test userSuppliedContentLengthHeader[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test serverSendsInvalidCodeNotANumber(okhttp3.URLConnectionTest)
Running test: Test postRedirectToGetWithChunkedRequest(okhttp3.URLConnectionTest)
Running test: Test gzipAndConnectionReuseWithFixedLengthAndTls(okhttp3.URLConnectionTest)
Running test: Test recoverFromMultipleCancelReusesConnection[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test http11SelectedProtocol(okhttp3.URLConnectionTest)
Running test: Test connectRetriesUntilConnectedOrFailed(okhttp3.URLConnectionTest)
Running test: Test redirectWithProxySelector(okhttp3.URLConnectionTest)
Running test: Test urlHostWithNul(okhttp3.URLConnectionTest)
Running test: Test missingChunkBody(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpProxyToHttpsUsingHttpsProxySystemProperty(okhttp3.URLConnectionTest)
Running test: Test streamDiscardingIsTimely(okhttp3.URLConnectionTest)
Running test: Test follow20Redirects(okhttp3.URLConnectionTest)
Running test: Test clientConfiguredGzipContentEncoding(okhttp3.URLConnectionTest)
Running test: Test responseCodeDisagreesWithHeaders(okhttp3.URLConnectionTest)
Running test: Test customBasicAuthenticator(okhttp3.URLConnectionTest)
Running test: Test emptyResponseHeaderValueIsAllowed(okhttp3.URLConnectionTest)
Running test: Test setSslSocketFactoryFailsOnJdk9(okhttp3.URLConnectionTest)
Running test: Test doesNotFollow21Redirects(okhttp3.URLConnectionTest)
Running test: Test allAttributesSetInProxyAuthenticationCallbacks(okhttp3.URLConnectionTest)
Running test: Test pooledConnectionProblemsNotReportedToProxySelector(okhttp3.URLConnectionTest)
Running test: Test extensionAfterChunkSize(okhttp3.URLConnectionTest)
Running test: Test contentDisagreesWithContentLengthHeaderBodyTooLong(okhttp3.URLConnectionTest)
Running test: Test connectionCloseWithRedirect(okhttp3.URLConnectionTest)
Running test: Test sslFallbackNotUsedWhenRecycledConnectionFails(okhttp3.URLConnectionTest)
Running test: Test response308WithHead(okhttp3.URLConnectionTest)
Running test: Test response308WithPost(okhttp3.URLConnectionTest)
Running test: Test contentDisagreesWithContentLengthHeaderBodyTooShort(okhttp3.URLConnectionTest)
Running test: Test defaultRequestProperty(okhttp3.URLConnectionTest)
Running test: Test redirectWithAuthentication(okhttp3.URLConnectionTest)
Running test: Test connectViaProxyUsingProxyArg(okhttp3.URLConnectionTest)
Running test: Test attemptAuthorization20Times(okhttp3.URLConnectionTest)
Running test: Test doOutputForMethodThatDoesntSupportOutput(okhttp3.URLConnectionTest)
Running test: Test markAndResetWithContentLengthHeader(okhttp3.URLConnectionTest)
Running test: Test serverClosesSocket(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpProxyToHttpsUsingBadProxyAndHttpResponseCache(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpProxyToHttpsUsingProxyArgWithNoProxy(okhttp3.URLConnectionTest)
Running test: Test connectHttpViaSocketFactory(okhttp3.URLConnectionTest)
Running test: Test testNoSslFallback(okhttp3.URLConnectionTest)
Running test: Test notRedirectedFromHttpsToHttp(okhttp3.URLConnectionTest)
Running test: Test emptyResponseHeaderNameIsLenient(okhttp3.URLConnectionTest)
Running test: Test gzipWithRedirectAndConnectionReuse(okhttp3.URLConnectionTest)
Running test: Test redirectedWithNoLengthHeaders(okhttp3.URLConnectionTest)
Running test: Test fullyBufferedPostIsTooShort(okhttp3.URLConnectionTest)
Running test: Test fixedLengthUpload_smallBuffers(okhttp3.URLConnectionTest)
Running test: Test bug2939(okhttp3.URLConnectionTest)
Running test: Test proxySelectorHttpWithConnectionReuse(okhttp3.URLConnectionTest)
Running test: Test connectionCloseInResponse(okhttp3.URLConnectionTest)
Running test: Test authenticateWithFixedLengthStreaming(okhttp3.URLConnectionTest)
Running test: Test writeTimeouts(okhttp3.URLConnectionTest)
Running test: Test zeroLengthPost_HTTP_2(okhttp3.URLConnectionTest)
Running test: Test setChunkedStreamingMode(okhttp3.URLConnectionTest)
Running test: Test response307WithGet(okhttp3.URLConnectionTest)
Running test: Test serverSendsUnnecessaryWhitespace(okhttp3.URLConnectionTest)
Running test: Test getContentEncodingConnects(okhttp3.URLConnectionTest)
Running test: Test postEmptyBodyRetransmittedAfterAuthorizationFail(okhttp3.URLConnectionTest)
Running test: Test dnsFailureThrowsIOException(okhttp3.URLConnectionTest)
Running test: Test redirectedPostStripsRequestBodyHeaders(okhttp3.URLConnectionTest)
Running test: Test unexpectedExceptionSync(okhttp3.URLConnectionTest)
Running test: Test connectViaHttps(okhttp3.URLConnectionTest)
Running test: Test urlRedirectToHostWithNul(okhttp3.URLConnectionTest)
Running test: Test getClientRequestTimeout(okhttp3.URLConnectionTest)
Running test: Test response301MovedPermanentlyWithPost(okhttp3.URLConnectionTest)
Running test: Test emptyDataFrameSentWithEmptyBody[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test serverSendsInvalidStatusLine(okhttp3.URLConnectionTest)
Running test: Test transparentGzipWorksAfterExceptionRecovery(okhttp3.URLConnectionTest)
Running test: Test shutdownAfterLateCoalescing[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test gzippedResponseBody[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test connectionWindowUpdateAfterCanceling[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test postRedirectToGetWithStreamedRequest(okhttp3.URLConnectionTest)
Running test: Test postFailsWithChunkedRequestForSmallRequest(okhttp3.URLConnectionTest)
Running test: Test recoverFromOneInternalErrorRequiresNewConnection[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test allAttributesSetInServerAuthenticationCallbacks(okhttp3.URLConnectionTest)
Running test: Test disconnectBeforeConnect(okhttp3.URLConnectionTest)
Running test: Test connectionsArePooled(okhttp3.URLConnectionTest)
Running test: Test readTimeouts(okhttp3.URLConnectionTest)
Running test: Test connectionReuse[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test noDataFramesSentWithNullRequestBody[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test emptyResponse[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test missingPongsFailsConnection[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test chunkedUpload_byteByByte(okhttp3.URLConnectionTest)
Running test: Test redirectedWithChunkedEncoding(okhttp3.URLConnectionTest)
Running test: Test urlWithSpaceInHost(okhttp3.URLConnectionTest)
Running test: Test setInvalidRequestMethodLowercase(okhttp3.URLConnectionTest)
Running test: Test fullyBufferedPostIsTooLong(okhttp3.URLConnectionTest)
Running test: Test redirectToAnotherOriginServer(okhttp3.URLConnectionTest)
Running test: Test authenticateRealmUppercase(okhttp3.URLConnectionTest)
Running test: Test postFailsWithBufferedRequestForSmallRequest(okhttp3.URLConnectionTest)
Running test: Test postBodyRetransmittedAfterAuthorizationFail_HTTP_2(okhttp3.URLConnectionTest)
Running test: Test serverSendsPushPromise_HEAD[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test inputStreamAvailableWithContentLengthHeader(okhttp3.URLConnectionTest)
Running test: Test setProtocols(okhttp3.URLConnectionTest)
Running test: Test contentDisagreesWithChunkedHeaderBodyTooShort(okhttp3.URLConnectionTest)
Running test: Test connectionCloseInRequest(okhttp3.URLConnectionTest)
Running test: Test response307WithOptions(okhttp3.URLConnectionTest)
Running test: Test bodyPermittedOnDelete(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpsReusingConnections(okhttp3.URLConnectionTest)
Running test: Test noDefaultContentLengthOnStreamingPost[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test getOutputStreamOnGetFails(okhttp3.URLConnectionTest)
Running test: Test earlyDisconnectDoesntHarmPoolingWithFixedLengthEncoding(okhttp3.URLConnectionTest)
Running test: Test connectionNotReusedAfterShutdown[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test unauthorizedResponseHandling(okhttp3.URLConnectionTest)
Running test: Test bufferedBodyWithClientRequestTimeout(okhttp3.URLConnectionTest)
Running test: Test response308WithOptions(okhttp3.URLConnectionTest)
Running test: Test authenticateWithCharset(okhttp3.URLConnectionTest)
Running test: Test clientConfiguredCustomContentEncoding(okhttp3.URLConnectionTest)
Running test: Test response303SeeOtherWithPost(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpsWithSSLFallback(okhttp3.URLConnectionTest)
Running test: Test chunkedUpload_smallBuffers(okhttp3.URLConnectionTest)
Running test: Test authenticateNoConnection(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpsToUntrustedServer(okhttp3.URLConnectionTest)
Running test: Test recoverFromOneRefusedStreamReusesConnection[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test setInvalidRequestMethodConnect(okhttp3.URLConnectionTest)
Running test: Test serverShutdownOutput(okhttp3.URLConnectionTest)
Running test: Test readAfterLastByte[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test synchronousRequest[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test responseHeadersAfterGoaway[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test responseHeaders(okhttp3.URLConnectionTest)
Running test: Test redirectedOnHttps(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpsWithSSLFallbackFailuresRecorded(okhttp3.URLConnectionTest)
Running test: Test responseHeaderParsingIsLenient(okhttp3.URLConnectionTest)
Running test: Test fixedLengthUpload_largeBuffers(okhttp3.URLConnectionTest)
Running test: Test singleByteReadIsSigned(okhttp3.URLConnectionTest)
Running test: Test proxyConnectIncludesProxyHeadersOnly(okhttp3.URLConnectionTest)
Running test: Test postBodiesRetransmittedOnIpAddressProblems(okhttp3.URLConnectionTest)
Running test: Test postFailsWithFixedLengthRequestForSmallRequest(okhttp3.URLConnectionTest)
Running test: Test serverSendsInvalidCodeTooLarge(okhttp3.URLConnectionTest)
Running test: Test response305UseProxy(okhttp3.URLConnectionTest)
Running test: Test secureChunkedStreaming(okhttp3.URLConnectionTest)
Running test: Test readAfterLastByte(okhttp3.URLConnectionTest)
Running test: Test serverShutdownInput(okhttp3.URLConnectionTest)
Running test: Test authenticate[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test connectionTimeout[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test inputStreamAvailableWithNoLengthHeaders(okhttp3.URLConnectionTest)
Running test: Test zeroLengthPut(okhttp3.URLConnectionTest)
Running test: Test response307WithHead(okhttp3.URLConnectionTest)
Running test: Test response307WithPost(okhttp3.URLConnectionTest)
Running test: Test customTokenAuthenticator(okhttp3.URLConnectionTest)
Running test: Test response302MovedTemporarilyWithPost(okhttp3.URLConnectionTest)
Running test: Test authenticateWithChunkedStreaming(okhttp3.URLConnectionTest)
Running test: Test postBodyRetransmittedAfterAuthorizationFail(okhttp3.URLConnectionTest)
Running test: Test nonHexChunkSize(okhttp3.URLConnectionTest)
Running test: Test streamedBodyWithClientRequestTimeout(okhttp3.URLConnectionTest)
Running test: Test requestBodySurvivesRetriesWithChunkedStreaming(okhttp3.URLConnectionTest)
Running test: Test getContentLengthConnects(okhttp3.URLConnectionTest)
Running test: Test connectViaProxyUsingProxySystemProperty(okhttp3.URLConnectionTest)
Running test: Test postFailsWithChunkedRequestForLargeRequest(okhttp3.URLConnectionTest)
Running test: Test veryLargeFixedLengthRequest(okhttp3.URLConnectionTest)
Running test: Test oneStreamTimeoutDoesNotBreakConnection[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test zeroLengthPost(okhttp3.URLConnectionTest)
Running test: Test setProtocolsWithoutHttp11(okhttp3.URLConnectionTest)
Running test: Test secureFixedLengthStreaming(okhttp3.URLConnectionTest)
Running test: Test readTimeoutMoreGranularThanBodySize[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test connectViaHttpProxyToHttpsUsingProxySystemProperty(okhttp3.URLConnectionTest)
Running test: Test disconnectedConnection(okhttp3.URLConnectionTest)
Running test: Test getRequestPropertyReturnsLastValue(okhttp3.URLConnectionTest)
Running test: Test connectViaHttpsReusingConnectionsDifferentFactories(okhttp3.URLConnectionTest)
Running test: Test acceptOriginalServerMatchesSubdomain(okhttp3.CookiesTest)
Running test: Test cookieHandlerLikeAndroid(okhttp3.CookiesTest)
Running test: Test testCookiesSentIgnoresCase(okhttp3.CookiesTest)
Running test: Test testRedirectsDoNotIncludeTooManyCookies(okhttp3.CookiesTest)
Running test: Test acceptOriginalServerMatchesExactly(okhttp3.CookiesTest)
Running test: Test testRfc2109Response(okhttp3.CookiesTest)
Running test: Test acceptOriginalServerDoesNotMatchDifferentServer(okhttp3.CookiesTest)
Running test: Test testQuotedAttributeValues(okhttp3.CookiesTest)
Running test: Test testSendingCookiesFromStore(okhttp3.CookiesTest)
Running test: Test testNetscapeResponse(okhttp3.CookiesTest)
Running test: Test acceptOriginalServerMatchesRfc2965Dot(okhttp3.CookiesTest)
Running test: Test receiveAndSendMultipleCookies(okhttp3.CookiesTest)
Running test: Test unsetField(okhttp3.internal.http2.SettingsTest)
Running test: Test merge(okhttp3.internal.http2.SettingsTest)
Running test: Test setFields(okhttp3.internal.http2.SettingsTest)
Running test: Test buildsWhenJdk9(okhttp3.internal.platform.Jdk9PlatformTest)
Running test: Test testToStringIsClassname(okhttp3.internal.platform.Jdk9PlatformTest)
Running test: Test getConnectionIOException_single(okhttp3.internal.connection.RouteExceptionTest)
Running test: Test getConnectionIOException_multiple(okhttp3.internal.connection.RouteExceptionTest)
Running test: Test interruptWritingRequestBody(okhttp3.internal.http.ThreadInterruptTest)
Running test: Test interruptReadingResponseBody(okhttp3.internal.http.ThreadInterruptTest)
Running test: Test verifyCn(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verifySubjectAlt(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verifySubjectAltOnly(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verifyWilcardCn(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verify(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test subjectAltUsesLocalDomainAndIp(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verifyNonAsciiCn(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verifyNonAsciiSubjectAlt(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verifyAsIpAddress(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test wildcardsDoesNotNeedTwoDots(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test subjectAltName(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verifyMultipleCn(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test testWilcardNonAsciiSubjectAlt(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test verifyWilcardCnOnTld(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test wildcardsCannotMatchIpAddresses(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test subjectAltNameWithWildcard(okhttp3.internal.tls.HostnameVerifierTest)
Running test: Test clientCloseWith0Fails(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test unexpectedPongsDoNotInterfereWithFailureDetection(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test closeAfterFlush[h2](okhttp3.internal.http2.HttpOverHttp2Test)
Running test: Test serverCloseThenWritingPingSucceeds(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test clientCloseThenMethodsReturnFalse(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test emptyCloseInitiatesShutdown(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test closeMessageAndConnectionCloseThrowingDoesNotMaskOriginal(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test clientCanWriteMessagesAfterServerClose(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test serverCloseBreaksReadMessageLoop(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test afterSocketClosedPingFailsWebSocket(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test serverCloseThenClientClose(okhttp3.internal.ws.RealWebSocketTest)

okhttp3.internal.ws.RealWebSocketTest > serverCloseThenClientClose FAILED
    java.lang.AssertionError: 
    Expecting empty but was:<[Closed[1000 Hello!]]>
        at okhttp3.internal.ws.WebSocketRecorder.assertExhausted(WebSocketRecorder.java:163)
        at okhttp3.internal.ws.RealWebSocketTest.tearDown(RealWebSocketTest.java:58)
Running test: Test clientCloseClosesConnection(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test closeThrowingFailsConnection(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test socketClosedDuringMessageKillsWebSocket(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test protocolErrorAfterCloseDoesNotSendClose(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test close(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test peerConnectionCloseThrowingPropagates(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test pingOnInterval(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test testBuildsWithJettyBoot(okhttp3.internal.platform.Jdk8WithJettyBootPlatformTest)
Running test: Test testNotBuildWithOther(okhttp3.internal.platform.Jdk8WithJettyBootPlatformTest)
Running test: Test retryableSSLHandshakeException(okhttp3.internal.connection.ConnectionSpecSelectorTest)
Running test: Test nonRetryableSSLHandshakeException(okhttp3.internal.connection.ConnectionSpecSelectorTest)
Running test: Test someFallbacksSupported(okhttp3.internal.connection.ConnectionSpecSelectorTest)
Running test: Test nonRetryableIOException(okhttp3.internal.connection.ConnectionSpecSelectorTest)
Running test: Test cancelReadingResponseBody(okhttp3.internal.http.CancelTest)
Running test: Test cancelWritingRequestBody(okhttp3.internal.http.CancelTest)
Running test: Test clientAuthSkippedForNone(okhttp3.internal.tls.ClientAuthTest)
Running test: Test clientAndServerCloseClosesConnection(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test unacknowledgedPingFailsConnection(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test invalidClientAuthFails(okhttp3.internal.tls.ClientAuthTest)
Running test: Test commonNameIsNotTrusted(okhttp3.internal.tls.ClientAuthTest)
Running test: Test clientAuthForNeeds(okhttp3.internal.tls.ClientAuthTest)
Running test: Test serverCloseClosesConnection(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test networkErrorReportedAsFailure(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test protocolErrorBeforeCloseSendsFailure(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test protocolErrorInCloseResponseClosesConnection(okhttp3.internal.ws.RealWebSocketTest)
Running test: Test readFromBuffer(okhttp3.internal.cache2.RelayTest)
Running test: Test readAfterEdit(okhttp3.internal.cache2.RelayTest)
Running test: Test multipleSources(okhttp3.internal.cache2.RelayTest)
Running test: Test closeBeforeExhaustLeavesDirtyFile(okhttp3.internal.cache2.RelayTest)
Running test: Test racingReaders(okhttp3.internal.cache2.RelayTest)
Running test: Test clientAuthForWants(okhttp3.internal.tls.ClientAuthTest)
Running test: Test missingClientAuthFailsForNeeds(okhttp3.internal.tls.ClientAuthTest)
Running test: Test missingClientAuthSkippedForWantsOnly(okhttp3.internal.tls.ClientAuthTest)
Running test: Test closeFlushes(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientBinary(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test noWritesAfterClose(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientEmptyPing(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientEmptyPong(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverLargeBufferedPayloadWrittenAsOneFrame(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientTextMessage(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test twoMessageSinksThrows(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientCloseWithCode(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test pingTooLongThrows(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverBinaryMessage(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test closeTooLongThrows(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverEmptyClose(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientEmptyClose(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test closeWithOnlyReasonThrows(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverEmptyPing(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverEmptyPong(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test pongTooLongThrows(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientPingWithPayload(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverCloseWithCode(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverCloseWithCodeAndReason(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverMessageLengthShort(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverLargeNonBufferedPayloadWrittenAsMultipleFrames(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test readFromFile(okhttp3.internal.cache2.RelayTest)
Running test: Test serverPingWithPayload(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test closeReservedThrows(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientCloseWithCodeAndReason(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverTextMessage(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test closeCodeOutOfRangeThrows(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test clientPongWithPayload(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverMessageLengthLong(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverPongWithPayload(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test serverSmallBufferedPayloadWrittenAsOneFrame(okhttp3.internal.ws.WebSocketWriterTest)
Running test: Test redundantCallsToCloseAreIgnored(okhttp3.internal.cache2.RelayTest)
Running test: Test singleSource(okhttp3.internal.cache2.RelayTest)
Running test: Test putInvalidatesWithNoContentResponse(okhttp3.CacheTest)
Running test: Test testIfSupported(okhttp3.CorrettoTest)
Running test: Test testMozilla(okhttp3.CorrettoTest)
Running test: Test testGoogle(okhttp3.CorrettoTest)
Running test: Test legalToExecuteTwiceCloning(okhttp3.CallKotlinTest)
Running test: Test testHeadAfterPut(okhttp3.CallKotlinTest)
Running test: Test testGoldenCacheHttpsResponseOkHttp27(okhttp3.CacheTest)
Running test: Test testMockWebserverRequest(okhttp3.CallKotlinTest)
Running test: Test testGoldenCacheHttpsResponseOkHttp30(okhttp3.CacheTest)
Running test: Test requestOnlyIfCachedWithNoResponseCached(okhttp3.CacheTest)
Running test: Test clientSideNoStore(okhttp3.CacheTest)
Running test: Test conditionalHitUpdatesCache(okhttp3.CacheTest)
Running test: Test taskFailsWithUncheckedException(okhttp3.internal.concurrent.TaskRunnerRealBackendTest)
Running test: Test test(okhttp3.internal.concurrent.TaskRunnerRealBackendTest)
Running test: Test statisticsConditionalCacheHit(okhttp3.CacheTest)
Running test: Test maxAgePreferredWithMaxAgeAndExpires(okhttp3.CacheTest)
Running test: Test contentLocationDoesNotPopulateCache(okhttp3.CacheTest)
Running test: Test requestMethodPostIsNotCached(okhttp3.CacheTest)
Running test: Test varyAndHttps(okhttp3.CacheTest)
Running test: Test temporaryRedirectNotCachedWithoutCacheHeader(okhttp3.CacheTest)
Running test: Test clientPrematureDisconnectWithNoLengthHeaders(okhttp3.CacheTest)
Running test: Test noDefaultExpirationForUrlsWithQueryString(okhttp3.CacheTest)
Running test: Test maxAgeInTheFutureWithDateHeader(okhttp3.CacheTest)
Running test: Test serverReturnsDocumentOlderThanCache(okhttp3.CacheTest)
Running test: Test responseCachingAndInputStreamSkipWithChunkedEncoding(okhttp3.CacheTest)
Running test: Test clientSuppliedConditionWithoutCachedResult(okhttp3.CacheTest)
Running test: Test requestPragmaNoCache(okhttp3.CacheTest)
Running test: Test cacheControlNoStoreAndExpirationDateInTheFuture(okhttp3.CacheTest)
Running test: Test requestMethodPutIsNotCached(okhttp3.CacheTest)
Running test: Test varyMultipleFieldsWithMatch(okhttp3.CacheTest)
Running test: Test cacheControlNoCacheAndExpirationDateInTheFuture(okhttp3.CacheTest)
Running test: Test temporaryRedirectCachedWithCacheControlHeader(okhttp3.CacheTest)
Running test: Test requestMaxStale(okhttp3.CacheTest)
Running test: Test varyMultipleFieldsWithNoMatch(okhttp3.CacheTest)
Running test: Test previouslyNotGzippedContentIsNotModifiedAndSpecifiesGzipEncoding(okhttp3.CacheTest)
Running test: Test requestMethodHeadIsNotCached(okhttp3.CacheTest)
Running test: Test getHeadersDeletesCached100LevelWarnings(okhttp3.CacheTest)
Running test: Test varyMatchesRemovedRequestHeaderField(okhttp3.CacheTest)
Running test: Test requestMaxStaleDirectiveWithNoValue(okhttp3.CacheTest)
Running test: Test serverDisconnectsPrematurelyWithNoLengthHeaders(okhttp3.CacheTest)
Running test: Test clientPrematureDisconnectWithContentLengthHeader(okhttp3.CacheTest)
Running test: Test varyAsterisk(okhttp3.CacheTest)
Running test: Test clientSuppliedIfModifiedSinceWithCachedResult(okhttp3.CacheTest)
Running test: Test secureResponseCachingAndProtocolRedirects(okhttp3.CacheTest)
Running test: Test responseSourceHeaderConditionalCacheNotFetched(okhttp3.CacheTest)
Running test: Test clientPrematureDisconnectWithChunkedEncoding(okhttp3.CacheTest)
Running test: Test testGoldenCacheHttpResponseOkHttp30(okhttp3.CacheTest)
Running test: Test connectionIsReturnedToPoolAfterConditionalSuccess(okhttp3.CacheTest)
Running test: Test maxAgePreferredOverHigherMaxAge(okhttp3.CacheTest)
Running test: Test responseSourceHeaderConditionalCacheFetched(okhttp3.CacheTest)
Running test: Test getHeadersRetainsCached200LevelWarnings(okhttp3.CacheTest)
Running test: Test deleteMethodInvalidatesCache(okhttp3.CacheTest)
Running test: Test testGoldenCacheResponse(okhttp3.CacheTest)
Running test: Test getHeadersReturnsNetworkEndToEndHeaders(okhttp3.CacheTest)
Running test: Test networkInterceptorInvokedForConditionalGet(okhttp3.CacheTest)
Running test: Test varyMultipleFieldValuesWithMatch(okhttp3.CacheTest)
Running test: Test etagAndExpirationDateInThePast(okhttp3.CacheTest)
Running test: Test pragmaNoCache(okhttp3.CacheTest)
Running test: Test retainServedDateFormat(okhttp3.CacheTest)
Running test: Test statisticsConditionalCacheMiss(okhttp3.CacheTest)
Running test: Test expirationDateInThePastWithLastModifiedHeader(okhttp3.CacheTest)
Running test: Test responseSourceHeaderFetched(okhttp3.CacheTest)
Running test: Test partialRangeResponsesDoNotCorruptCache(okhttp3.CacheTest)
Running test: Test requestMethodOptionsIsNotCached(okhttp3.CacheTest)
Running test: Test iteratorRemoveOncePerCallToNext(okhttp3.CacheTest)
Running test: Test redirectToCachedResult(okhttp3.CacheTest)
Running test: Test serverDisconnectsPrematurelyWithChunkedEncoding(okhttp3.CacheTest)
Running test: Test combinedCacheHeadersCanBeNonAscii(okhttp3.CacheTest)
Running test: Test defaultExpirationDateFullyCachedForMoreThan24Hours(okhttp3.CacheTest)
Running test: Test maxAgeInThePastWithDateAndLastModifiedHeaders(okhttp3.CacheTest)
Running test: Test responseCachingByResponseCode(okhttp3.CacheTest)
Running test: Test serverDisconnectsPrematurelyWithContentLengthHeader(okhttp3.CacheTest)
Running test: Test emptyResponseHeaderNameFromCacheIsLenient(okhttp3.CacheTest)
Running test: Test requestMethodTraceIsNotCached(okhttp3.CacheTest)
Running test: Test immutableIsCachedAfterMultipleCalls(okhttp3.CacheTest)
Running test: Test requestMethodDeleteIsNotCached(okhttp3.CacheTest)
Running test: Test elementEvictedBetweenHasNextAndNext(okhttp3.CacheTest)
Running test: Test maxAgeInTheFutureWithNoDateHeader(okhttp3.CacheTest)
Running test: Test clientSuppliedIfNoneMatchSinceWithCachedResult(okhttp3.CacheTest)
Running test: Test networkInterceptorNotInvokedForFullyCached(okhttp3.CacheTest)
Running test: Test etag(okhttp3.CacheTest)
Running test: Test immutableIsCached(okhttp3.CacheTest)
Running test: Test requestOnlyIfCachedWithFullResponseCached(okhttp3.CacheTest)
Running test: Test foundNotCachedWithoutCacheHeader(okhttp3.CacheTest)
Running test: Test responseCachingAndInputStreamSkipWithFixedLength(okhttp3.CacheTest)
Running test: Test secureResponseCachingAndRedirects(okhttp3.CacheTest)
Running test: Test iterateCache(okhttp3.CacheTest)
Running test: Test requestOnlyIfCachedWithUnhelpfulResponseCached(okhttp3.CacheTest)
Running test: Test immutableIsNotCachedBeyondFreshnessLifetime(okhttp3.CacheTest)
Running test: Test foundCachedWithExpiresHeader(okhttp3.CacheTest)
Running test: Test evictAll(okhttp3.CacheTest)
Running test: Test defaultExpirationDateFullyCachedForLessThan24Hours(okhttp3.CacheTest)
Running test: Test varyMatchesAbsentRequestHeaderField(okhttp3.CacheTest)
Running test: Test postInvalidatesCacheWithUncacheableResponse(okhttp3.CacheTest)
Running test: Test maxAgePreferredOverLowerSharedMaxAge(okhttp3.CacheTest)
Running test: Test responseCachingAndRedirects(okhttp3.CacheTest)
Running test: Test expiresDateBeforeModifiedDate(okhttp3.CacheTest)
Running test: Test varyMatchesUnchangedRequestHeaderField(okhttp3.CacheTest)
Running test: Test cachePlusCookies(okhttp3.CacheTest)
Running test: Test authorizationRequestFullyCached(okhttp3.CacheTest)
Running test: Test statisticsFullCacheHit(okhttp3.CacheTest)
Running test: Test varyMatchesChangedRequestHeaderField(okhttp3.CacheTest)
Running test: Test iteratorRemoveFromCache(okhttp3.CacheTest)
Running test: Test conditionalHitHeadersCombined(okhttp3.CacheTest)
Running test: Test expirationDateInTheFuture(okhttp3.CacheTest)
Running test: Test maxAgeInTheFutureWithDateAndLastModifiedHeaders(okhttp3.CacheTest)
Running test: Test maxAgeWithLastModifiedButNoServedDate(okhttp3.CacheTest)
Running test: Test temporaryRedirectCachedWithExpiresHeader(okhttp3.CacheTest)
Running test: Test responseSourceHeaderCached(okhttp3.CacheTest)
Running test: Test requestOnlyIfCachedWithConditionalResponseCached(okhttp3.CacheTest)
Running test: Test varyFieldsAreCaseInsensitive(okhttp3.CacheTest)
Running test: Test etagAndExpirationDateInTheFuture(okhttp3.CacheTest)
Running test: Test pragmaNoCacheAndExpirationDateInTheFuture(okhttp3.CacheTest)
Running test: Test elementEvictedBeforeHasNextIsOmitted(okhttp3.CacheTest)
Running test: Test requestMinFresh(okhttp3.CacheTest)
Running test: Test defaultExpirationDateConditionallyCached(okhttp3.CacheTest)
Running test: Test requestMaxAge(okhttp3.CacheTest)
Running test: Test nonIdentityEncodingAndConditionalCache(okhttp3.CacheTest)
Running test: Test notModifiedSpecifiesEncoding(okhttp3.CacheTest)
Running test: Test foundCachedWithCacheControlHeader(okhttp3.CacheTest)
Running test: Test cachedRedirect(okhttp3.CacheTest)
Running test: Test expirationDateInThePastWithNoLastModifiedHeader(okhttp3.CacheTest)
Running test: Test maxAgeInThePastWithDateHeaderButNoLastModifiedHeader(okhttp3.CacheTest)
Running test: Test etagConditionCanBeNonAscii(okhttp3.CacheTest)
Running test: Test requestMethodGetIsCached(okhttp3.CacheTest)
Running test: Test nonIdentityEncodingAndFullCache(okhttp3.CacheTest)
Running test: Test doNotCachePartialResponse(okhttp3.CacheTest)
Running test: Test requestMaxStaleNotHonoredWithMustRevalidate(okhttp3.CacheTest)
Running test: Test secureResponseCaching(okhttp3.CacheTest)
Running test: Test cacheControlNoCache(okhttp3.CacheTest)
Running test: Test gzipAndVaryOnAcceptEncoding(okhttp3.CacheTest)
Running test: Test cacheControlNoStore(okhttp3.CacheTest)
Running test: Test conditionalMissUpdatesCache(okhttp3.CacheTest)
Running test: Test conditionalCacheHitIsNotDoublePooled(okhttp3.CacheTest)
Running test: Test varyMultipleFieldValuesWithNoMatch(okhttp3.CacheTest)
Running test: Test postInvalidatesCache(okhttp3.CacheTest)
Running test: Test putInvalidatesCache(okhttp3.CacheTest)
Running test: Test changedGzippedContentIsNotModifiedAndSpecifiesNewEncoding(okhttp3.CacheTest)
Running test: Test getHeadersReturnsCachedHopByHopHeaders(okhttp3.CacheTest)
Running test: Test requestCacheControlNoCache(okhttp3.CacheTest)
Running test: Test iteratorRemoveWithoutNextThrows(okhttp3.CacheTest)
Running test: Test varyMatchesAddedRequestHeaderField(okhttp3.CacheTest)
Running test: Test responseCachingAndInputStreamSkipWithNoLengthHeaders(okhttp3.CacheTest)
Running test: Test connectionSpecBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test httpLoggingInterceptorLevel(okhttp3.KotlinSourceModernTest)
Running test: Test httpLoggingInterceptor(okhttp3.KotlinSourceModernTest)
Running test: Test handshakeCertificates(okhttp3.KotlinSourceModernTest)
Running test: Test interceptorChain(okhttp3.KotlinSourceModernTest)
Running test: Test requestBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test webSocketListener(okhttp3.KotlinSourceModernTest)
Running test: Test certificatePinner(okhttp3.KotlinSourceModernTest)
Running test: Test multipartBody(okhttp3.KotlinSourceModernTest)
Running test: Test multipartBodyPart(okhttp3.KotlinSourceModernTest)
Running test: Test cookie(okhttp3.KotlinSourceModernTest)
Running test: Test cacheControl(okhttp3.KotlinSourceModernTest)
Running test: Test heldCertificateBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test dispatcher(okhttp3.KotlinSourceModernTest)
Running test: Test address(okhttp3.KotlinSourceModernTest)
Running test: Test webSocket(okhttp3.KotlinSourceModernTest)
Running test: Test protocol(okhttp3.KotlinSourceModernTest)
Running test: Test mockWebServer(okhttp3.KotlinSourceModernTest)
Running test: Test connection(okhttp3.KotlinSourceModernTest)
Running test: Test handshakeCertificatesBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test httpUrlBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test eventListener(okhttp3.KotlinSourceModernTest)
Running test: Test pushPromise(okhttp3.KotlinSourceModernTest)
Running test: Test response(okhttp3.KotlinSourceModernTest)
Running test: Test cacheControlBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test callback(okhttp3.KotlinSourceModernTest)
Running test: Test socketPolicy(okhttp3.KotlinSourceModernTest)
Running test: Test multipartBodyBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test httpLoggingInterceptorLogger(okhttp3.KotlinSourceModernTest)
Running test: Test formBodyBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test dns(okhttp3.KotlinSourceModernTest)
Running test: Test call(okhttp3.KotlinSourceModernTest)
Running test: Test handshake(okhttp3.KotlinSourceModernTest)
Running test: Test cache(okhttp3.KotlinSourceModernTest)
Running test: Test route(okhttp3.KotlinSourceModernTest)
Running test: Test cookieJar(okhttp3.KotlinSourceModernTest)
Running test: Test loggingEventListenerFactory(okhttp3.KotlinSourceModernTest)
Running test: Test credentials(okhttp3.KotlinSourceModernTest)
Running test: Test heldCertificate(okhttp3.KotlinSourceModernTest)
Running test: Test dispatcherFromMockWebServer(okhttp3.KotlinSourceModernTest)
Running test: Test okHttpClientBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test formBody(okhttp3.KotlinSourceModernTest)
Running test: Test javaNetAuthenticator(okhttp3.KotlinSourceModernTest)
Running test: Test okHttpClient(okhttp3.KotlinSourceModernTest)
Running test: Test recordedRequest(okhttp3.KotlinSourceModernTest)
Running test: Test headers(okhttp3.KotlinSourceModernTest)
Running test: Test responseBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test mockResponse(okhttp3.KotlinSourceModernTest)
Running test: Test javaNetCookieJar(okhttp3.KotlinSourceModernTest)
Running test: Test certificatePinnerBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test request(okhttp3.KotlinSourceModernTest)
Running test: Test requestBody(okhttp3.KotlinSourceModernTest)
Running test: Test httpUrl(okhttp3.KotlinSourceModernTest)
Running test: Test connectionPool(okhttp3.KotlinSourceModernTest)
Running test: Test connectionSpec(okhttp3.KotlinSourceModernTest)
Running test: Test testAddInterceptor(okhttp3.KotlinSourceModernTest)
Running test: Test challenge(okhttp3.KotlinSourceModernTest)
Running test: Test responseBody(okhttp3.KotlinSourceModernTest)
Running test: Test tlsVersion(okhttp3.KotlinSourceModernTest)
Running test: Test authenticator(okhttp3.KotlinSourceModernTest)
Running test: Test queueDispatcher(okhttp3.KotlinSourceModernTest)
Running test: Test interceptor(okhttp3.KotlinSourceModernTest)
Running test: Test headersBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test eventListenerBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test cookieBuilder(okhttp3.KotlinSourceModernTest)
Running test: Test cipherSuite(okhttp3.KotlinSourceModernTest)
Running test: Test mediaType(okhttp3.KotlinSourceModernTest)
Running test: Test loggingEventListener(okhttp3.KotlinSourceModernTest)
Running test: Test immutableMap(okhttp3.internal.UtilTest)
Running test: Test testBuildIfSupported(okhttp3.OpenJSSETest)
Running test: Test testSupportedProtocols(okhttp3.OpenJSSETest)
Running test: Test testMozilla(okhttp3.OpenJSSETest)
Running test: Test testTlsv13Works(okhttp3.OpenJSSETest)

2372 tests completed, 8 failed, 123 skipped

> Task :okhttp:test FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':okhttp:test'.
> There were failing tests. See the report at: file:///home/damorim/Software/okhttp/okhttp/build/reports/tests/test/index.html

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.
Use '--warning-mode all' to show the individual deprecation warnings.
See https://docs.gradle.org/6.0.1/userguide/command_line_interface.html#sec:command_line_warnings

BUILD FAILED in 1m 41s
34 actionable tasks: 1 executed, 33 up-to-date
