public void testCheckSupportedFilesystem() throws Exception {
    Configuration hConf = Services.get().getConf();
    // Only allow hdfs and foo schemes
    HadoopAccessorService has = new HadoopAccessorService();
    hConf.set("oozie.service.HadoopAccessorService.supported.filesystems", "hdfs,foo");
    has.init(hConf);
    has.checkSupportedFilesystem(new URI("hdfs://localhost:1234/blah"));
    has.checkSupportedFilesystem(new URI("foo://localhost:1234/blah"));
    try {
        has.checkSupportedFilesystem(new URI("file://localhost:1234/blah"));
        fail("Should have thrown an exception because 'file' scheme isn't allowed");
    } catch (HadoopAccessorException hae) {
        assertEquals(ErrorCode.E0904, hae.getErrorCode());
    }
    // giving no scheme should skip the check
    has.checkSupportedFilesystem(new URI("/blah"));
    // allow all schemes
    has = new HadoopAccessorService();
    hConf.set("oozie.service.HadoopAccessorService.supported.filesystems", "*");
    has.init(hConf);
    has.checkSupportedFilesystem(new URI("hdfs://localhost:1234/blah"));
    has.checkSupportedFilesystem(new URI("foo://localhost:1234/blah"));
    has.checkSupportedFilesystem(new URI("file://localhost:1234/blah"));
    // giving no scheme should skip the check
    has.checkSupportedFilesystem(new URI("/blah"));
}
