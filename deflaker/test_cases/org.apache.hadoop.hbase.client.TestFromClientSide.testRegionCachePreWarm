/**
 * HBASE-2468 use case 3:
 */
@Test
public void testRegionCachePreWarm() throws Exception {
    final byte[] TABLENAME = Bytes.toBytes("testCachePrewarm");
    Configuration conf = TEST_UTIL.getConfiguration();
    // Set up test table:
    // Create table:
    TEST_UTIL.createTable(TABLENAME, FAMILY);
    // disable region cache for the table.
    HTable.setRegionCachePrefetch(conf, TABLENAME, false);
    assertFalse("The table is disabled for region cache prefetch", HTable.getRegionCachePrefetch(conf, TABLENAME));
    HTable table = new HTable(conf, TABLENAME);
    // create many regions for the table.
    TEST_UTIL.createMultiRegions(table, FAMILY);
    // A Get is suppose to do a region lookup request
    Get g = new Get(Bytes.toBytes("aaa"));
    table.get(g);
    // only one region should be cached if the cache prefetch is disabled.
    assertEquals("Number of cached region is incorrect ", 1, HConnectionManager.getCachedRegionCount(conf, TABLENAME));
    // now we enable cached prefetch.
    HTable.setRegionCachePrefetch(conf, TABLENAME, true);
    assertTrue("The table is enabled for region cache prefetch", HTable.getRegionCachePrefetch(conf, TABLENAME));
    HTable.setRegionCachePrefetch(conf, TABLENAME, false);
    assertFalse("The table is disabled for region cache prefetch", HTable.getRegionCachePrefetch(conf, TABLENAME));
    HTable.setRegionCachePrefetch(conf, TABLENAME, true);
    assertTrue("The table is enabled for region cache prefetch", HTable.getRegionCachePrefetch(conf, TABLENAME));
    table.getConnection().clearRegionCache();
    assertEquals("Number of cached region is incorrect ", 0, HConnectionManager.getCachedRegionCount(conf, TABLENAME));
    // if there is a cache miss, some additional regions should be prefetched.
    Get g2 = new Get(Bytes.toBytes("bbb"));
    table.get(g2);
    // get the configured number of cache read-ahead regions
    int prefetchRegionNumber = conf.getInt("hbase.client.prefetch.limit", 10);
    // the total number of cached regions == region('aaa") + prefeched regions.
    assertEquals("Number of cached region is incorrect ", prefetchRegionNumber, HConnectionManager.getCachedRegionCount(conf, TABLENAME));
    table.getConnection().clearRegionCache();
    Get g3 = new Get(Bytes.toBytes("abc"));
    table.get(g3);
    assertEquals("Number of cached region is incorrect ", prefetchRegionNumber, HConnectionManager.getCachedRegionCount(conf, TABLENAME));
}
