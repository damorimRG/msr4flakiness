/**
 * Negative Test : rerun <jobId> -action 1 -nocleanup. Coordinator job is killed, so no actions are able to rerun.
 *
 * @throws Exception
 */
public void testCoordRerunNeg() throws Exception {
    final String jobId = "0000000-" + new Date().getTime() + "-testCoordRerun-C";
    final int actionNum = 1;
    final String actionId = jobId + "@" + actionNum;
    CoordinatorStore store = Services.get().get(StoreService.class).getStore(CoordinatorStore.class);
    store.beginTrx();
    try {
        addRecordToJobTable(jobId, store, CoordinatorJob.Status.KILLED);
        addRecordToActionTable(jobId, actionNum, actionId, store, CoordinatorAction.Status.SUCCEEDED, "coord-rerun-action1.xml");
        store.commitTrx();
    } catch (Exception e) {
        e.printStackTrace();
        fail("Could not update db.");
    } finally {
        store.closeTrx();
    }
    try {
        final OozieClient coordClient = LocalOozie.getCoordClient();
        coordClient.reRunCoord(jobId, RestConstants.JOB_COORD_RERUN_ACTION, Integer.toString(actionNum), false, true);
        fail("Exception expected because action is not in terminal state.");
    } catch (OozieClientException ex) {
        if (!ex.getErrorCode().equals(ErrorCode.E1018.toString())) {
            fail("Error code should be E1018 when job is killed or failed.");
        }
    }
    CoordinatorStore store2 = Services.get().get(StoreService.class).getStore(CoordinatorStore.class);
    store2.beginTrx();
    CoordinatorActionBean action2 = store2.getCoordinatorAction(actionId, false);
    assertEquals(action2.getStatus(), CoordinatorAction.Status.SUCCEEDED);
    store2.commitTrx();
    store2.closeTrx();
}
