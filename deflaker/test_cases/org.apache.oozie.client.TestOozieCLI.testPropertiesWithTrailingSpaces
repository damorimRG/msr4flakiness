public void testPropertiesWithTrailingSpaces() throws Exception {
    runTest(END_POINTS, SERVLET_CLASSES, IS_SECURITY_ENABLED, new Callable<Void>() {

        @Override
        public Void call() throws Exception {
            MockDagEngineService.reset();
            String oozieUrl = getContextURL();
            Path appPath = new Path(getFsTestCaseDir(), "app");
            getFileSystem().mkdirs(appPath);
            getFileSystem().create(new Path(appPath, "workflow.xml")).close();
            String[] args = new String[] { "job", "-submit", "-oozie", oozieUrl, "-config", createPropertiesFileWithTrailingSpaces(appPath.toString()) };
            assertEquals(0, new OozieCLI().run(args));
            assertEquals("submit", MockDagEngineService.did);
            String confStr = MockDagEngineService.workflows.get(MockDagEngineService.INIT_WF_COUNT).getConf();
            XConfiguration conf = new XConfiguration(new StringReader(confStr));
            assertNotNull(conf.get(OozieClient.RERUN_SKIP_NODES));
            assertEquals("node", conf.get(OozieClient.RERUN_SKIP_NODES));
            return null;
        }
    });
}
