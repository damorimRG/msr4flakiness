export function main() {
  describe('element probe', function() {
    beforeEachProviders(() => [provide(APP_VIEW_POOL_CAPACITY, {useValue: 0})]);

    it('should return a TestElement from a dom element',
       inject([TestComponentBuilder, AsyncTestCompleter], (tcb: TestComponentBuilder, async) => {
         tcb.overrideTemplate(MyComp, '<div some-dir></div>')
             .createAsync(MyComp)
             .then((componentFixture) => {
               expect(inspectNativeElement(componentFixture.debugElement.nativeElement)
                          .componentInstance)
                   .toBeAnInstanceOf(MyComp);

               async.done();
             });
       }));

    it('should clean up whent the view is destroyed',
       inject([TestComponentBuilder, AsyncTestCompleter], (tcb: TestComponentBuilder, async) => {
         tcb.overrideTemplate(MyComp, '')
             .createAsync(MyComp)
             .then((componentFixture) => {
               componentFixture.destroy();
               expect(inspectNativeElement(componentFixture.debugElement.nativeElement)).toBe(null);

               async.done();
             });

       }));

    if (!IS_DART) {
      it('should provide a global function to inspect elements',
         inject([TestComponentBuilder, AsyncTestCompleter], (tcb: TestComponentBuilder, async) => {
           tcb.overrideTemplate(MyComp, '')
               .createAsync(MyComp)
               .then((componentFixture) => {
                 expect(global['ng']['probe'](componentFixture.debugElement.nativeElement)
                            .componentInstance)
                     .toBeAnInstanceOf(MyComp);

                 async.done();
               });
         }), 10000);
    }
  });
}
