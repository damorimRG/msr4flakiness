v6
lastError
threadManager
createUnpacker
data
randomPort
logger
testReconnection
put
 writing to the closed socket
ExponentialDelayReconnector
 start mock fluentd
 close loggers
Closing the current fluentd instance
host
TimeUnit
join
info
localhost
add
read
unpacker
test01
in
k1
k2
MockFluentd
_logger
k3
fluentd2
getLogger
k4
k5
fluentd1
 the logger should fail to send an event
k6
closeAll
getInputStream
ex
size
port
 wait for unpacking event data on fluentd
errorHandler
handleNetworkError
msgpack
waitUntilReady
submit
log
 repeat twice to test both behaviors on socket write error and connection error
assertFalse
isConnected
 run the fluentd again
 close the fluentd to make the situation that the fluentd gets down
removeErrorHandler
sleep
 check data
 Clear the last error
 the logger shouldn't call the error handler after calling removeErrorHandler()
assertTrue
 start a logger
get
FluentLogger
close
process
set
 run a fluentd
e
assertEquals
Thread
closeClientSockets
elist1
assertNull
elist2
setErrorHandler
testtag.test01
socket
v1
v2
v3
v4
testtag
v5
